https://github.com/huggingface/smolagents
https://github.com/huggingface/smolagents/tree/main/examples/open_deep_research

#####################################################
AI Knowledge Assistants
#####################################################

https://www.freecodecamp.org/news/langchain-alternatives-for-building-ai-and-agentic-workflows/
https://www.braintrust.dev/docs/start
https://flowiseai.com/
https://docs.flowiseai.com/getting-started
https://langbase.com/
https://langbase.com/docs/pipe
https://langbase.com/docs/memory
https://baseai.dev/
https://www.langui.dev/
https://langbase.com/docs/api-reference/memory
https://langbase.com/docs/api-reference/pipe
https://langbase.com/docs
https://www.llamaindex.ai/
https://llamahub.ai/?tab=readers
https://docs.llamaindex.ai/en/stable/#getting-started


https://github.com/Significant-Gravitas/Auto-GPT-Benchmarks
https://github.com/Significant-Gravitas/AutoGPT


##########################################
ai-agents
##########################################

https://github.com/deepcharts/projects/blob/main/scikit-ollama-tutorial.ipynb
https://github.com/deepcharts/projects/blob/main/ai_coding_agent_tutorial.ipynb
https://github.com/deepcharts/projects/blob/main/ai_image_generator.py
https://github.com/deepcharts/projects/blob/main/ai_sentiment_analysis_gemini.ipynb
https://github.com/deepcharts/projects/blob/main/ai_image_generator.py

##########################################
Start Building with GroqCloud (Agents AI GUI)
##########################################
https://groq.com/community/

https://deepagent.abacus.ai/
https://www.tempo.new/
https://www.servicenow.com/products/ai-agents.html

https://github.com/Fosowl/agenticSeek

##########################################
Agentico
##########################################

https://github.com/agentico-dev/mcp
https://github.com/orgs/agentico-dev/repositories
https://iofog.org/docs/2/reference-iofogctl/reference-agent.html
https://docs.semaphoreci.com/reference/agent-yaml

------------------------------------------------------------

##########################################
CopilotKit
##########################################
https://github.com/CopilotKit/CopilotKit
https://docs.ag-ui.com/introduction
https://github.com/ag-ui-protocol/ag-ui
https://docs.copilotkit.ai/

##########################################
n8n npmjs local
##########################################
https://docs.n8n.io/hosting/installation/npm/
https://www.npmjs.com/package/n8n

----------------------------------------------------------------

Clay: Clay AI agent automates outbound email and linkedin cold campaigns via our defined customer persona

Windsurf: All our developers pay for Windsurf and uses the AI agent mode to write code much faster. Our engineering team is at-least 2x faster with the same team now

Frizerly: Automates SEO blogs daily on our Wordpress website to improve our Google organic ranking!
Intercom Fin: We use the Intercom Fin AI agent to resolve about 25% of customer support automatically.
V0 by Vercel: Our product team uses V0 AI Agent to create quick ui prototypes for MVPs etc

-----

MCP tools:

Context7 for finding relevant, up-to-date docs
Sequential thinking for grounding the LLM
Cursor for running SQL and analyzing backend setup
Playwright for testing
Taskmaster for project management
Super Whisper for voice-to-text,

-----------------------

Cognism – Gives us GDPR-compliant contacts, plus firmographic and intent data to work with.

Outreach – it's got lead prioritization, follow-ups, and sequencing with a solid layer of AI on top.

100x Bot – automates LI Sales Nav and BD stuff (outreach, email finding, etc). might be rolling something out in the Ads space soon.

Octave – Built by ex-LinkedIn and Dropbox folks. Helps you define your ICP and spin up GTM messaging using GPT and Claude.

Reclaim AI – Smart calendar assistant that auto-schedules tasks, meetings, and routines. Good for keeping the whole team on track without the back-and-forth.


---------------------
Devin AI
Devin is solid for code tasks but still limited.
ChatGPT w/ custom GPTs works decently for workflows if you tune it right.
AgentOps is interesting for managing long-running agents.

https://www.joinbloom.ai/
https://awesome-agent-hub.vercel.app/
https://github.com/Arindam200/awesome-ai-apps
https://openai.com/index/introducing-operator/
https://github.com/e2b-dev/awesome-ai-agents
https://www.cursor.com/
https://www.promarkia.com/#integrations
https://github.com/lastmile-ai/mcp-agent
https://monica.im/
https://askbeny.com/pro/
https://github.com/block/goose
https://github.com/toolsdk-ai/awesome-mcp-registry
---------------------

Replit.com for building Internal apps
Kling for making videos (UGC's)
SmartAds.co creative facebook ad/ instagram ad creatives
Clay.com for cold outreach
Reclaim.ai for calender management

- Cursor's Agent for development
- Pointer's Agent for anything local development or computer related
- OAI's Deep Research for heavy topics
- V0 Vercel to build fast mockups or components

---

Parlant IO : Super underrated. It's great for building structured multi agent workflows with explainable outputs. I've used it for automating lead qualification and follow-up, and it doesn't hallucinate random stuff like some LLMs do. Think of it like rule based + LLM = reliable automation.

AutoGen (from Microsoft) : really solid for orchestrating multi agents that collaborate. I use it to have one agent pull analytics, another draft reports, and a third write client ready emails. It's surprisingly plug and play now.

Crew AI : More focused on team based agents. I tested it for managing content marketing one agent ideated, another outlined, another wrote. With the right prompts, it's like hiring a small virtual team.

ZetaOps: If you're into sales and CRM, this one acts like persistent AI sales assistant. Integrates with email plus CRM and does task reminders, nudges, and even drafts custom responses.

ChatGPT +custom GPTs : Don't underestimate this. I've built a few custom GPTs for SOP generation, onboarding, and meeting summarization. If you're not deep into coding, this is the easiest gateway!

---------------

I do most coding in AWS cloud native building AI RAG + AWS Titan, IoT architecture, enterprise grade SaaS mobile app and POC for web page, email automation template etc. here are my tools

Cursor + Sonnet 3.5 / 3.7 - depending on the difficulty of bugs to fix

TypingMind with Sonnet 3.5 and above for building extremely complex network topology - no one comes close!

VSC + Sonnet 3.5 and above - building web page. Started using V0 and Lovebable lately - this is the future of building web app with Cursor

ChatGPT o3 for troubleshooting codes Gemini for casual brain codes , ideas etc Grok2 was good but pricey

-------------
https://n8n.io/

Agentic AI

AskUI Vision Agents

Key Features:

AI Vision Technology: Detects and interacts with UI elements in any application.
Cross-Application Control: Enables automation across various desktop applications.
Prompt-to-Action (PTA): Translates natural language into executable actions.
AskUI Models: Leverages pre-trained models or allows retraining with custom data.
Customizable Agents: Tailors agents for specific tasks like QA testing or document extraction.
Integration Friendly: Integrates with tools like Zapier, n8n, and Docker.
Scalable Deployment: Supports local, cloud, or hybrid deployment.

LandingLens
LandingLens is offered as a standalone product and also has an integration with Snowflake, the data cloud platform.
VisionAgent is another offering from Landing AI, positioned as your "Visual AI Pilot".


Adept’s capabilities include:
Locate: Accurately finding elements on webpages or applications.
Web VQA: Answering questions about web content, including documents, PDFs, and charts.
Planning: Executing complex, end-to-end workflows within enterprises.


automaited
automaited provides AI-driven automation specifically for document-centric business processes.

Claude 3.5 Sonnet Computer Use
Tool Provisioning and Prompt: The user provides Claude with a set of tools and a prompt that might necessitate their use.
Tool Use Decision: Claude evaluates the provided tools and, if necessary, constructs a tool use request, indicated by a  stop_reason  of  tool_use  in the API response.
Tool Execution and Result Return: The user's application extracts the tool input, executes the tool on a computer, and returns the results to Claude using a  tool_result  content block.
Agent Loop: Steps 3 and 4 repeat until the task is complete. If more tools are needed, Claude responds with another  tool_use   stop_reason. Otherwise, it generates a text response to the user.

CrewAI
Build Quickly: Users can construct multi-agent automations using CrewAI's framework, UI Studio, no-code tools, or templates.
Deploy Confidently: Tools are provided to move crews into production, including different deployment types and UI auto-generation.
Track All Your Crews: Users can monitor their crews’ performance and progress on simple and complex tasks.
Iterate To Perfection: Testing and training tools are available to refine the efficiency and results of built crews.


AutoGPT features:
Seamless Integration: Connects effortlessly with tools without complex coding.
Autonomous Operation: AI agents work in the background.
Intelligent Automation: Reduces repetitive tasks and saves time.
Reliable Performance: 24/7 operation with consistent results.
AutoGPT also integrates with several LLMs: OpenAI, Anthropic, Groq, and Llama.



Open Interpreter bridges the gap between language models and code execution, enabling a ChatGPT-like interface in your terminal.


Beam AI’s featureset includes:
AI Agents: They provide continuous operation, reducing errors, increasing productivity, and enabling businesses to scale without extra human resources.
Agentic Workflows: These leverage advanced learning systems to autonomously identify and automate crucial tasks, ensuring operations remain smooth and responsive.
Multi-Agent Intelligence: It integrates several AI agents to automate comprehensively and cohesively, increasing organization-wide productivity.
AI-native Agent OS: It offers accuracy, reliability, and flexibility in a single platform, acting as the glue between existing systems.


creenMate AI is well-suited for:
E-commerce Automation: Keeping catalogs and prices up-to-date.
UI Testing: Simulating user interactions.
Data Collection & Scraping: Gathering web data without custom scripts.
Customer Support Automation: Streamlining onboarding and interactions.

https://www.askui.com/blog-posts/top-14-agentic-ai-tools
---------------------

CogSTEP, Cognitive Semantic Enhancement and Transformation Pipelines.

supabase or postgres for state, pinecone or qdrant for semantic memory, gpt-4o or claude for reasoning, langchain planner or crewai for planning, and sometimes simulate loops in n8n by simply calling the workflow again with updated state. for very basic multi-agent coordination i’ve used supabase realtime or redis pubsub

reactive agents — these are the simplest form. input comes in, agent reacts. no state, no memory, no long-term reasoning. faq bots for example. you take user input, send it to gpt-4 or claude, return the answer. super easy to build fully inside n8n. honestly this is what most people today call “ai agents” in SaaS but technically speaking it’s just automation with LLM calls on top

deliberative agents — now you’re building systems that actually try to model the world a little bit. like pulling traffic, weather, or historical data and making decisions based on that. this you can actually build in n8n, if you wire everything manually. you connect external apis, store data in supabase or postgres, run reasoning inside gpt-4 calls. but you’re writing the full logic flow. n8n isn’t deciding by itself

goal-based agents — these work toward specific objectives. like a sales agent qualifying leads, adapting its approach, trying to close a deal. in n8n you can build partial flows for this: store lead state, query pinecone or qdrant for embeddings, inject that into prompts. but you still have to handle the whole decision logic yourself. n8n doesn’t track goals or adjust behavior automatically over time

utility-based agents — these don’t just follow goals but optimize across multiple variables for best outcomes. like dynamic pricing models reacting to demand, inventory, competition. here n8n simply doesn’t have the tools. you’ll need external ML models, optimization engines, forecasting algorithms. n8n might orchestrate calls but doesn’t handle the core optimization logic

learning agents — these actually improve over time by learning from experience. like a support bot fine-tuning itself using past conversations and user feedback. n8n can absolutely help orchestrate data collection, prep datasets, kick off fine-tuning jobs. but the learning system itself fully lives outside of n8n. the learning logic is not inside your workflow builder

hybrid agents — these combine both planning and instant reactions. autonomous vehicles are a classic example. they plan full routes but react immediately to obstacles. real-time, multi-layered reasoning. this kind of agent behavior is not something you can simulate inside n8n. workflows aren’t designed for real-time closed-loop reasoning

multi-agent systems — here you’ve got multiple agents coordinating, negotiating, working together. like agents handling different parts of a supply chain. n8n can absolutely help orchestrate external systems but true agent-to-agent coordination requires pub/sub layers, message brokers, distributed systems. n8n isn’t built to be that communication layer

