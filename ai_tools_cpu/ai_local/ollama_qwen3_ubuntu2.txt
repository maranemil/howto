

####################################################################
7gb - ollama docker
####################################################################

https://docs.docker.com/engine/containers/resource_constraints/
https://github.com/wsargent/docker-cheat-sheet#lifecycle
https://ollama.com/blog/structured-outputs
https://ollama.com/search?c=tools
https://qwenlm.github.io/blog/qwen3/
https://github.com/QwenLM/Qwen3
https://qwen3.org/
https://ollama.com/library/qwen3
https://huggingface.co/Qwen/Qwen3-235B-A22B
https://qwenlm.github.io/


docker run -it ubuntu /bin/bash
docker run -it --name ubuntu2004  -v ./src:/app ubuntu:20.04 /bin/bash;
docker run -it  --cpus=".5"  -v ./src:/app ubuntu:20.04 /bin/bash;
docker run --cpus=0.5 -it --name ubuntu2004  -v ./src:/app ubuntu:20.04 /bin/bash;
docker run -it  --cpus=0.5 ubuntu:20.04  /bin/bash
docker ps -la


docker inspect
docker stats
kubectl scale --cpu=50 deployment my-deployment
docker run --cpus=".5" image_name

apt update
apt install tmux
apt install curl
curl -fsSL https://ollama.com/install.sh | sh
ollama serve
ollama run qwen3:0.6b
ollama run deepseek-r1:1.5b

/set nothink
ollama run gwen3 --think=false
ollama run gwen3 --hidethinking

/?
Available Commands:
  /set            Set session variables
  /show           Show model information
  /load <model>   Load a session or model
  /save <model>   Save your current session
  /clear          Clear session context
  /bye            Exit
  /?, /help       Help for a command
  /? shortcuts    Help for keyboard shortcuts


/set
Available Commands:
  /set parameter ...     Set a parameter
  /set system <string>   Set system message
  /set history           Enable history
  /set nohistory         Disable history
  /set wordwrap          Enable wordwrap
  /set nowordwrap        Disable wordwrap
  /set format json       Enable JSON mode
  /set noformat          Disable formatting
  /set verbose           Show LLM stats
  /set quiet             Disable LLM stats
  /set think             Enable thinking
  /set nothink           Disable thinking

  /show
Available Commands:
  /show info         Show details for this model
  /show license      Show model license
  /show modelfile    Show Modelfile for this model
  /show parameters   Show parameters for this model
  /show system       Show system message
  /show template     Show prompt template

####################################################################
python
####################################################################

from ollama import Ollama

client = Ollama()

response = client.generate(
    model="llama2",
    prompt="Explain the benefits of AI in small business.",
    temperature=0.5
)

print(response.text)


####################################################################
####################################################################
ollama show --parameters qwen3:0.6b
docker exec -it ollama bash -c 'apt update && apt install -y tcpflow'
docker exec -it ollama tcpflow -i any -c 'not port 11434'
sudo tcpflow -c -i any "$(ps wwp$(pidof ollama_llama_server) | sed -ne 's/.*--port /port /p' | sed -ze 's/\n\(.\)/ or \1/g')"

https://ollama.com/download
https://snapcraft.io/ollama
sudo snap install ollama
sudo snap install ollama --channel=beta

####################################################################
Dockerfile
####################################################################
FROM Llama3.1
# Parameters
PARAMETER temperature 0.4
PARAMETER top_p 0.4
PARAMETER top_k 30
PARAMETER num_ctx 1024
PARAMETER num_predict 2048

####################################################################
tmux
####################################################################
https://tmuxcheatsheet.com/
ctrl + b  c  new
ctrl + b p - prev
ctrl + b n - next
ctrl + b ;  - last active panel
ctrl + b % - split h
ctrl + b " - split v
ctrl + b x - close



####################################################################
cpulimit
####################################################################
systemd-run -p CPUQuota=20% chrome
sudo apt-get install cpulimit
cpulimit -l 20 ghb


systemctl reboot -i

####################################################################
docker *
####################################################################

docker run --name mycontainer -d -i -t alpine /bin/sh
docker exec -d mycontainer touch /tmp/execWorks
docker exec mycontainer sh
docker stop mycontainer
docker start mycontainer
docker run --rm will remove the container after it stops.

docker create creates a container but does not start it.
docker rename allows the container to be renamed.
docker run creates and starts a container in one operation.
docker rm deletes a container.
docker update updates a container's resource limits.

---------------------------------------------------------------------

chat
rewrite
image prompt gen

---------------------------------------------------------------------

https://huggingface.co/C10X/Qwen3-Embedding-Turbo
https://huggingface.co/Qwen/Qwen3-Embedding-0.6B
https://huggingface.co/TinyLlama/TinyLlama-1.1B-Chat-v1.0

docker update --cpus "1.5" --gpus 2 --gpus '"device=1,2"' myollamacontainer

https://docs.docker.com/compose/how-tos/gpu-support/
https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/docker-specialized.html



----------------------------------------------------------------------------

######################################
wget usage examples
######################################


wget -E -H -k -K -p http://www.example.com/
wget -nd -r -P /save/location -A jpeg,jpg,bmp,gif,png http://www.somedomain.com
wget -r -P /save/location -A jpeg,jpg,bmp,gif,png http://www.boia.de --cut-dirs=1 --cut-dirs=2 --cut-dirs=3
wget --output-document=images_icons_linux-bsd.gif https://www.electrictoolbox.com/images/icons/linux-bsd.gif
wget -nd -r -P /save/location -A jpeg,jpg,bmp,gif,png http://www.somedomain.com
wget -i -F foo.txt -B http://www.sample.com/images/imag/foo.jpg
wget --output-document=images_icons_linux-bsd.gif https://www.electrictoolbox.com/images/icons/linux-bsd.gif
wget -r -nd -A jpg --accept-regex "https://alwaysSamePart.com/.*.jpg" https://whatever_domain.com
wget -i input_file.txt

wget -U "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:49.0) Gecko/20100101 Firefox/49.0" -nd -r --level=1  -e robots=off -A jpg,jpeg -H http://pixabay.com/

wget -bqre robots=off -A.html,.php example.com –user-agent=”Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.6) Gecko/20070725 Firefox/2.0.0.6″

curl "http://example.com/images/ABC[0000-9999].jpg" -o "ABC#1.jpg"

URL="https://www.gravatar.com/avatar/554f043fa658cba9bbc2ee4c6d4e052d?d=identicon"
timestamp=$(date +%F_%T);
wget "$URL" -O "${timestamp}.png"


######################################
ollama llava describe image
######################################

apt install wget
wget https://cdn.pixabay.com/photo/2023/06/04/00/34/flowers-8038712_1280.jpg -O flowers.jpg

ollama run llava "describe this image: ./tmp/pics/flowers.jpg"
ollama run llava "describe this image in detail: ./tmp/pics/flowers.png"
ollama run llava "describe this image briefly: ./tmp/pics/flowers.png"

ollama run llava "Summarize the content of the picture in one sentence: ./tmp/pics/flowers.png"
ollama run llava "describe in detail what is in the picture, including objects, people, animals, and the atmosphere and mood of the picture: ./tmp/pics/flowers.png"

ollama run llava:7b "describe this image: ./tmp/pics/flowers.png"

https://imagedescriber.online/
https://pasteboard.co/

ollama run llava:7b "Generate a futuristic image"