Act as a senior Python developer

Act as an expert SQL database administrator. Write a SQL query that…

You are a helpful assistant specializing in JavaScript performance optimization. Review this code

Review the following [language] code for potential bugs

Write unit tests in


Prompt: You are a mighty and powerful prompt-generating robot. You need to
understand my goals and objectives and then design a prompt. The prompt should
include all the relevant information context and data that was provided to you.
You must continue asking questions until you are confident that you can produce
the best prompt for the best outcome. Your final prompt must be optimized for
chat interactions. Start by asking me to describe my goal, then continue with
follow-up questions to design the best prompt.

Prompt: Create a four-column spreadsheet of 10 highly-rated science fiction
movies, year of release, average audience rating, and top 3 keywords from
audience reviews.
Make sure to cite the source of the audience rating.

Prompt: Can you give me a list of ideas for blog posts for tourists visiting
New York City for the first time?

Prompt:
How can I create a minimal Flask app that returns ‘Hello World!’ on the home page?

Prompt:
You provide an example of the desired style or format, so the model understands the structure you expect.



https://developers.google.com/machine-learning/resources/prompt-eng?hl=de
https://www.learnprompt.org/chat-gpt-prompts-for-coding/
https://developers.google.com/machine-learning/resources/prompt-eng?hl=de
https://github.com/PickleBoxer/dev-chatgpt-prompts



https://devblogs.microsoft.com/blog/introducing-awesome-github-copilot-customizations-repo
https://github.com/github/awesome-copilot/tree/main/instructions
https://github.com/github/awesome-copilot/blob/main/instructions/nextjs-tailwind.instructions.md


# Database Administrator Chat Mode

You are a PostgreSQL Database Administrator (DBA) with expertise in managing and maintaining PostgreSQL database systems. You can perform tasks such as:

- Creating and managing databases
- Writing and optimizing SQL queries
- Performing database backups and restores
- Monitoring database performance
- Implementing security measures

You have access to various tools that allow you to interact with databases, execute queries, and manage database configurations. **Always** use the tools to inspect the database, do not look into the codebase.


###############################
Custom instruction
###############################

# Next.js + Tailwind Development Instructions

Instructions for high-quality Next.js applications with Tailwind CSS styling and TypeScript.

## Project Context

- Latest Next.js (App Router)
- TypeScript for type safety
- Tailwind CSS for styling

## Development Standards

### Architecture
- App Router with server and client components
- Group routes by feature/domain

_... and so on_


The page follows the development standards from your instructions:

- Uses React Server Components
- Implements proper TypeScript typing
- Follows Tailwind CSS styling patterns
- Maintains responsive design
- Uses semantic HTML
- Maintains consistent styling with the rest of the application


https://devblogs.microsoft.com/blog/introducing-awesome-github-copilot-customizations-repo
https://github.com/github/awesome-copilot/tree/main/instructions



The Idea Generator
Act as a creative strategist. I need to brainstorm ideas for a [Project Type, e.g., YouTube channel, small business]. The target audience is [Describe your audience, e.g., young professionals] and the core theme is [Main Theme, e.g., sustainable living]. Generate [Number] unique ideas, each with a catchy title and a one-sentence description. Format this as a numbered list.

The Content Outliner
Act as an expert content creator. Your task is to create a detailed outline for a [Content Format, e.g., blog post, presentation]. The topic is [Your Topic]. The outline should include an engaging title, an introduction, [Number] main sections with 3-4 talking points each, and a concluding summary. The tone should be [Desired Tone, e.g., informative, humorous, formal].

https://www.learnprompt.org/chatgpt-prompts-for-beginners/

-----------
https://teckbakers.hashnode.dev/prompts-101-prompt-engineering-for-developers
https://hackr.io/blog/chatgpt-cheat-sheet-for-developer
https://github.com/PickleBoxer/dev-chatgpt-prompts
https://github.com/f/awesome-chatgpt-prompts
https://dev.to/latitude/prompt-engineering-for-developers-11-concepts-and-examples-in0


Given a matrix of 0s and 1s representing an image, write a function to rotate the image by 90 degrees clockwise. Optimize your solution without using extra space

Design a data structure to efficiently support operations such as insert, delete, and getRandomElement() in constant time

Review the following code snippet and identify any potential code smells or areas for improvement. Optimize the code to improve its readability and maintainability.

https://www.geeksforgeeks.org/websites-apps/chatgpt-prompts-for-software-engineers/

--------------------------------------------------------------

You are an expert senior software engineer tasked with teaching a complete novice how to develop a backend application featuring a secure RESTful API, business logic implementation, validation, role-based access control, and background job processing. Provide a complete, thorough, step-by-step guide that starts from zero experience. Include detailed instructions on what tools to use, how to install them, and why they are chosen. Explain fundamental concepts along the way to build foundational understanding.

For each step:
- Clearly define the goal and why it is important.
- Provide installation instructions for all necessary software and dependencies.
- Explain the architecture and reasoning behind choices.
- Present complete example code snippets with explanations.
- Demonstrate how to test each component.

Guide the learner through setting up the development environment, creating the API routes, writing business logic, implementing data validation, enforcing role-based access control, and configuring background jobs. Suggest widely supported and beginner-friendly tools and frameworks in a popular backend language (such as Node.js with Express, Python with Django/Flask, or others), but feel free to justify your choice.

Emphasize security best practices throughout, such as protecting endpoints, validating inputs, managing authentication and authorization properly.

# Steps

1. Introduce backend development and RESTful API concepts.
2. Guide installation of programming language environment (e.g., Node.js), package manager, and IDE.
3. Set up a new project and install necessary libraries/frameworks.
4. Develop simple API endpoints and explain routing.
5. Add business logic layers separating routing from data processing.
6. Implement data validation for inputs.
7. Introduce authentication and role-based authorization mechanics.
8. Secure API endpoints accordingly.
9. Explain background jobs and set up tools like job queues.
10. Final testing and debugging techniques.

# Output Format

Provide your response as a detailed, easy-to-follow tutorial with numbered steps and code blocks where needed. Use simple language and define technical terms as they appear. Include all commands for installation and running the code. Avoid assuming prior knowledge.


https://docsbot.ai/prompts/programming/backend-development-tutorial

--------------------------------------------------------------

#####################################

https://prompts.chat/
https://tiiny.host/chatgpt-prompts/

You are a Senior DevOps engineer working at Big Company. Your role is to provide scalable, efficient, and automated solutions for software deployment, infrastructure management, and CI/CD pipelines. First problem is: Creating an MVP quickly for an e-commerce web app, suggest the best DevOps practices, including infrastructure setup, deployment strategies, automation tools, and cost-effective scaling solutions.

Create a static website template with a clean layout, navigation bar, and placeholder content for customization

Build a simple web app that allows startups to create and visualize MVP mockups with drag-and-drop elements

--------------------------------------------------------------

--------------------------------------------------------------
https://chatgptaihub.com/chatgpt-prompts-for-app-development/

Code Review and Optimization:
Code Review Suggestions: “Suggest improvements for this code snippet: [code snippet here].”
Performance Optimization: “Suggest ways to optimize the performance of this code: [code snippet here].”
Code Refactoring Advice: “Recommend best practices for refactoring this code: [code snippet here].”
Unit Testing Guidance: “Provide unit test cases for this function: [function signature and description].”
Debugging Assistance: “Help me identify and fix the issue in this code: [code snippet here].”

Algorithm and Logic:
Optimal Algorithm Selection: “What is the most efficient algorithm to solve this problem: [problem description]?”
Algorithmic Complexity: “Explain the time and space complexity of this algorithm: [algorithm description].”
Data Structure Advice: “Suggest the best data structure for storing and retrieving this data: [data description].”
Algorithm Implementation: “Implement this algorithm in Java/Kotlin: [algorithm details].”
Algorithm Debugging: “Help me debug this algorithm: [algorithm code].”


Networking and APIs:
Retrofit Implementation: “Implement Retrofit for consuming RESTful APIs in this app: [API details].”
API Documentation Lookup: “Find documentation for this API: [API name or URL].”
Authentication Methods: “What authentication methods should I use for user login: [authentication type]?”
Error Handling for APIs: “Guide me in handling errors from API responses effectively.”
Data Serialization and Deserialization: “How to serialize and deserialize JSON data in this app: [data format].”


Testing and Debugging:
UI Testing with Espresso: “Write UI tests using Espresso for this app’s UI: [UI elements to test].”
Unit Testing with JUnit: “Write unit tests using JUnit for this class/method: [class/method name].”
Debugging Techniques: “What debugging tools and techniques can I use for Android app debugging?”
Performance Profiling: “Profile app performance and suggest optimizations: [performance issue details].”
Testing on Different Devices: “How to ensure app compatibility across various Android devices?”


Security and Permissions:
App Permissions Handling: “Guide me in handling app permissions and explaining them to users.”
Data Encryption for Security: “Implement data encryption to enhance app security: [data type].”
Authentication and Authorization: “How to implement authentication and authorization securely.”
Secure Data Transmission: “Ensure secure data transmission over the network: [network communication details].”
App Security Audit: “Conduct a security audit of this Android app and suggest improvements.”



50 ChatGPT Prompts for web Application:

1. Code Review Suggestions:

Assist with Code Review for [Specific Code Snippet]: [Describe the code snippet or issue you’d like reviewed].

2. Database Design Guidance

Provide Database Design Recommendations for [Specific Use Case]: [Explain your use case or requirements].
3. Framework Selection Advice

Suggest the Best Web Development Framework for [Project Description]: [Describe your project and goals].

4. UI/UX Feedback

Offer UI/UX Feedback for [Web App Page/Feature]: [Describe the specific page or feature].

5. Debugging Assistance

Help Debug and Fix [Specific Issue]: [Describe the issue or share code if necessary].

6. Frontend Technology Stack Selection

Recommend Frontend Technologies (e.g., React, Angular, Vue) for [Project Type]: [Describe your project].

7. REST API Design Review

Review and Improve REST API Design for [Specific Endpoint]: [Provide details on the endpoint].

8. Performance Optimization Tips

Suggest Performance Optimization Strategies for [Web App Component]: [Specify the component].

9. Security Best Practices

Provide Security Best Practices for [Web App Module/Feature]: [Describe the module or feature].

10. User Authentication Implementation

Guide User Authentication Implementation for [Web App]: [Explain your authentication needs].

11. Responsive Design Recommendations

Offer Responsive Design Suggestions for [Web App Page/Section]: [Specify the page or section].

12. Code Testing Strategies

Advise on Code Testing Approaches for [Specific Part of Web App]: [Describe the part].

13. API Integration Help

Assist with API Integration for [Web App Feature]: [Explain the feature and API].

14. Deployment Planning

Help Plan Deployment for [Web App] on [Hosting Platform]: [Describe your hosting platform and requirements].

15. Scalability Planning

Provide Scalability Recommendations for [Web App]: [Explain your scalability concerns].

16. Data Storage Solutions

Suggest Data Storage Solutions (e.g., Database) for [Web App]: [Specify your needs].

17. UI Component Selection

Recommend UI Components (e.g., charts, forms) for [Web App Feature]: [Describe the feature].

18. Cross-Browser Compatibility

Ensure Cross-Browser Compatibility for [Web App Page/Feature]: [Specify the page or feature].

19. Error Handling Strategy

Define Error Handling Strategy for [Web App Module]: [Describe the module].

20. Localization/Internationalization

Implement Localization/Internationalization for [Web App]: [Explain your requirements].

21. Caching Mechanism Advice

Advise on Implementing a Caching Mechanism for [Web App Component]: [Specify the component].

22. Continuous Integration Setup

Guide Setting Up Continuous Integration for [Web App Development]: [Describe your development environment].

23. Progressive Web App (PWA) Features

Suggest PWA Features to Implement for [Web App]: [Specify your app’s goals].

24. Web Accessibility Compliance

Ensure Web Accessibility Compliance for [Web App Section]: [Specify the section].

25. User Data Protection

Ensure User Data Protection in [Web App]: [Describe your data handling].

26. Third-Party API Usage

Provide Guidance on Using Third-Party APIs in [Web App Feature]: [Specify the feature].

27. Code Version Control

Recommend Code Version Control Strategies for [Web App Development]: [Describe your development team and needs].

28. Real-Time Features Implementation

Assist with Real-Time Features Implementation in [Web App]: [Explain your real-time requirements].

29. Browser Cache Management

Guide on Managing Browser Caches for [Web App]: [Specify the caching needs].

30. Mobile Responsiveness

Optimize Mobile Responsiveness for [Web App Page/Feature]: [Specify the page or feature].

31. SEO Optimization Tips

Suggest SEO Optimization Strategies for [Web App]: [Describe your SEO goals].

32. A/B Testing Setup

Set Up A/B Testing for [Web App Component]: [Specify the component].

33. Error Log Analysis

Analyze Error Logs and Debug [Web App Issue]: [Describe the issue].

34. Browser Performance Tuning

Tune Browser Performance for [Web App]: [Explain your performance concerns].

35. User Onboarding Design

Design User Onboarding Process for [Web App]: [Describe your app’s user flow].

36. API Rate Limiting Strategy

Implement API Rate Limiting Strategy for [Web App API]: [Specify the API].

37. Data Encryption Implementation

Implement Data Encryption for [Web App Data]: [Specify the data].

38. Data Backup and Recovery

Plan Data Backup and Recovery for [Web App]: [Describe your data backup needs].

39. Automated Testing Setup

Set Up Automated Testing for [Web App Component]: [Specify the component].

40. User Feedback Mechanism

Integrate User Feedback Mechanism for [Web App Feature]: [Specify the feature].

41. Version Update Planning

Plan Version Updates for [Web App]: [Explain your update strategy].

42. Browser Compatibility Testing

Perform Browser Compatibility Testing for [Web App]: [Specify the testing criteria].

43. Data Migration Strategy

Create Data Migration Strategy for [Web App Data]: [Specify the data migration].

44. Code Documentation Guidelines

Provide Code Documentation Guidelines for [Web App Codebase]: [Specify the codebase].

45. User Roles and Permissions

Define User Roles and Permissions for [Web App]: [Describe your app’s user roles].

46. Automated Deployment Pipeline

Set Up an Automated Deployment Pipeline for [Web App]: [Explain your deployment needs].

47. Serverless Architecture Implementation

Implement Serverless Architecture for [Web App Feature]: [Specify the feature].

48. Content Management System (CMS) Integration

Integrate a CMS for [Web App Content Management]: [Explain your content management needs].

49. Progressive Enhancement Strategy

Develop a Progressive Enhancement Strategy for [Web App]: [Describe your enhancement goals].

50. Analytics and User Insights

Implement Analytics and User Insights for [Web App]: [Explain your analytics requirements].



####################

https://freshvanroot.com/blog/develop-webapp-chatgpt/
https://kms-technology.com/emerging-technologies/ai/30-best-chatgpt-prompts-for-software-engineers.html

code


“Can you help me write a function to implement this feature?”
“How can we optimize this code for performance and scalability?”
“What are the best testing strategies for this software project?”
“Can you translate this code from Java to Python?”


Sample Prompt:

“Generate a set of code snippets for implementing a web-based user interface for a software system that allows users to manage their personal finances. The user interface should be easy to navigate and use, with features for adding and tracking income and expenses, generating reports, and setting financial goals. The system should use a database to store and manage its data, with provisions for security, backup, and recovery. The code snippets should be written in Python, and should follow best practices for web development, including using a modern framework and adhering to the principles of separation of concerns and modularity. Please ensure that the code follows our company’s style guide and is easy to understand and maintain.”


testing

“Can you help me write test cases for this feature?”
“Can you generate a bug report?”
“How can we improve the quality and reliability of this software?”
“What are the best practices for security testing?”

Sample Prompt:

“Generate a set of test cases and test data for testing a web-based e-commerce application. The application should have features for browsing products, adding products to a cart, and checking out. The test cases should cover different scenarios, such as browsing products with and without filters, adding products to a cart with and without a discount code, and checking out with different payment methods. Please ensure that the test data covers a wide range of values and input combinations, and that the test cases are easy to follow and understand. Additionally, please generate test scripts and other testing materials, such as test plans and reports, to assist with the testing process.”

Deployment 

“What are the best deployment strategies for this software project?”
“Can you help me configure the server settings for this application?”
“How can we monitor the performance and availability of this software?”
“What are the best practices for version control and release management?”


Sample Prompt:

“Please generate deployment scripts for a web-based e-commerce application. The application is built using Node.js and MongoDB, and should be deployed to a Kubernetes cluster on AWS. The deployment scripts should automate the deployment process and ensure that the application is deployed accurately and efficiently. Additionally, please generate any necessary configuration files and documentation to assist with the deployment process.”


https://www.semrush.com/blog/chatgpt-prompts/

---------------------------------------------------------

18 ChatGPT Prompts for Software Development

Software testing flow: Our large-scale software project needs a comprehensive testing strategy. We're aiming to minimize bugs in production, ensure smooth integration between components, and maintain high user satisfaction. Act as a QA lead with experience in enterprise-level testing processes. Develop a flowchart for a software testing process that addresses these goals. Here's an example of how to represent a testing stage in the flowchart: (Insert example of a flowchart segment with explanation).
Development roadmap guide: You are an experienced software project manager. Provide a step-by-step guide for creating a development roadmap for a new web application, including key milestones and deliverables.

User authentication solutions: Pretend you’re a cybersecurity expert specializing in web application authentication and suggest [number] ways to handle user authentication in a web application for improved security.

Code analysis: You are a senior software engineer. Analyze the following Python code snippet and explain what each part does, identifying any potential issues or improvements. (Insert code.)

Code improvement: Act as an expert in code optimization. Review the following JavaScript code and suggest ways to improve its performance.

RESTful API development: Develop a RESTful API for a customer management system using Node.js and Express.js

Software documentation guidelines: You are a technical writer with expertise in software documentation. Provide guidelines and examples for documenting a REST API.

Refactoring code snippet: Refactor the following code snippet to improve readability and maintainability. Utilize object-oriented principles and best practices. (Insert the code snippet.)

Architectural patterns and tech guidance: I want you to act as a software architecture consultant. I’m designing a scalable microservices-based system and need guidance on which architectural patterns and technologies to use.

Code best practices: You are an authority on software development best practices. Discuss the best practices for writing clean, maintainable code in any programming language.


---------------------------------------------------------

https://www.builder.io/blog/ai-prompts-for-web-developers-chatgpt

Prompt: You are an expert at system design and architecture. Tell me how to design a [system]. The technology stack is [comma-separated list of technologies].

Example: You are an expert at system design and architecture. Tell me how to design a hotel reservation system. The technology stack is Next.js and Firebase.

Prompt: Generate a sample [data format] of [number] [entity] for a [domain]

Example: Generate a sample JSON of 5 products for a clothing e-commerce site

Prompt: You can also enter prompts after every response for more fine-grained control

Give me a list of [number] fields for [entity] on an e-commerce site
Add an “id” field that will be unique to each [entity]. Replace [existing field] with [new field]
Generate a sample [data format] of [number] such [entity] with realistic value

Prompt: Write unit tests for the following [library/ framework] component [component code] using [testing framework/ library]

Prompt: Generate a list of test cases to manually test user registration in a web/ mobile application.

Prompt: Write comments for the code below: [code snippet]

Prompt: Write JSDoc comments for the below JavaScript function: [code snippet]

Prompt: Write a shell command to [requirement]

Example: Write a shell command to delete all files with the extension '.log' in the 'logs' folder

Prompt: Write a git command to [requirement]

Example: Write a git command to undo the previous commit

Prompt: Explain the following command [command]

Example: Explain the following command [git switch -c feat/qwik-loaders]

Prompt: Explain this regular expression: [regex]

Example: Explain this regular expression in JavaScript:  const regex = /^[A-Za-z0–9+-]$/;

---------------------------------------------------------


https://creatoreconomy.so/p/how-to-build-an-app-with-chatgpt

#### Turn ChatGPT into an AI coding assistant

You are an AI coding assistant. I want you to write code for a React Typescript application. Follow the instructions below carefully:

Requirements:

- Generate all the code in a single file.
- Avoid dependencies — the code should just work if I copy it directly into Replit.
- If I share an image, try to make the app match the design as closely as possible.

Workflow:
- I’ll share a description of the app and an image of the design.
- Ask for clarification if my description is unclear.
- After clarifications, share any assumptions with me.
- Draft a pseudocode outline.
- Write the actual code.

Follow the above carefully and think step by step. I will tip you $200 if you do a great job and don't miss anything.


#### List the requirements for the app

I want you to build a simple to-do list app.

Requirements

- Add a dynamic, full-screen travel image using the Unsplash API.
- Layout & elements:
	Date/Time (top center): Display the current date and time and update it in real-time. Format: "January 18, 9:00 PM".
	To-do list (middle center): Display the to-do list as follows:
		One big thing:
		(Input field)
		To do:
		(Input field)
		(Input field)
		Quote (Bottom Center): Show a quote with the author’s name from Quotable API.

- The app should adapt to different screen sizes. Elements must not overlap, and the background image should always fit within the window.

Design
- Text: Make all text white, sans-serif, 1.5x size, and add a shadow to make it easy to read on a white or dark background.
- Input fields: Make all input fields yellow text, sans-serif, 1.5x size, and add a shadow to make them easy to read on a white or dark background.




https://github.com/f/awesome-chatgpt-prompts
https://www.bizway.io/blog/chatgpt-prompts-for-app-development


#################################################



https://github.com/openai/codex

npm install -g @openai/codex
npm install -g u/openai/codex    vscode
codex


https://github.com/google-gemini/gemini-cli

# Using npx (no installation required)
npx https://github.com/google-gemini/gemini-cli

# with npm
npm install -g @google/gemini-cli

System Requirements
Node.js version 20 or higher
macOS, Linux, or Windows

gemini
gemini --include-directories ../lib,../docs
gemini -m gemini-2.5-flash
gemini -p "Explain the architecture of this codebase"

gemini -p "Write me a Discord bot that answers questions using a FAQ.md file I will provide"
gemini -p "Give me a summary of all of the changes that went in yesterday"


----------------------


https://www.claude.com/product/claude-code
https://github.com/anthropics/claude-code
https://github.com/google-gemini/gemini-cli
https://cloud.google.com/gemini/docs/codeassist/gemini-cli


