
################################################
Java
################################################

https://www.youtube.com/watch?v=xk4_1vDrzzo

Libs:

Scanner()  - input cli
JOptionPane() - input window / showMessageDialog / showConfirmDialog
File()
AudioSystem()

GUI:

JFrame()
JLabel()
JPanel()
JButton()
JTextField()
JCheckBox()
JSlider()
JProgressBar()
JMenuBar()
JFileChooser()
BorderFactory()
BorderLayout()
FlowLayout()
JLayeredPane()

public void keyReleased(KeyEvent e) > e.getKeyChar()
public void keyReleased(KeyEvent e) > e.getKeyCode()
public void keyTyped(KeyEvent e) > e.getKeyChar()
public void keyPassed(KeyEvent e) > e.getKeyChar()

public void mouseReleased(MouseEvent e) > e.getKeyChar()
public void mouseClicked(MouseEvent e) > e.getKeyChar()

Graphics2D
g2D.fillArc
g2D.setPaint
g2D.drawPolygon

Timer()
TimerTask()

new Thread()
Thread.activeCount()
Thread.currentThread().getName()
Thread.currentThread().setName()

################################################
Kotlin
################################################

https://www.youtube.com/watch?v=EExSSotojVI

Data Type	Size	Description
byte		1 byte	Stores whole numbers from -128 to 127
short		2 bytes	Stores whole numbers from -32,768 to 32,767
int		4 bytes	Stores whole numbers from -2,147,483,648 to 2,147,483,647
long		8 bytes	Stores whole numbers from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807
float		4 bytes	Stores fractional numbers. Sufficient for storing 6 to 7 decimal digits
double		8 bytes	Stores fractional numbers. Sufficient for storing 15 decimal digits
boolean		1 bit	Stores true or false values
char		2 bytes	Stores a single character/letter or ASCII values


lazy init
emum class
inner class
sealed class
data class

listOf,set,mapOf,mutableMapOf, mutableLlistOf

zip()
unzip()

associateBy,associateWith
flatten

filter() (length, value, endsWith)
filterIndexed()
filterNot()
filterIsInstance
partition
any(endswith)
all(endswith)

listOof( slice,take, takeLast, drop, dropLast, chuncked, first, last, random )

################################################
Python
################################################

https://www.youtube.com/watch?v=XKHEtdqhLK8

input() # cls
slice # str
[] - list
list of lists [...]
tuple("Abba",21,"band")
set{'one','two'}
diictionary{1:'one',2:'two'}

*args  - tuple
**kwargs  - dictionary

randint
random
super
walrus
high order functions
lambda
functools.reduce
list comprehencion
dictionary comprehencion
zip
time.ctime(1000)
time.time() #unixtime
threading
threading.active_count()
threading.enumarate()
multiprocessing

tkinter (widgets , windows)
tk Scale
tk Listbox
tk messagebox
tk filedialog aksopenfilename asksaveasfile
tk Menu
tk Frame
tk Tabs (ttk)
grid
progressbar (ttk)

canvas
mouseevents
PhotoImage
pip

################################################
Data Structures
################################################

https://www.youtube.com/watch?v=CBYHwZcbD-s

stacks
queues
linked lists
dynamic arrays
array lists
big o notation
linear search
binary search
interpolation search
Bubble sort
Selection sort
Insertion sort
Recursion
Merge sort
Quick sort
Hash tables
Graphs
Adjacency matrix
Adjacency list
Depth First Search
Breadth First Search
Tree data structure intro
Binary search tree
Tree traversal
Calculate execution time

################################################
PHP
################################################

https://www.youtube.com/watch?v=zZ6vybT1HQs

sanitize
filter_input
hash -> password_hash() / password_verify()

################################################
MySQL
################################################

https://www.youtube.com/watch?v=5OdVJbNCSso

CHECK - on create table:
CREATE TABLE tablename(
	...
	CONSTRAINT colname_pa CHECK ( colname >= 15.00)
);
ALTER TABLE tablename ADD CONSTRAINT colname_pa CHECK ( colname >= 15.00);
-------
DEFAULT
ALTER TABLE tablename ALTER colname SET DEFAULT 0;
-------
FOREIGN KEY(id) REFERENCE y_table(id)

CREATE VIEW
DROP VIEW

CREATE INDEX name ON table(field);
ALTER TABLE table DROP INDEX indexname;
SHOW INDEXES FROM table;

################################################
MongoDB
################################################

https://www.youtube.com/watch?v=c2M-rlkkT5o

insert
data types
sort and limit
find
update
delete
comparison
indexes
collections

################################################
JavaScript
################################################

https://www.youtube.com/watch?v=8dWL3wF_OMw


slice()
array.sort().reverse()
map()
setTimeout()
promises()
async() - returns promise()
await()
ES6
DOM
Canvas
window

################################################
JavaFX
################################################

https://www.youtube.com/watch?v=9XJicRt_FaI

################################################
C Programming
################################################

https://www.youtube.com/watch?v=87SH2Cn0s9A

vscode + code runner + c/c++

vars
data types
scanf() - input cls
args params
ternary operator

arrays --- double var[] = {1.0,2.0};  - printf("$%.21f", var[0]);
int num[][] = {{1,1},{2,2}};

struct
typedef
array of structs
enum somevar{}
srand(time(0)) or ((rand %6) +1)

################################################
C#
################################################

https://www.youtube.com/watch?v=wxznTygnRfQ

type casting - Convert
input - Console.ReadLine() ... Console.WriteLine() ... Console.ReadKey()
new Random() / random.NextDouble()
str.Replace()
str.Insert()
str.Length

String[] cars = {""one,"two"};

overloading
params keyword - static double Methodname(params double[] var)
objects
static
overload constructors
Arrays
List
List of objects
getters setters

################################################
C++ with vscode and gcc
################################################

https://www.youtube.com/watch?v=-TkoO8Z07hI

vars - int double char bool  std::string  str::count
const NAME; # not change
namespaces
typedef
type conversion
// cout << insertion  // like print & echo
// cin >> extraction
ternary operator
srand()  / (rand() % 6) + 1
overloaded functions
var scopes

arrays -  std::string varname[] = {'one','two'}
std:: cout << varname[0] << '\n';

sizeof(var)
for(int i=0; i < sizeof(something); i++){}
for(str::string var : vars) { do something }
for(int var : vars) { do something }
sort
fill()
pointers - no value
dynamic memory
class
constructors
getters setters