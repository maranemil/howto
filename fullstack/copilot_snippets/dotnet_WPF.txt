Here is a complete example of a CRUD application in .NET WPF using SQLite. This example demonstrates how to perform Create, Read, Update, and Delete operations on a SQLite database.
Prerequisites:

Install the System.Data.SQLite NuGet package.
Create a SQLite database file (e.g., database.db) with a table named Users:SqlCREATE TABLE Users (
    Id INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL,
    Age INTEGER NOT NULL
);




Code Example:
1. MainWindow.xaml (UI Design)
Xml<Window x:Class="WpfApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="SQLite CRUD Example" Height="400" Width="600">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Input Fields -->
        <StackPanel Orientation="Horizontal" Margin="10">
            <TextBox x:Name="NameTextBox" Width="150" Margin="5" PlaceholderText="Name"/>
            <TextBox x:Name="AgeTextBox" Width="100" Margin="5" PlaceholderText="Age"/>
            <Button Content="Add" Width="75" Margin="5" Click="AddButton_Click"/>
            <Button Content="Update" Width="75" Margin="5" Click="UpdateButton_Click"/>
            <Button Content="Delete" Width="75" Margin="5" Click="DeleteButton_Click"/>
        </StackPanel>

        <!-- DataGrid -->
        <DataGrid x:Name="UsersDataGrid" Grid.Row="1" AutoGenerateColumns="False" Margin="10" SelectionMode="Single">
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" Binding="{Binding Id}" Width="50" IsReadOnly="True"/>
                <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="200"/>
                <DataGridTextColumn Header="Age" Binding="{Binding Age}" Width="100"/>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>


2. MainWindow.xaml.cs (Code-Behind)
Csharpusing System;
using System.Collections.ObjectModel;
using System.Data.SQLite;
using System.Windows;

namespace WpfApp
{
    public partial class MainWindow : Window
    {
        private const string ConnectionString = "Data Source=database.db;Version=3;";
        public ObservableCollection<User> Users { get; set; } = new ObservableCollection<User>();

        public MainWindow()
        {
            InitializeComponent();
            UsersDataGrid.ItemsSource = Users;
            LoadUsers();
        }

        // Load all users from the database
        private void LoadUsers()
        {
            Users.Clear();
            using (var connection = new SQLiteConnection(ConnectionString))
            {
                connection.Open();
                var command = new SQLiteCommand("SELECT * FROM Users", connection);
                using (var reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        Users.Add(new User
                        {
                            Id = reader.GetInt32(0),
                            Name = reader.GetString(1),
                            Age = reader.GetInt32(2)
                        });
                    }
                }
            }
        }

        // Add a new user
        private void AddButton_Click(object sender, RoutedEventArgs e)
        {
            if (string.IsNullOrWhiteSpace(NameTextBox.Text) || !int.TryParse(AgeTextBox.Text, out int age))
            {
                MessageBox.Show("Invalid input.");
                return;
            }

            using (var connection = new SQLiteConnection(ConnectionString))
            {
                connection.Open();
                var command = new SQLiteCommand("INSERT INTO Users (Name, Age) VALUES (@Name, @Age)", connection);
                command.Parameters.AddWithValue("@Name", NameTextBox.Text);
                command.Parameters.AddWithValue("@Age", age);
                command.ExecuteNonQuery();
            }

            LoadUsers();
        }

        // Update the selected user
        private void UpdateButton_Click(object sender, RoutedEventArgs e)
        {
            if (UsersDataGrid.SelectedItem is not User selectedUser || 
                string.IsNullOrWhiteSpace(NameTextBox.Text) || 
                !int.TryParse(AgeTextBox.Text, out int age))
            {
                MessageBox.Show("Invalid input or no user selected.");
                return;
            }

            using (var connection = new SQLiteConnection(ConnectionString))
            {
                connection.Open();
                var command = new SQLiteCommand("UPDATE Users SET Name = @Name, Age = @Age WHERE Id = @Id", connection);
                command.Parameters.AddWithValue("@Name", NameTextBox.Text);
                command.Parameters.AddWithValue("@Age", age);
                command.Parameters.AddWithValue("@Id", selectedUser.Id);
                command.ExecuteNonQuery();
            }

            LoadUsers();
        }

        // Delete the selected user
        private void DeleteButton_Click(object sender, RoutedEventArgs e)
        {
            if (UsersDataGrid.SelectedItem is not User selectedUser)
            {
                MessageBox.Show("No user selected.");
                return;
            }

            using (var connection = new SQLiteConnection(ConnectionString))
            {
                connection.Open();
                var command = new SQLiteCommand("DELETE FROM Users WHERE Id = @Id", connection);
                command.Parameters.AddWithValue("@Id", selectedUser.Id);
                command.ExecuteNonQuery();
            }

            LoadUsers();
        }
    }

    // User model
    public class User
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public int Age { get; set; }
    }
}


Explanation:

SQLite Connection: The ConnectionString points to the SQLite database file.
ObservableCollection: Used to bind the DataGrid to the list of users.
CRUD Operations:

Create: Inserts a new user into the database.
Read: Loads all users into the DataGrid.
Update: Updates the selected user's details.
Delete: Deletes the selected user.



Example Workflow:

Enter a name and age, then click "Add" to create a new user.
Select a user in the DataGrid, modify the fields, and click "Update" to save changes.
Select a user and click "Delete" to remove them from the database.


