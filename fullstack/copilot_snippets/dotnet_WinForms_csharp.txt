Here is a complete example of a CRUD GUI application using C#, WinForms, and SQLite. This example demonstrates how to create, read, update, and delete records in a SQLite database.

Steps:

Create a SQLite Database: Use a tool like DB Browser for SQLite or create it programmatically.
Set Up the Project: Create a new WinForms project in Visual Studio.
Add SQLite NuGet Package: Install System.Data.SQLite via NuGet.


Code Example:
1. SQLite Database Setup
Create a database file named example.db with a table Users:
SqlCREATE TABLE Users (
    Id INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL,
    Email TEXT NOT NULL
);

2. WinForms Application Code
Csharpusing System;
using System.Data;
using System.Data.SQLite;
using System.Windows.Forms;

namespace SQLiteCRUD
{
    public partial class MainForm : Form
    {
        private SQLiteConnection connection;

        public MainForm()
        {
            InitializeComponent();
            InitializeDatabase();
            LoadData();
        }

        // Initialize SQLite connection
        private void InitializeDatabase()
        {
            string connectionString = "Data Source=example.db;Version=3;";
            connection = new SQLiteConnection(connectionString);
            connection.Open();
        }

        // Load data into DataGridView
        private void LoadData()
        {
            string query = "SELECT * FROM Users";
            SQLiteDataAdapter adapter = new SQLiteDataAdapter(query, connection);
            DataTable table = new DataTable();
            adapter.Fill(table);
            dataGridView.DataSource = table;
        }

        // Add a new user
        private void btnAdd_Click(object sender, EventArgs e)
        {
            string name = txtName.Text;
            string email = txtEmail.Text;

            if (string.IsNullOrWhiteSpace(name) || string.IsNullOrWhiteSpace(email))
            {
                MessageBox.Show("Name and Email are required.");
                return;
            }

            string query = "INSERT INTO Users (Name, Email) VALUES (@Name, @Email)";
            using (SQLiteCommand cmd = new SQLiteCommand(query, connection))
            {
                cmd.Parameters.AddWithValue("@Name", name);
                cmd.Parameters.AddWithValue("@Email", email);
                cmd.ExecuteNonQuery();
            }

            LoadData();
            ClearInputs();
        }

        // Update selected user
        private void btnUpdate_Click(object sender, EventArgs e)
        {
            if (dataGridView.SelectedRows.Count == 0)
            {
                MessageBox.Show("Please select a user to update.");
                return;
            }

            int id = Convert.ToInt32(dataGridView.SelectedRows[0].Cells["Id"].Value);
            string name = txtName.Text;
            string email = txtEmail.Text;

            string query = "UPDATE Users SET Name = @Name, Email = @Email WHERE Id = @Id";
            using (SQLiteCommand cmd = new SQLiteCommand(query, connection))
            {
                cmd.Parameters.AddWithValue("@Name", name);
                cmd.Parameters.AddWithValue("@Email", email);
                cmd.Parameters.AddWithValue("@Id", id);
                cmd.ExecuteNonQuery();
            }

            LoadData();
            ClearInputs();
        }

        // Delete selected user
        private void btnDelete_Click(object sender, EventArgs e)
        {
            if (dataGridView.SelectedRows.Count == 0)
            {
                MessageBox.Show("Please select a user to delete.");
                return;
            }

            int id = Convert.ToInt32(dataGridView.SelectedRows[0].Cells["Id"].Value);

            string query = "DELETE FROM Users WHERE Id = @Id";
            using (SQLiteCommand cmd = new SQLiteCommand(query, connection))
            {
                cmd.Parameters.AddWithValue("@Id", id);
                cmd.ExecuteNonQuery();
            }

            LoadData();
        }

        // Clear input fields
        private void ClearInputs()
        {
            txtName.Clear();
            txtEmail.Clear();
        }
    }
}


UI Design

Add a DataGridView (dataGridView) to display data.
Add TextBoxes (txtName, txtEmail) for input.
Add Buttons (btnAdd, btnUpdate, btnDelete) for CRUD operations.


Features:

Create: Add new users.
Read: Display users in a DataGridView.
Update: Modify selected user details.
Delete: Remove selected users.

This example is a complete, functional CRUD application. Let me know if you need help with specific parts!

