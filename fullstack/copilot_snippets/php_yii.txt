Here is a complete example of a CRUD application using the Yii2 Framework with an SQLite database. This example assumes you have a basic Yii2 application set up.

Steps:


Set up SQLite Database:
Create an SQLite database file (e.g., database.sqlite) and a table (e.g., post) with the following schema:
SqlCREATE TABLE post (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    title TEXT NOT NULL,
    content TEXT NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);



Configure SQLite in Yii2:
Update the config/db.php file to use SQLite:
Phpreturn [
    'class' => 'yii\db\Connection',
    'dsn' => 'sqlite:@app/data/database.sqlite',
    'charset' => 'utf8',
];

Ensure the database.sqlite file is placed in the @app/data/ directory.


Generate CRUD with Gii:
Use Yii2's Gii tool to generate the model, controller, and views for the post table.

Navigate to http://your-app-url/index.php?r=gii.
Select Model Generator:

Table Name: post
Model Class: Post


Generate the model.
Select CRUD Generator:

Model Class: app\models\Post
Search Model Class: app\models\PostSearch
Controller Class: app\controllers\PostController


Generate the CRUD.



Access the CRUD:
After generation, you can access the CRUD interface at http://your-app-url/index.php?r=post.



Example Code:
Model (Post.php):
Phpnamespace app\models;

use Yii;

/**
 * This is the model class for table "post".
 *
 * @property int $id
 * @property string $title
 * @property string $content
 * @property string $created_at
 */
class Post extends \yii\db\ActiveRecord
{
    public static function tableName()
    {
        return 'post';
    }

    public function rules()
    {
        return [
            [['title', 'content'], 'required'],
            [['content'], 'string'],
            [['created_at'], 'safe'],
            [['title'], 'string', 'max' => 255],
        ];
    }

    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Title',
            'content' => 'Content',
            'created_at' => 'Created At',
        ];
    }
}

Controller (PostController.php):
Generated by Gii, handles CRUD operations automatically.
Views:
Generated by Gii, includes forms for creating, updating, and listing posts.

Run the Application:

Start the Yii2 development server: php yii serve.
Navigate to http://localhost:8080/index.php?r=post to manage posts.

This setup provides a fully functional CRUD interface for the post table using SQLite.

