
-----------------------------------------------------------------------------------
https://hub.docker.com/r/spryker/php
https://hub.docker.com/r/bitnami/apache
https://hub.docker.com/_/node
https://hub.docker.com/_/php
https://hub.docker.com/_/adminer
https://hub.docker.com/_/python
https://hub.docker.com/_/django



https://hub.docker.com/r/ai/llama3.2
https://hub.docker.com/r/ai/qwen3-coder
https://hub.docker.com/r/ai/qwen3
https://hub.docker.com/r/ai/llama3.2
https://hub.docker.com/r/ai/mistral
https://hub.docker.com/r/ai/qwq
https://hub.docker.com/r/ai/phi4
https://hub.docker.com/r/ai/qwen2.5

https://hub.docker.com/_/ubuntu
https://hub.docker.com/_/debian
https://hub.docker.com/_/alpine
https://gallery.ecr.aws/docker/library/debian
https://gallery.ecr.aws/docker/library/alpine
https://gallery.ecr.aws/docker/library/busybox
https://gallery.ecr.aws/docker/library/debian
https://gallery.ecr.aws/docker/library/ubuntu
https://gallery.ecr.aws/docker/library/hello-world
https://gallery.ecr.aws/docker/library/httpd

docker run -it --rm busybox

...
debian:11.11-slim
debian:stable-slim
docker pull  debian:stable-slim
...
Usage
Use like you would any other base image:

FROM public.ecr.aws/docker/library/alpine:3.14
RUN apk add --no-cache mysql-client
ENTRYPOINT ["mysql"]
This example has a virtual image size of only 36.8MB. Compare that to our good friend Ubuntu:

FROM ubuntu:20.04
RUN apt-get update \
    && apt-get install -y --no-install-recommends mysql-client \
    && rm -rf /var/lib/apt/lists/*
ENTRYPOINT ["mysql"]

...


FROM public.ecr.aws/docker/library/httpd:2.4
COPY ./public-html/ /usr/local/apache2/htdocs/

docker run -dit --name my-apache-app -p 8080:80 -v "$PWD":/usr/local/apache2/htdocs/ public.ecr.aws/docker/library/httpd:2.4
docker run --rm public.ecr.aws/docker/library/httpd:2.4 cat /usr/local/apache2/conf/httpd.conf > my-httpd.conf



https://www.slimframework.com/docs/v4/features/php-view.html
https://www.slimframework.com/
https://php-slim-skeleton.robiningelbrecht.be/docker-setup
------------------------------------------------------------------------------------
https://www.w3resource.com/python-exercises/sqlite/index.php
https://www.w3resource.com/index.php
https://www.w3resource.com/python-exercises/tkinter/python-tkinter-file-operations-and-integration-exercise-12.php
https://www.geeksforgeeks.org/python/python-gui-tkinter/
https://www.w3schools.in/python/gui-programming
https://www.w3schools.com/vue/index.php
https://www.w3schools.com/django/django_create_app.php
https://www.w3schools.com/python/python_mysql_getstarted.asp

------------------------------------------------------------------------------------

------------------------------------------------------------------------------------

https://github.com/murtaza-nasir/maestro

git clone https://github.com/murtaza-nasir/maestro.git
cd maestro
./setup-env.sh
# Recommended: Automatic GPU detection
./start.sh
# Or manually:
docker compose up -d
docker compose -f docker-compose.cpu.yml up -d
# Watch the backend logs
docker compose logs -f maestro-backend
------------------------------------------------------------------------------------
https://docs.eidos.space/
https://github.com/mayneyao/eidos

Clone the repository git clone https://github.com/mayneyao/eidos.git
Run pnpm install to install dependencies
For desktop development:
Run cd apps/desktop && node scripts/download-libsimple.cjs to download libsimple (only for the first time)
Run pnpm dev:desktop to start the desktop app
For web development:
Run pnpm dev to start the web app (PWA)

------------------------------------------------------------------------------------

------------------------------------------------------------------------------------

python3 --version / python3 -V
Python 3.12.3

pip list
pip list --local
pydoc modules
pip freeze
pip show tkinter

pydoc -p 12345
sudo apt install python-is-python3
python3 -m tkinter
pip freeze | grep flask
dpkg -l | grep flask
python3 -m flask 

flask --version
sudo apt install python3-flask
tkinter --version

https://github.com/samuelhwilliams/Eel
https://nicegui.io/documentation
https://nicegui.io/#demos
https://github.com/r0x0r/pywebview
https://pypi.org/project/pywebview/
https://pywebview.flowrl.com/
https://pywebview.flowrl.com/examples/

https://flask.palletsprojects.com/en/stable/
https://flask.palletsprojects.com/en/stable/quickstart/#a-minimal-application
https://docs.djangoproject.com/en/5.2/

https://jinja.palletsprojects.com/en/stable/
https://docs.pysimplegui.com/en/latest/
https://www.pythonguis.com/pyqt5-tutorial/
https://www.pythonguis.com/pyside6/
https://docs.streamlit.io/



