#####################################################
#
#   which is the max storage capacity of Version 5.5 MariaDB
#
######################################################

https://mariadb.com/kb/en/which-is-the-max-storage-capacity-of-version-55-mariadb/

InnoDB/XtraDB tables can be up to 64TB (terabytes) in size. On top of this you can have multiple tables per database and multiple databases per server. Usually the size and space limits of your underlying storage and operating system are reached long before MariaDB's internal limits are reached.

#####################################################
#
#   max number of records can MariaDB support
#
#####################################################
https://stackoverflow.com/questions/56474252/max-number-of-records-can-mariadb-support
https://mariadb.com/kb/en/innodb-limitations/
http://mysql.rjweb.org/doc.php/limits
https://dev.mysql.com/doc/mysql-reslimits-excerpt/5.6/en/table-size-limit.html

[Limitations on Schema]
InnoDB tables can have a maximum of 1,017 columns. This includes virtual generated columns.
InnoDB tables can have a maximum of 64 secondary indexes.
A multicolumn index on InnoDB can use a maximum of 16 columns. If you attempt to create a multicolumn index that uses more than 16 columns, MariaDB returns an Error 1070.

[Limitations on Size]
With the exception of variable-length columns (that is, VARBINARY, VARCHAR, BLOB and TEXT), rows in InnoDB have a maximum length of roughly half the page size for 4KB, 8KB, 16KB and 32KB page sizes.
The maximum size for BLOB and TEXT columns is 4GB. This also applies to LONGBLOB and LONGTEXT.
MariaDB imposes a row-size limit of 65,535 bytes for the combined sizes of all columns. If the table contains BLOB or TEXT columns, these only count for 9 - 12 bytes in this calculation, given that their content is stored separately.
32-bit operating systems have a maximum file size limit of 2GB. When working with large tables using this architecture, configure InnoDB to use smaller data files.
The maximum size for the combined InnoDB log files is 512GB.
With tablespaces, the minimum size is 10MB, the maximum varies depending on the InnoDB Page Size.


[Page Sizes]
Using the innodb_page_size system variable, you can configure the size in bytes for InnoDB pages. Pages default to 16KB. There are certain limitations on how you use this variable.

MariaDB instances using one page size cannot use data files or log files from an instance using a different page size.
When using a Page Size of 4KB or 8KB, the maximum index key length is lowered proportionately.



#########################################################
#
#	Partitioning
#	https://dev.mysql.com/doc/refman/8.0/en/partitioning.html
#	http://mysql.rjweb.org/doc.php/summarytables
#	https://dba.stackexchange.com/questions/208427/how-to-optimize-mysql-table-of-2-billions-rows
#	https://dev.mysql.com/doc/refman/5.6/en/optimizing-innodb.html
#	https://www.oracle.com/partners/en/knowledge-zone/mysql-5-5-innodb-myisam-522945.pdf
#	https://github.com/major/MySQLTuner-perl
#
#########################################################

How to optimize mysql table of 2 billions rows?

Use InnoDB.
Normalize entityType or turn it into an ENUM.
Change INT UNSIGNED (always 4 bytes) into a suitable sized int)

If the 3-column key is unique, then make it the PRIMARY KEY and toss id
id, if kept, will need to be BIGINT UNSIGNED -- you are getting too close to the 4 billion limit of INT UNSIGNED.

The optimal order for the index: (entityId, entityType, timeStamp), or possibly (entityId, timeStamp)
Minimize the number of indexes on a DataWarehouse table.

For purging data after a year, DELETE will be painful. Instead PARTITION BY RANGE and use months: http://mysql.rjweb.org/doc.php/partitionmaint
If you get in trouble with the ingestion rate: http://mysql.rjweb.org/doc.php/staging_table

If you keep id, then do this trick:
PRIMARY KEY (entityId, timeStamp, id) INDEX(id)

-----

--log-queries-not-using-indexes enabled,
show databases;
select schema_name "Database" from information_schema.schemata;
show create table information_schema.schemata\G
show global status like 'uptime'; select * from information_schema.global_status where variable_name='uptime';


#########################################################
What are OLTP and OLAP. What is the difference between them?
#########################################################

https://www.datawarehouse4u.info/OLTP-vs-OLAP.html
https://stackoverflow.com/questions/21900185/what-are-oltp-and-olap-what-is-the-difference-between-them
http://mysql.rjweb.org/doc.php/summarytables
https://martinfowler.com/bliki/DataLake.html
https://www.datawarehouse4u.info/OLTP-vs-OLAP.html


https://github.com/mysql/mysql-server/graphs/contributors?from=2013-01-09&to=2019-01-09&type=c
https://github.com/MariaDB/server/graphs/contributors?from=2013-01-09&to=2019-01-09&type=c

OLTP (On-line Transaction Processing) is involved in the operation of a particular system. OLTP is characterized by a large number of short on-line transactions (INSERT, UPDATE, DELETE). The main emphasis for OLTP systems is put on very fast query processing, maintaining data integrity in multi-access environments and an effectiveness measured by number of transactions per second. In OLTP database there is detailed and current data, and schema used to store transactional databases is the entity model (usually 3NF). It involves Queries accessing individual record like Update your Email in Company database.

OLAP (On-line Analytical Processing) deals with Historical Data or Archival Data. OLAP is characterized by relatively low volume of transactions. Queries are often very complex and involve aggregations. For OLAP systems a response time is an effectiveness measure. OLAP applications are widely used by Data Mining techniques. In OLAP database there is aggregated, historical data, stored in multi-dimensional schemas (usually star schema). Sometime query need to access large amount of data in Management records like what was the profit of your company in last year.

if you are doing analytics (ex. aggregating historical data) use OLAP
if you are doing transactions (ex. adding/removing orders on an e-commerce cart) use OLTP

OLTP = Online transaction processing
OLAP = Online analytical processing


#########################################################
MySQL NDB Cluster 8.0 / NDB in MariaDB
#########################################################

https://dev.mysql.com/doc/refman/8.0/en/mysql-cluster.html
https://www.mysql.com/de/products/cluster/features.html
https://www.apress.com/us/blog/all-blog-posts/what-is-mysql-ndb-cluster/15454530
https://www.digitalocean.com/community/tutorials/how-to-create-a-multi-node-mysql-cluster-on-ubuntu-18-04
https://mariadb.com/kb/en/ndb-in-mariadb/
https://mariadb.com/kb/en/mariadb-galera-cluster-vs-mysql-ndb-cluster/

/var/lib/mysql-cluster/config.ini
NoOfReplicas=2  # Number of replicas




####################################################
mysql TEXT maximum length
####################################################

https://stackoverflow.com/questions/6766781/maximum-length-for-mysql-type-text
TINYTEXT 256 bytes
TEXT 65,535 bytes ~64kb
MEDIUMTEXT 16,777,215 bytes ~16MB
LONGTEXT 4,294,967,295 bytes ~4GB


