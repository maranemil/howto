
###############################
postgresql show tables
###############################

https://stackoverflow.com/questions/769683/postgresql-show-tables-in-postgresql
https://www.postgresqltutorial.com/postgresql-administration/postgresql-show-tables/
https://wiki.hackzine.org/sysadmin/postgresql-make-root-login-as-postgres.html
https://www3.ntu.edu.sg/home/ehchua/programming/sql/PostgreSQL_GetStarted.html
https://alvinalexander.com/blog/post/postgresql/log-in-postgresql-database/
https://wiki.postgresql.org/wiki/First_steps
https://stackoverflow.com/questions/1471571/how-to-configure-postgresql-for-the-first-time
https://www.postgresqltutorial.com/postgresql-administration/postgresql-reset-password/
https://serverfault.com/questions/1083133/pg-hba-conf-psql-local-login-without-password
https://stackoverflow.com/questions/46736894/how-to-allow-postgres-login-without-password-prompt-on-local-connection
https://dba.stackexchange.com/questions/14740/how-to-use-psql-with-no-password-prompt
https://tableplus.com/

sudo apt-get update
sudo apt-get install postgresql postgresql-contrib
dpkg --status postgresql
whereis postgresql
which psql


su - postgres
psql -d mydb -U myuser
psql -h myhost -d mydb -U myuser

# if not prompted for a password
psql -d mydb -U myuser -W
psql -h myhost -d mydb -U myuser -W

psql --help
psql -U postgres

# services
 sudo service postgresql stop     // Stop the service
 sudo service postgresql start    // Start the service
 sudo service postgresql restart  // Stop and restart the service
 sudo service postgresql reload   // Reload the configuration without stopping the service

// OR
 sudo systemctl start postgresql
 sudo systemctl stop postgresql
 sudo systemctl restart postgresql
 sudo systemctl reload postgresql
 sudo systemctl status postgresql   // Show th status
ps aux | grep postgres

Login as PostgreSQL Superuser "postgres" via "psql" Client
sudo -u postgres psql
SELECT version();
\h CREATE DATABASE
CREATE DATABASE mytest;
\l
\c mytest

-- Create a new table.
mytest=# CREATE TABLE IF NOT EXISTS cafe (
  id SERIAL PRIMARY KEY,        -- AUTO_INCREMENT integer, as primary key
  category cat_enum NOT NULL,   -- Use the enum type defined earlier
  name VARCHAR(50) NOT NULL,    -- Variable-length string of up to 50 characters
  price NUMERIC(5,2) NOT NULL,  -- 5 digits total, with 2 decimal places
  last_update DATE              -- 'YYYY-MM-DD'
);

-- Display details of a particular table.
mytest=# \d+ cafe

-- Insert rows.
mytest=# INSERT INTO cafe (category, name, price) VALUES
  ('coffee', 'Espresso', 3.19),
  ('coffee', 'Cappuccino', 3.29),
  ('coffee', 'Caffe Latte', 3.39),
  ('coffee', 'Caffe Mocha', 3.49),
  ('coffee', 'Brewed Coffee', 3.59),
  ('tea', 'Green Tea', 2.99),
  ('tea', 'Wulong Tea', 2.89);

SELECT * FROM cafe;

\q



Using Utility "createuser" and "createdb"
------------------
# Create a new PostgreSQL user called testuser, allow user to login, but NOT creating databases
$ sudo -u postgres createuser --login --pwprompt testuser
Enter password for new role: xxxx

# Create a new database called testdb, owned by testuser.
$ sudo -u postgres createdb --owner=testuser testdb

sudo service postgresql restart

# Login to PostgreSQL: psql -U user database
$ psql -U testuser testdb



---------------------------
psql -U api-platform -d database_name
SELECT datname FROM pg_database;
\c database_name
\dt
SELECT * FROM pg_catalog.pg_tables;
SELECT *
FROM pg_catalog.pg_tables
WHERE schemaname != 'pg_catalog' AND
    schemaname != 'information_schema';


##################################################
group by week in postgresql
##################################################

https://til.hashrocket.com/posts/5zy59gfxeg-group-dates-by-week-in-postgres
https://stackoverflow.com/questions/36024712/how-to-group-by-week-in-postgresql
https://dirask.com/posts/PostgreSQL-Group-rows-by-weeks-1eo7op
https://dba.stackexchange.com/questions/164598/group-by-week-but-show-a-more-readable-the-result
https://learnsql.com/cookbook/how-to-extract-the-week-number-from-a-date-in-postgresql/


SELECT date_part('year', author_date::date) as year,
       date_part('week', author_date::date) AS weekly,
       COUNT(author_email)
FROM commits
GROUP BY year, weekly
ORDER BY year, weekly;

.....

SELECT date_trunc('week', author_date::date) AS weekly,
       COUNT(author_email)
FROM commits
GROUP BY weekly
ORDER BY weekly;

.....

select count(*),
  date_trunc('week', request_time)
from requests
group by
  date_trunc('week', request_time)
order by date_trunc desc ;

...


SELECT
    DATE_TRUNC('week', "event_timestamp") AS "week",
    COUNT(*)
FROM "events"
GROUP BY DATE_TRUNC('week', "event_timestamp")
ORDER BY DATE_TRUNC('week', "event_timestamp")

SELECT
    DATE_TRUNC('week', "event_timestamp") AS "week",
    COUNT(*)
FROM "events"
GROUP BY 1
ORDER BY 1

....

SELECT first_name,
     last_name,
       DATE_PART('week',birth_date)
         AS  birth_week_number
FROM children;

SELECT first_name,
     last_name,
       EXTRACT('week' FROM birth_date)
         AS  birth_week_number
FROM children;

-----------

SQL

SELECT YEAR(datetime) AS Year, DATE_FORMAT(datetime, '%b %e') AS Week, COUNT(*) AS total
FROM table
GROUP BY Year, Week;

SELECT DATE_FORMAT(ADDDATE(buy.date_created, INTERVAL -DAYOFWEEK(buy.date_created) DAY),"%Y-%m-%d") as week,
 COUNT(*) AS total
FROM buy GROUP BY week;

##################################################
group by month in postgresql
##################################################

https://learnsql.com/cookbook/how-to-group-by-month-in-postgresql/

SELECT
       DATE_TRUNC('month',production_timestamp)
         AS  production_to_month,
       COUNT(id) AS count
FROM watch
GROUP BY DATE_TRUNC('month',production_timestamp);

SELECT name,
       DATE_TRUNC('month',production_timestamp)
         AS  production_to_month
FROM watch;

##################################################
group by day in postgresql
##################################################

https://linuxhint.com/postgres-groupby-day/

SELECT DATE_TRUNC(‘day’, date_column) FROM table_name GROUP BY DATE_TRUNC(‘day’, date_column);
SELECT DATE_TRUNC(‘day’, order_date) FROM date_details GROUP BY DATE_TRUNC(‘day’, order_date);



############################################################
PostgreSQL set Next ID Sequence Value to MAX(id) from Table
############################################################

https://gist.github.com/henriquemenezes/962829815e8e7875f5f4376133b2f209
https://www.postgresqltutorial.com/postgresql-aggregate-functions/postgresql-max-function/
https://hevodata.com/learn/postgresql-max/
https://stackoverflow.com/questions/16936135/postgresql-select-from-max-id

-- Get Max ID from table
SELECT MAX(id) FROM table;

-- Get Next ID from table
SELECT nextval('table_id_seq');

-- Set Next ID Value to MAX ID
SELECT setval('table_id_seq', (SELECT MAX(id) FROM table));
SELECT setval('table_id_seq', (SELECT MAX(id) FROM table)+1);
select setval('table_id_seq', max(id)) from table_name;  -- Next nextval will return  max(id) + 1

############################################################
Postgres Sequence:  reset auto-increment primary key
############################################################

https://youtrack.jetbrains.com/issue/DBE-10211/Postgres-Sequence-show-generate-the-current-value-not-the-start-value-only
https://youtrack.jetbrains.com/issue/DBE-9881/When-creating-the-table-the-sequence-created-by-default-is-not-visible-in-the-query-editor
https://stackoverflow.com/questions/244243/how-to-reset-postgres-primary-key-sequence-when-it-falls-out-of-sync
https://dba.stackexchange.com/questions/193495/postgresql-truncate-a-table-on-cascade-and-reset-all-hierarchic-sequences-with
https://stackoverflow.com/questions/5342440/reset-auto-increment-counter-in-postgres
https://www.postgresql.org/docs/current/sql-altersequence.html
https://www.postgresql.org/docs/current/sql-truncate.html
https://stackoverflow.com/questions/13989243/sequence-does-not-reset-after-truncating-the-table
https://www.postgresqltutorial.com/postgresql-tutorial/postgresql-truncate-table/


ALTER SEQUENCE "your_sequence_name" RESTART WITH 0;
ALTER SEQUENCE table_name_id_seq RESTART WITH 1;
ALTER SEQUENCE table_name_id_seq RESTART; -- 8.4 or higher

TRUNCATE TABLE someTable RESTART IDENTITY;
TRUNCATE TABLE someTable RESTART IDENTITY CASCADE;
TRUNCATE bigtable, fattable RESTART IDENTITY;

...

-- What is the result?
SELECT MAX(id) FROM your_table;


-- Then run...
-- This should be higher than the last result.
SELECT nextval('your_table_id_seq');


-- If it's not higher... run this set the sequence last to your highest id.
-- (wise to run a quick pg_dump first...)


BEGIN;
-- protect against concurrent inserts while you update the counter
LOCK TABLE your_table IN EXCLUSIVE MODE;
-- Update the sequence
SELECT setval('your_table_id_seq', COALESCE((SELECT MAX(id)+1 FROM your_table), 1), false);
COMMIT;

...

create sequence s1;
create sequence s2 start with 25;

select sequencename, start_value, currval(sequencename::varchar) as current_value
from pg_catalog.pg_sequences

...

CREATE TABLE "users"
(
    "id"   BIGSERIAL   NOT NULL CONSTRAINT "users_pkey" PRIMARY KEY,
    "name" VARCHAR(10) NOT NULL
);

ALTER SEQUENCE "users_id_seq" RESTART WITH 100;

INSERT INTO users (name)
VALUES ('demo')
RETURNING *;


############################################################
postgresql fiddle playground
############################################################

https://onecompiler.com/postgresql
https://www.db-fiddle.com/

https://www.db-fiddle.com/
https://codapi.org/postgres/
https://pgplayground.com/

-- create
CREATE TABLE EMPLOYEE (
  empId INTEGER PRIMARY KEY,
  name TEXT NOT NULL,
  dept TEXT NOT NULL
);

-- insert
INSERT INTO EMPLOYEE VALUES (0001, 'Clark', 'Sales');
INSERT INTO EMPLOYEE VALUES (0002, 'Dave', 'Accounting');
INSERT INTO EMPLOYEE VALUES (0003, 'Ava', 'Sales');

-- fetch
SELECT * FROM EMPLOYEE WHERE dept = 'Sales';

...

create table employees(age int, name text);
insert into employees values(25, 'Name1');
insert into employees values(48, 'Name2');
select * from employees;
select * from employees where age > 40 and age < 50;