##########################################################################
API Platform symfony
bash: symfony: command not found
##########################################################################

https://api-platform.com/docs
https://api-platform.com/docs/admin/
https://api-platform.com/docs/admin/authentication-support/
https://api-platform.com/docs/admin/customizing/
https://api-platform.com/docs/admin/getting-started/
https://api-platform.com/docs/core/user/
https://api-platform.com/docs/core/user/
https://api-platform.com/docs/distribution/
https://api-platform.com/docs/distribution/#using-symfony-cli
https://create-react-app.dev/docs/advanced-configuration/
https://create-react-app.dev/docs/analyzing-the-bundle-size/
https://create-react-app.dev/docs/code-splitting/
https://create-react-app.dev/docs/deployment/
https://create-react-app.dev/docs/deployment/
https://create-react-app.dev/docs/getting-started/
https://create-react-app.dev/docs/making-a-progressive-web-app/
https://create-react-app.dev/docs/running-tests/
https://gist.github.com/toofff/73460d081c11e84c5bf02a11bd09eb90
https://github.com/facebook/create-react-app
https://marmelab.com/react-admin/
https://symfony.com/doc/3.3/setup.html
https://symfony.com/doc/6.0/setup.html
https://symfony.com/doc/6.0/setup/web_server_configuration.html
https://symfony.com/doc/current/index.html
https://symfony.com/download

curl -1sLf 'https://dl.cloudsmith.io/public/symfony/stable/setup.deb.sh' | bash
apt install symfony-cli
symfony serve
symfony serve -h

Options:
  --dir=value               Project directory
  --allow-http              Prevent auto-redirection from HTTP to HTTPS
  --document-root=value     Project document root (auto-configured by default)
  --passthru=value          Project passthru index (auto-configured by default)
  --port=value              Preferred HTTP port [default: 8000]
  --daemon, -d              Run the server in the background
  --no-humanize             Do not format JSON logs
  --p12=value               Name of the file containing the TLS certificate to use in p12 format
  --no-tls                  Use HTTP instead of HTTPS
  --use-gzip                Use GZIP
  --tls-key-log-file=value  Destination for TLS master secrets in NSS key log format [$SSLKEYLOGFILE]

symfony serve --port=9000

# symfony composer require api
# symfony console doctrine:database:create
# symfony console doctrine:schema:create
# symfony serve

php bin/console about
php bin/console

Available commands:
  about                                      Display information about the current project
  completion                                 Dump the shell completion script
  help                                       Display help for a command
  list                                       List commands
 api
  api:json-schema:generate                   Generates the JSON Schema for a resource operation.
  api:openapi:export                         Dump the Open API documentation
  api:swagger:export                         Dump the Swagger v2 documentation
 assets
  assets:install                             Install bundle's web assets under a public directory
 cache
  cache:clear                                Clear the cache
  cache:pool:clear                           Clear cache pools
  cache:pool:delete                          Delete an item from a cache pool
  cache:pool:list                            List available cache pools
  cache:pool:prune                           Prune cache pools
  cache:warmup                               Warm up an empty cache
 config
  config:dump-reference                      Dump the default configuration for an extension
 dbal
  dbal:run-sql                               Executes arbitrary SQL directly from the command line.
 debug
  debug:autowiring                           List classes/interfaces you can use for autowiring
  debug:config                               Dump the current configuration for an extension
  debug:container                            Display current services for an application
  debug:dotenv                               Lists all dotenv files with variables and values
  debug:event-dispatcher                     Display configured listeners for an application
  debug:firewall                             Display information about your security firewall(s)
  debug:router                               Display current routes for an application
  debug:twig                                 Show a list of twig functions, filters, globals and tests
  debug:validator                            Display validation constraints for classes
 doctrine
  doctrine:cache:clear-collection-region     Clear a second-level cache collection region
  doctrine:cache:clear-entity-region         Clear a second-level cache entity region
  doctrine:cache:clear-metadata              Clears all metadata cache for an entity manager
  doctrine:cache:clear-query                 Clears all query cache for an entity manager
  doctrine:cache:clear-query-region          Clear a second-level cache query region
  doctrine:cache:clear-result                Clears result cache for an entity manager
  doctrine:database:create                   Creates the configured database
  doctrine:database:drop                     Drops the configured database
  doctrine:ensure-production-settings        Verify that Doctrine is properly configured for a production environment
  doctrine:mapping:convert                   [orm:convert:mapping] Convert mapping information between supported formats
  doctrine:mapping:import                    Imports mapping information from an existing database
  doctrine:mapping:info
  doctrine:migrations:current                [current] Outputs the current version
  doctrine:migrations:diff                   [diff] Generate a migration by comparing your current database to your mapping information.
  doctrine:migrations:dump-schema            [dump-schema] Dump the schema for your database to a migration.
  doctrine:migrations:execute                [execute] Execute one or more migration versions up or down manually.
  doctrine:migrations:generate               [generate] Generate a blank migration class.
  doctrine:migrations:latest                 [latest] Outputs the latest version
  doctrine:migrations:list                   [list-migrations] Display a list of all available migrations and their status.
  doctrine:migrations:migrate                [migrate] Execute a migration to a specified version or the latest available version.
  doctrine:migrations:rollup                 [rollup] Rollup migrations by deleting all tracked versions and insert the one version that exists.
  doctrine:migrations:status                 [status] View the status of a set of migrations.
  doctrine:migrations:sync-metadata-storage  [sync-metadata-storage] Ensures that the metadata storage is at the latest version.
  doctrine:migrations:up-to-date             [up-to-date] Tells you if your schema is up-to-date.
  doctrine:migrations:version                [version] Manually add and delete migration versions from the version table.
  doctrine:query:dql                         Executes arbitrary DQL directly from the command line
  doctrine:query:sql                         Executes arbitrary SQL directly from the command line.
  doctrine:schema:create                     Executes (or dumps) the SQL needed to generate the database schema
  doctrine:schema:drop                       Executes (or dumps) the SQL needed to drop the current database schema
  doctrine:schema:update                     Executes (or dumps) the SQL needed to update the database schema to match the current mapping metadata
  doctrine:schema:validate                   Validate the mapping files
 lexik
  lexik:jwt:check-config                     Checks JWT configuration
  lexik:jwt:generate-keypair                 Generate public/private keys for use in your application.
  lexik:jwt:generate-token                   Generates a JWT token
 lint
  lint:container                             Ensure that arguments injected into services match type declarations
  lint:twig                                  Lint a Twig template and outputs encountered errors
  lint:yaml                                  Lint a YAML file and outputs encountered errors
 make
  make:auth                                  Creates a Guard authenticator of different flavors
  make:command                               Creates a new console command class
  make:controller                            Creates a new controller class
  make:crud                                  Creates CRUD for Doctrine entity class
  make:docker:database                       Adds a database container to your docker-compose.yaml file
  make:entity                                Creates or updates a Doctrine entity class, and optionally an API Platform resource
  make:fixtures                              Creates a new class to load Doctrine fixtures
  make:form                                  Creates a new form class
  make:message                               Creates a new message and handler
  make:messenger-middleware                  Creates a new messenger middleware
  make:migration                             Creates a new migration based on database changes
  make:registration-form                     Creates a new registration form system
  make:reset-password                        Create controller, entity, and repositories for use with symfonycasts/reset-password-bundle
  make:serializer:encoder                    Creates a new serializer encoder class
  make:serializer:normalizer                 Creates a new serializer normalizer class
  make:subscriber                            Creates a new event subscriber class
  make:test                                  [make:unit-test|make:functional-test] Creates a new test class
  make:twig-extension                        Creates a new Twig extension class
  make:user                                  Creates a new security user class
  make:validator                             Creates a new validator and constraint class
  make:voter                                 Creates a new security voter class
 refunder
  refunder:makeAdmin                         Add a short description for your command
 reset-password
  reset-password:remove-expired              Remove expired reset password requests from persistence.
 router
  router:match                               Help debug routes by simulating a path info match
 secrets
  secrets:decrypt-to-local                   Decrypt all secrets and stores them in the local vault
  secrets:encrypt-from-local                 Encrypt all local secrets to the vault
  secrets:generate-keys                      Generate new encryption keys
  secrets:list                               List all secrets
  secrets:remove                             Remove a secret from the vault
  secrets:set                                Set a secret in the vault
 security
  security:hash-password                     Hash a user password
 server
  server:dump                                Start a dump server that collects and displays dumps in a single place
  server:log                                 Start a log server that displays logs in real time


##########################################################################
Symfony Exception Untrusted host while running with url different than localhost
##########################################################################

https://github.com/api-platform/api-platform/issues/897
https://github.com/symfony/symfony/issues/29609
https://laracasts.com/discuss/channels/general-discussion/untrusted-host-127001

.env

TRUSTED_HOSTS='^localhost|api|example.com'
TRUSTED_HOSTS=^localhost|172.23.0.5$

docker-compose restart
docker-compose stop && docker-compose start

APP_ENV=prod
APP_SECRET=secret
TRUSTED_PROXIES=127.0.0.1,127.0.0.2
TRUSTED_HOSTS=localhost,example.com

##########################################################################
No route found for "GET http://172.23.0.5:9003/authentication_token": Method Not Allowed (Allow: POST)
##########################################################################

https://api-platform.com/docs/core/jwt/
https://api-platform.com/docs/core/security/
https://github.com/teohhanhui/api-platform-docs/blob/master/core/jwt.md
https://symfonycasts.com/screencast/api-platform-security/json-login
https://symfony.com/doc/4.0/security/api_key_authentication.html
https://symfony.com/doc/5.2/security/guard_authentication.html
https://stackoverflow.com/questions/64479251/apiplatform-jwt-authentication-token-route-issue
https://stefanoalletti.wordpress.com/2019/08/02/authentication-with-vuejs-using-symfony-and-api-platform-part-1/
https://grafikart.fr/tutoriels/api-platform-auth-jwt-1915

docker-compose exec php composer require jwt-auth

curl http://localhost:8000/
curl -H "X-AUTH-TOKEN: FAKE" http://localhost:8000/
curl -H "X-AUTH-TOKEN: REAL" http://localhost:8000/
curl -H "X-AUTH-TOKEN: ILuvAPIs" http://localhost:8000/

Create fixtures

#fixtures/api-users.yaml
App\Entity\UserApi:
    user_api_1:
        email: api-user@bookstore.com
        password: <('$2y$12$wiN7w.K4bj9fdrzLUb.EPvzgMyXgJpd9Ar4yw1rJDz7G9Lvvny')> # admin
        roles: ['ROLE_API']
        apiToken: eb0bcb7636538646365386663653867a6

regenerate the database.
$ bin/console doctrine:schema:drop --force --no-interaction
$ bin/console doctrine:schema:create --no-interaction
$ bin/console hautelook:fixtures:load --no-interaction --purge-with-truncate -vvv



####################################################
404 resource not found api-platform
####################################################

https://stackoverflow.com/questions/42386176/404-resource-not-found-api-platform
https://api-platform.com/docs/distribution/
https://api-platform.com/docs/core/errors/
https://symfony.com/doc/current/cloud/troubleshooting.html
https://linuxconfig.org/bash-netstat-command-not-found-debian-ubuntu-linux
https://manpages.ubuntu.com/manpages/focal/en/man8/php-fpm7.4.8.html
https://forum.nginx.org/read.php?3,3485
https://stackoverflow.com/questions/26982274/ps-command-doesnt-work-in-docker-container

php bin/console cache:clear
docker compose exec php bin/console cache:clear --env=prod

php -S localhost:8000 -t public

curl -1sLf 'https://dl.cloudsmith.io/public/symfony/stable/setup.deb.sh' | bash
apt install symfony-cli
symfony serve
symfony serve --port=9003

php-fpm
apt-get update && apt-get install procps
ps aux | grep php
kill -s SIGQUIT 1

* SIGINT, SIGTERM: immediate termination
* SIGQUIT: graceful stop
* SIGUSR1: re-open log file
* SIGUSR2: graceful reload of all workers + reload of fpm conf/binary
* SIGINT: immediate termination
* SIGTERM: graceful stop
* SIGQUIT: core dump
* SIGUSR1: re-open log file
* SIGHUP, SIGUSR2: graceful reload of all workers + reload of fpm conf/
binary


symfony log app --tail
symfony logs all
symfony env:debug
symfony env:debug --off

apt install net-tools
netstat -ln | grep 8080
netstat -ln

####################################################
CORS_ALLOW_ORIGIN
####################################################

https://api-platform.com/docs/admin/getting-started/
https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
https://github.com/nelmio/NelmioCorsBundle#configuration
https://api-platform.com/docs/core/
https://create-react-app.dev/docs/adding-custom-environment-variables/
https://github.com/nelmio/NelmioCorsBundle/issues/99
https://stackoverflow.com/questions/54544855/allow-cors-on-symfony-4
https://codereviewvideos.com/course/beginners-guide-back-end-json-api-front-end-2018/video/symfony-4-cors-json-api

api/.env
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CORS_ALLOW_ORIGIN='^https?://localhost:?[0-9]*$'

docker compose exec php bin/console cache:clear --env=prod


.env
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
###> nelmio/cors-bundle ###
CORS_ALLOW_ORIGIN=.*
###< nelmio/cors-bundle ###


nelmio_cors.yaml
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
nelmio_cors:
    defaults:
        origin_regex: true
        allow_credentials: true
        allow_origin: ['*']
        allow_methods: ['*']
        allow_headers: ['*']
        expose_headers: ['*']
        forced_allow_origin_value: ~
        max_age: 3600
    paths:
        '^/': ~


php -S different.com:8080 -t .
php -S api.oursite.com:8000 -t public
php bin/console server:start api.oursite.com:8000


CORS_ALLOW_ORIGIN=^https?://localhost:?[0-9]*$
CORS_ALLOW_ORIGIN=^http://different.com:8000$		# allow a specific domain
CORS_ALLOW_ORIGIN=^https?://.*?$			        # allow anyone
CORS_ALLOW_ORIGIN=*

https://github.com/api-platform/api-platform/issues/897
https://api-platform.com/docs/core/configuration/
https://api-platform.com/docs/core/security/
https://symfony.com/doc/current/deployment/proxies.html
https://api-platform.com/docs/schema-generator/configuration/
https://symfonycasts.com/screencast/api-platform2/api-resource
https://api-platform.com/docs/deployment/traefik/#

TRUSTED_HOSTS
TRUSTED_HOSTS='^localhost|api|myproject.dev$'
TRUSTED_PROXIES=127.0.0.1

####################################################
api platform curl connection refused
####################################################

https://github.com/api-platform/api-platform/issues/730
https://github.com/api-platform/api-platform/issues/1738
https://api-platform.com/docs/create-client/troubleshooting/

docker-compose up -d
docker-compose down

docket-compose pull && docker-compose build
curl --insecure https://localhost:3000
curl --insecure https://172.18.0.8:3000

api/.env
CORS_ALLOWED_ORIGIN='172.19.0.8'
COMPOSE_HTTP_TIMEOUT=360

# debug with payload
curl -vks --insecure -X POST http://endpoint -H 'Content-Type: application/json' -H "Prefer: respond-async"   -d '{"email": "bla@bla.de"}'


################################################################
Curl POST Request Syntax Payload
################################################################

https://reqbin.com/req/c-dwjszac0/curl-post-json-example
https://gist.github.com/ungoldman/11282441
https://stackoverflow.com/questions/18611903/how-to-pass-payload-via-json-file-for-curl
https://www.warp.dev/terminus/post-json-data-with-curl
https://javarevisited.blogspot.com/2022/08/how-to-post-json-data-with-curl-command.html
https://tecadmin.net/post-json-data-with-curl-command/
https://everything.curl.dev/http/post/json
https://unix.stackexchange.com/questions/739647/expand-variable-in-the-json-payload-of-a-curl-command

#!/bin/sh

curl -X POST [URL] -H "Content-Type: application/json" -d "[JSON data]"
curl -X POST [URL]  -H "Content-Type: application/json" -d '{"type":"Feature","properties":"2"}'

curl -X POST https://reqbin.com/echo/post/json -d @filename
curl -X POST -H "Content-Type: application/json" -d @FILENAME DESTINATION

curl --json '{"tool": "curl"}' https://example.com/

# curl 7.82.0 and later (released March 2022)
$ curl --json '{"foo":  "bar"}' https://myendpoint.com/message

# before 7.82.0
curl -X POST -H 'Content-Type: application/json' -d ‘{"foo":  "bar"}’ https://myendpoint.com/message
curl -i  -H "Accept: application/json" -X POST  -d '{"username":"root","password":"root"}' https://localhost:8080/springdemo/rest/book
curl -X POST -H "Content-Type: application/json" -d '{"key":"val"}' URL

Curl POST Data
curl -X POST -H "Content-Type: application/json" -d @data.json http://example.com/endpoint

Curl POST Data with Response Header
curl -X POST -H "Content-Type:application/json" -d @data.json http://example.com/endpoint -i
curl -X POST -H "Content-Type: application/json" -d @data.json http://example.com/endpoint -o response.txt






