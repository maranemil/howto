Hereâ€™s an example of performing basic image transformations using Python and OpenCV. This script demonstrates resizing, rotating, and flipping an image.
Code Example:
Pythonimport cv2
import numpy as np

# Load an image from file
image_path = "example.jpg"  # Replace with your image path
image = cv2.imread(image_path)

# Check if the image was loaded successfully
if image is None:
    print("Error: Could not load the image. Check the file path.")
    exit()

# Display the original image
cv2.imshow("Original Image", image)

# 1. Resize the image
resized_image = cv2.resize(image, (300, 300))  # Resize to 300x300 pixels
cv2.imshow("Resized Image", resized_image)

# 2. Rotate the image (90 degrees clockwise)
(h, w) = image.shape[:2]
center = (w // 2, h // 2)
rotation_matrix = cv2.getRotationMatrix2D(center, 90, 1.0)  # Rotate by 90 degrees
rotated_image = cv2.warpAffine(image, rotation_matrix, (w, h))
cv2.imshow("Rotated Image", rotated_image)

# 3. Flip the image (vertically)
flipped_image = cv2.flip(image, 0)  # Flip vertically (0 for vertical, 1 for horizontal)
cv2.imshow("Flipped Image", flipped_image)

# Wait for a key press and close all windows
cv2.waitKey(0)
cv2.destroyAllWindows()

Explanation:

Resizing: The cv2.resize() function resizes the image to the specified dimensions (300x300 in this case).
Rotation: The cv2.getRotationMatrix2D() function creates a rotation matrix, and cv2.warpAffine() applies the rotation.
Flipping: The cv2.flip() function flips the image vertically (use 1 for horizontal flipping).

Prerequisites:

Install OpenCV: pip install opencv-python
Replace "example.jpg" with the path to your image file.

Output:

The script opens separate windows displaying the original, resized, rotated, and flipped images. Press any key to close the windows.


