Hereâ€™s an example of how to separate audio tracks (e.g., vocals and instruments) using the Spleeter library, a popular Python-based tool for audio source separation.
Installation
First, install Spleeter using pip:
Bashpip install spleeter

Code Example
The following script separates an audio file into two stems: vocals and accompaniment.
Pythonfrom spleeter.separator import Separator
import os

# Function to separate audio into stems
def separate_audio(input_audio_path, output_dir):
    try:
        # Initialize Spleeter with a 2-stem model (vocals + accompaniment)
        separator = Separator('spleeter:2stems')

        # Perform separation
        separator.separate_to_file(input_audio_path, output_dir)

        print(f"Audio separation completed. Files saved in: {output_dir}")
    except Exception as e:
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    # Input audio file path (replace with your file path)
    input_audio = "example_audio.mp3"

    # Output directory for separated stems
    output_directory = "output_stems"

    # Ensure output directory exists
    os.makedirs(output_directory, exist_ok=True)

    # Call the function to separate audio
    separate_audio(input_audio, output_directory)

How It Works:

Model Selection: The spleeter:2stems model separates the audio into two components: vocals and accompaniment. Other models like spleeter:4stems (vocals, drums, bass, and other) are also available.
Input File: Replace example_audio.mp3 with the path to your audio file.
Output Directory: The separated audio files will be saved in the specified directory.

Example Output:
If the input file is example_audio.mp3, the output directory will contain:

vocals.wav: Isolated vocals.
accompaniment.wav: Background music.

Notes:

Ensure you have FFmpeg installed for audio processing.
Spleeter supports various audio formats like MP3, WAV, etc.
For better results, use high-quality audio files.

Let me know if you need further assistance!

