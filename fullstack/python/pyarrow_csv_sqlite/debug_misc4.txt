####################################################
pyarrow append
####################################################

https://stackoverflow.com/questions/47113813/using-pyarrow-how-do-you-append-to-parquet-file
https://stackoverflow.com/questions/32940416/methods-for-writing-parquet-files-using-python
https://arrow.apache.org/docs/python/parquet.html

import pandas as pd
import pyarrow as pa
import pyarrow.parquet as pq


chunksize=10000 # this is the number of lines

pqwriter = None
for i, df in enumerate(pd.read_csv('sample.csv', chunksize=chunksize)):
    table = pa.Table.from_pandas(df)
    # for the first chunk of records
    if i == 0:
        # create a parquet write object giving it an output file
        pqwriter = pq.ParquetWriter('sample.parquet', table.schema)
    pqwriter.write_table(table)

# close the parquet writer
if pqwriter:
    pqwriter.close()



####################################################
clear variable
####################################################

https://stackoverflow.com/questions/8237647/clear-variable-in-python
https://exerror.com/how-to-clear-variables-in-python/


If want to totally delete it use del:
del your_variable


Or otherwise, to make the value None:
your_variable = None

If it's a mutable iterable (lists, sets, dictionaries, etc, but not tuples because they're immutable), you can make it empty like:

your_variable.clear()


####################################################
unix timestamp
####################################################
https://stackoverflow.com/questions/16755394/what-is-the-easiest-way-to-get-current-gmt-time-in-unix-timestamp-format


import time
time.time()

import time
int(time.time())

from datetime import datetime
datetime.utcnow().timestamp()

from datetime import datetime
print(datetime.now().timestamp())

####################################################
delete file if exists
####################################################
https://appdividend.com/2021/08/13/how-to-delete-file-if-exists-in-python/#:~:text=To%20delete%20a%20file%20if,remove()%20method.

import os
if os.path.exists("app.cpp"):
    os.remove("app.cpp")
    print("The file has been deleted successfully")
else:
    print("The file does not exist!")


####################################################
    'list' object has no attribute 'reset_index'
####################################################

() - truple
{} - dict
[] - list


parquet must have string column names
https://github.com/pandas-dev/pandas/issues/25043
https://fixexception.com/pandas/parquet-must-have-string-column-names/
https://stackoverflow.com/questions/54861430/how-do-i-save-multi-indexed-pandas-dataframes-to-parquet
https://www.codegrepper.com/code-examples/python/parquet+must+have+string+column+names
https://gemfury.com/cytora/python:pandas/-/content/io/parquet.py
https://www.programcreek.com/python/example/126811/pyarrow.parquet
https://newbedev.com/python-parquet-must-have-string-column-names-code-example
https://docs.dask.org/en/stable/generated/dask.dataframe.to_parquet.html
https://pandas.pydata.org/pandas-docs/version/1.1/reference/api/pandas.DataFrame.to_parquet.html
https://pandas.pydata.org/pandas-docs/dev/reference/api/pandas.DataFrame.to_parquet.html
https://www.pythonfixing.com/2022/04/fixed-can-i-store-parquet-file-with.html
https://www.mikulskibartosz.name/how-to-write-parquet-file-in-python/
https://www.codegrepper.com/code-examples/python/frameworks/django/dictionary+to+parquet+python

FIX
listtop = pd.DataFrame(top.items())
listtop.head(3)
listtop.columns = listtop.columns.astype(str)
listtop.to_parquet("top.pqt")



https://docs.python.org/3/tutorial/datastructures.html

####################################################
unhashable type list
####################################################

https://rollbar.com/blog/handling-unhashable-type-list-exceptions/
https://bobbyhadz.com/blog/python-typeerror-unhashable-type-list
https://www.datasciencelearner.com/typeerror-unhashable-type-list-fix-easily/
https://itsmycode.com/typeerror-unhashable-type-list/
https://stackoverflow.com/questions/62750576/write-nested-parquet-format-from-python


# load packages

import pandas as pd
import json
import pyarrow as pa
import pyarrow.parquet as pq

# Create dummy data
# dummy data with JSON as string
person_data = {'Name':  ['Bob'],
        'Age': [25],
        'languages': "{'mother_language': 'English', 'other_languages': ['German', 'French']}"
        }

# from dict to panda df
person_df = pd.DataFrame.from_dict(person_data)

# from panda df to pyarrow table
person_pat = pa.Table.from_pandas(person_df)

# save as parquet file
pq.write_table(person_pat, 'output/example.parquet')




# load dummy data
sample = pa.parquet.read_table('output/example.parquet')

# transform to dict
sample_dict = sample.to_pydict()
# print with indent for checking
print(json.dumps(sample_dict, sort_keys=True, indent=4))
# load json from string and replace string
sample_dict['languages'] = json.loads(str(sample_dict['languages']))
print(json.dumps(sample_dict, sort_keys=True, indent=4))
#type(sample_dict['languages'])


####################################################
convert dictionary into list
####################################################
https://pythonguides.com/python-convert-dictionary-to-list/
https://www.tutorialspoint.com/How-to-convert-Python-Dictionary-to-a-list
https://www.pythonpool.com/dictionary-to-list-python/
https://stackoverflow.com/questions/1679384/converting-dictionary-to-list
https://python-forum.io/thread-28266.html



import pandas as pd
import numpy as np
index = [('California', 2000), ('California', 2010),
         ('New York', 2000), ('New York', 2010),
         ('Texas', 2000), ('Texas', 2010)]
populations = [33871648, 37253956,
               18976457, 19378102,
               20851820, 25145561]
index = pd.MultiIndex.from_tuples(index)
print(index)
pop = populations.reindex(index)
population = pd.DataFrame(populations, index=index)


my_dict ={"b":20,"c":10}
con_lis = list(my_dict.items())
print("Converted dict to list:",con_lis)


to_dict ={"d":50,"f":10,"g":40}
new_val = list(to_dict.values())
print("Converted dict to list:",new_val)


to_dict ={"i":160,"w":110,"s":340}
m = list(zip(to_dict.keys(), to_dict.values()))
print("Convert dictionary to list:",m)


new_dict ={"z":320,"p":430,"o":245}
n_val = list(new_dict.keys())
print("Convert dictionary to list",n_val)

n_dictionary ={"James":240,"William":180,"Chris":140}
n_lis = [(key, value) for key, value in n_dictionary.items()]
print(n_lis)


my_dict ={"Newzealand":860,"Swizerland":780,"Moscow":340}
con_val= list(map(list,my_dict.items()))
print(con_val)


dictionary = {"u":67, "m":18,"f":92}
my_lis = []
for new_k, new_v in dictionary.items():
    my_lis.append([new_k, new_v])
print("Dictionary to list",my_lis)


to_dictionary = {"h":[51], "g":[198],"l":[912]}
output = [[new_key] + new_val for new_key, new_val in to_dictionary.items()]
print(output)



import collections
my_dictionary = { "U.S.A": 74, "Algeria":82, "Cambodia": 51 }
new_tup_lis = collections.namedtuple('my_lis', 'Country val')
convert_lis = list(new_tup_lis(*item) for item in my_dictionary.items())
print(convert_lis)



new_dictiy = { "p" : [4, 9], "d" : [5, 8], "l" : [19, 18] }
con_li_dic = [{new_k : new_val[x] for new_k, new_val in new_dictiy.items()}
         for x in range(2)]
print ("Convert list into dictionaries:",con_li_dic)



d = {"name":"python", "version":3.9}
new_list = list(d.items())
print(new_list)


d = {"name":"python", "version":3.9}
new_list = list(d.values())
print(new_list)



d = {"name":"python", "version":3.9}
new_list = []
for key, val in d.items():
    new_list.append([key, val])
print(new_list)




d = {"name":"python", "version":3.9}
new_list = [(k, v) for k, v in d.items()]
print(new_list)



d = {"name":"python", "version":3.9}
new_list = zip(d.keys(), d.values())
new_list = list(new_list)
print(new_list)



d = {"name":"python", "version":3.9}
new_list = list(map(list, d.items()))
print(new_list)

####################################################
'list' object has no attribute 'values' when we are using append
####################################################

https://datascience.stackexchange.com/questions/62819/list-object-has-no-attribute-values-when-we-are-using-append-in-python
https://researchdatapod.com/how-to-solve-python-attributeerror-list-object-has-no-attribute-apply/
https://bobbyhadz.com/blog/python-attributeerror-list-object-has-no-attribute



y =y.values().astype(int)

convert y to a list of integers you can use list comprehension:
y = [int(x) for x in y]

use map as alternative:
y = list(map(int, y))

lst = ["2", "4", "6", "8", "10", "12"]
lst.apply(lambda x: int(x)
print(lst)

lst = ["2", "4", "6", "8", "10", "12"]
int_lst = [int(x) for x in lst]
print(int_lst)

lst = ["2", "4", "6", "8", "10", "12"]
int_lst = list(map(int, lst))
print(int_lst)


####################################################
AttributeError: 'list' object has no attribute 'reset_index'
####################################################
https://stackoverflow.com/questions/56213580/attributeerror-list-object-has-no-attribute-reset-index

new.groupby('car').price

https://docs.sqlalchemy.org/en/14/core/connections.html#sqlalchemy.engine.Connection.execution_options.params.max_row_buffer
https://docs.sqlalchemy.org/en/14/core/connections.html


####################################################
ThreadPoolExecutor multithreading
####################################################

https://docs.python.org/3/library/concurrent.futures.html
https://www.tutorialspoint.com/python/python_multithreading.htm
https://docs.python.org/3/library/threading.html
https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.ThreadPool
https://docs.python.org/3/library/multiprocessing.html
https://docs.python.org/3/library/threading.html


def wait_on_future():
    f = executor.submit(pow, 5, 2)
    # This will never complete because there is only one worker thread and
    # it is executing this function.
    print(f.result())

executor = ThreadPoolExecutor(max_workers=1)
executor.submit(wait_on_future)




from multiprocessing import Pool

def f(x):
    return x*x

if __name__ == '__main__':
    with Pool(5) as p:
        print(p.map(f, [1, 2, 3]))




#!/usr/bin/python

import thread
import time

# Define a function for the thread
def print_time( threadName, delay):
   count = 0
   while count < 5:
      time.sleep(delay)
      count += 1
      print "%s: %s" % ( threadName, time.ctime(time.time()) )

# Create two threads as follows
try:
   thread.start_new_thread( print_time, ("Thread-1", 2, ) )
   thread.start_new_thread( print_time, ("Thread-2", 4, ) )
except:
   print "Error: unable to start thread"

while 1:
   pass






