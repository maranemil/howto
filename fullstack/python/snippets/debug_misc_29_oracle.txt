##########################################################################
cx_Oracle
##########################################################################

https://cx-oracle.readthedocs.io/en/latest/user_guide/installation.html
https://cx-oracle.readthedocs.io/en/latest/
https://pypi.org/project/cx-Oracle/
https://github.com/oracle/python-cx_Oracle
https://github.com/zzzeek/sqlalchemy/blob/master/lib/sqlalchemy/dialects/oracle/cx_oracle.py
https://github.com/zzzeek/sqlalchemy/blob/master/lib/sqlalchemy/dialects/mysql/mariadb.py
https://docs.sqlalchemy.org/en/14/dialects/oracle.html
https://oracle.github.io/python-cx_Oracle/
https://docs.oracle.com/en/database/oracle/oracle-database/index.html
https://docs.oracle.com/en/database/oracle/oracle-database/21/install-and-upgrade.html
https://docs.oracle.com/en/database/oracle/oracle-database/21/deeck/index.html

python -m pip install cx_Oracle --upgrade
python -m pip install cx_Oracle --upgrade --user

engine = create_engine(
    "oracle+cx_oracle://scott:tiger@oracle122",
    max_identifier_length=30)


# myscript.py

import cx_Oracle

# Connect as user "hr" with password "welcome" to the "orclpdb1" service running on this computer.
connection = cx_Oracle.connect(user="hr", password="welcome",
                               dsn="localhost/orclpdb1")

cursor = connection.cursor()
cursor.execute("""
        SELECT first_name, last_name
        FROM employees
        WHERE department_id = :did AND employee_id > :eid""",
        did = 50,
        eid = 190)
for fname, lname in cursor:
    print("Values:", fname, lname)



######################################################
Python to MariaDB Connector
######################################################

https://mariadb.com/resources/blog/how-to-connect-python-programs-to-mariadb/
https://pypi.org/project/mariadb/
https://mariadb.com/docs/connect/programming-languages/python/install/

pip3 install mariadb
pip install mariadb


pip search mysql-connector | grep --color mysql-connector-python

PyPI's XMLRPC API is currently disabled due to unmanageable load and will be deprecated in the near future.
https://pypi.org/
https://github.com/jeffmm/pypi-simple-search
https://github.com/shubhodeep9/pipsearch

https://stackoverflow.com/questions/72879852/python-setup-py-egg-info-did-not-run-successfully-when-pip-install-mariadb

If MariaDB Connector/C is not installed, see installation instructions
If MariaDB Connector/C is installed, either set the environment variable
MARIADB_CONFIG or edit the configuration file 'site.cfg' to set the
'mariadb_config' option to the file location of the mariadb_config utility.


sudo apt-get install libmariadb3 libmariadb-dev
pip install --upgrade setuptools

mariadb_python.h:21:10: fatal error: Python.h:

sudo apt install mariadb-connector-c-devel gcc python3-devel
sudo apt-get install mariadb-connector-c-devel
python3 -m pip install mariadb

https://www.virtuozzo.com/application-platform-docs/connection-to-mysql-python/

pip install mysql-connector

https://linuxhint.com/modulenotfounderror-module-named-mysqldb/
https://teracontent.com/how-to-use-mysql-mariadb-with-python-tutorial/

pip3 install mysql-connector-python
pip3 install mysql-python
pip3 install mysqlclient

pip install mysql-connector-python
pip install mysql-python
pip install mysqlclient

conda install -c anaconda mysql-python
conda install -c anaconda mysql-connector-python

import MySQLdb

...

apt install python3-pip
python3 -m pip install mysql-connector
python3 -m pip search mysql-connector | grep --color
python3 -m pip install mysql-connector-python-rf
apt install python3-mysqldb

sudo apt install libmariadb-dev
pip install mysql-connector

https://bobbyhadz.com/blog/python-no-module-named-mysql
https://www.datasciencelearner.com/importerror-no-module-named-mysqldb-fix/
https://techglimpse.com/no-module-named-mysqldb-solution/

pip3 install mysql-connector-python
sudo pip3 install mysql-connector-python
pip3 install mysql-connector-python-rf
pip install PyMySQL
conda install -c anaconda pymysql

pip install MySQL-python
sudo apt install python3-mysqldb

----------
https://docs.sqlalchemy.org/en/14/core/engines.html

FIX

mysql+pymysql 		- OK - pip install pymysql
mysql+mysqlconnector 	- OK - pip install mysql-connector-python

mysql+asyncmy 	?  https://github.com/long2ice/asyncmy
mysql+aiomysql 	?  https://github.com/aio-libs/aiomysql
mysql+oursql 	?  https://pythonhosted.org/oursql/
mysql+pyodbc 	?  https://pypi.org/project/pyodbc/  pip install pyodbc


# https://docs.sqlalchemy.org/en/14/orm/extensions/asyncio.html
from sqlalchemy.ext.asyncio import create_async_engine
engine = create_async_engine("mysql+aiomysql://user:pass@hostname/dbname?charset=utf8mb4")



#######################################################
MySQL to Oracle Migration Reference
#######################################################

http://www.sqlines.com/online
https://www.sqlines.com/mysql-to-oracle
https://www.sqlines.com/mysql-to-oracle#sqlines-sql-converter-tool
https://stackoverflow.com/questions/14829227/how-can-i-automatically-convert-mysql-ddl-to-oracle-ddl

https://www.oracle.com/database/sqldeveloper/
https://www.oracle.com/database/sqldeveloper/technologies/download/

https://www.mysql.com/products/workbench/


csvkit 2 oracle

https://csvkit.readthedocs.io/en/latest/scripts/csvsql.html
https://manpages.ubuntu.com/manpages/impish/man1/csvsql.1.html
https://github.com/wireservice/csvkit/blob/master/csvkit/utilities/csvsql.py
https://old.frictionlessdata.io/specs/csv-dialect/
https://csvkit.readthedocs.io/en/latest/scripts/csvsql.html#examples
https://s3.amazonaws.com/assets.datacamp.com/production/course_15878/slides/chapter3.pdf

-i {firebird,mssql,mysql,oracle,postgresql,sqlite,sybase,crate},
--dialect {firebird,mssql,mysql,oracle,postgresql,sqlite,sybase,crate}
                        Dialect of SQL to generate. Cannot be used with --db.


csvsql --dialect oracle state.csv > oracle_state.sql
csvsql -i oracle state.csv > oracle_state.sql

----

Oracle DATA PUMP Using SQLPLUS SPOOL command
https://dwbi.org/pages/43
https://dwbi.org/pages/42

emp_query.sql
SELECT EMPNO ||',' || ENAME || ',' || SAL || ',' || COMM FROM EMP;
SQL> CONN SCOTT/TIGER@ORCL
Connected.
SQL> SET FEEDBACK OFF HEADING OFF ECHO OFF
SQL> SPOOL C:\External_Tables\emp.csv
SQL> @C:\External_Tables\emp_query.sql
SQL> SPOOL OFF
host type C:\External_Tables\emp.csv