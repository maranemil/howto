######################################################
Parquet File Reader
######################################################

Windows
https://github.com/mukunku/ParquetViewer
https://apps.microsoft.com/store/detail/apache-parquet-viewer/9PGB0M8Z4J2T?hl=en-us&gl=us


Online Parquet File Reader

https://www.parquet-viewer.com/
https://parquet-viewer-online.com/

Linux Parquet File Reader

https://github.com/Eugene-Mark/bigdata-file-viewer
java -jar BigdataFileViewer-1.3-SNAPSHOT-jar-with-dependencies.jar

https://www.tadviewer.com/
https://github.com/antonycourtney/tad
https://github.com/antonycourtney/tad/releases/download/v0.10.1/tad_0.10.1_amd64.deb
tad MetObjects.csv

https://duckdb.org/docs/data/parquet
https://duckdb.org/docs/guides/data_viewers/tad

https://parquet.apache.org/




######################################################
csvq SQL-like query language for csv
######################################################

https://mithrandie.github.io/csvq/reference/install.html
https://mithrandie.github.io/csvq/
https://formulae.brew.sh/formula/csvq
https://github.com/mithrandie/csvq
https://github.com/inkel/csvq
https://mithrandie.github.io/csvq/reference/command.html
https://mithrandie.github.io/csvq/reference/json.html

sudo add-apt-repository ppa:mithrandie/csvq
sudo apt update
sudo apt install csvq


# Simple query
csvq 'select id, name from `user.csv`'
csvq 'select id, name from user'

# Specify data delimiter as tab character
csvq -d '\t' 'select count(*) from `user.csv`'

# Load no-header-csv
csvq --no-header 'select c1, c2 from user'

# Load from redirection or pipe
csvq 'select * from stdin' < user.csv
cat user.csv | csvq 'select *'

# Load from Fixed-Length Format
cat /var/log/syslog | csvq -n -i fixed -m '[15, 24, 124]' 'select *'

# Split lines with spaces automatically
ps | csvq -i fixed -m spaces 'select * from stdin'

# Output in JSON format
csvq -f json 'select integer(id) as id, name from user'

# Output to a file
csvq -o new_user.csv 'select id, name from user'



# Load statements from file
$ cat statements.sql
VAR @id := 0;
SELECT @id := @id + 1 AS id,
       name
  FROM user;

$ csvq -s statements.sql

# Execute statements in the interactive shell
$ csvq
csvq > UPDATE users SET name = 'Mildred' WHERE id = 2;
1 record updated on "/home/mithrandie/docs/csv/users.csv".
csvq > COMMIT;
Commit: file "/home/mithrandie/docs/csv/users.csv" is updated.
csvq > EXIT;

# Show help
csvq -h


######################################################
parquet tools cli
######################################################
https://stackoverflow.com/questions/36140264/inspect-parquet-from-command-line

pip install parquet-cli

parq input.parquet --head 2 # show first rows
parq input.parquet -c # count
parq input.parquet -tail 2 # shows last rwos
parq input.parquet -s # schema
parq input.parquet --head 2 | less

parquet-tools csv -n 4 input.parquet | head


parquet-tools csv input.gz.parquet | csvq -f json "select id, description"
parquet-tools csv -n 1 input.pqt | csvq "select description"


##############################################
Python code formatter
https://github.com/psf/black
##############################################

pip install git+https://github.com/psf/black

black {source_file_or_directory}
python -m black {source_file_or_directory}

##############################################
flake8
https://github.com/pycqa/flake8
##############################################

flake8 is a python tool that glues together pycodestyle, pyflakes, mccabe, and third-party plugins to check the style and quality of some python code.


##############################################
Comments and Docstrings Google Python Style Guide
https://google.github.io/styleguide/pyguide.html#38-comments-and-docstrings
##############################################

https://sphinx-rtd-tutorial.readthedocs.io/en/latest/docstrings.html
https://sphinx-rtd-tutorial.readthedocs.io/en/latest/folders.html
https://www.sphinx-doc.org/en/master/usage/extensions/example_google.html
https://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html
https://pythonhosted.org/an_example_pypi_project/sphinx.html


pip install sphinx
pip install sphinx-rtd-theme
#pip install bluepy

sphinx-quickstart
sphinx-apidoc -f -o ./source ./project

Autodoc configuratio

import os
import sys
sys.path.insert(0, os.path.abspath('../../simpleble/'))

make clean
make html


Files should start with a docstring describing the contents and usage of the module.

"""A one line summary of the module or program, terminated by a period.

Leave one blank line.  The rest of this docstring should contain an
overall description of the module or program.  Optionally, it may also
contain a brief description of exported classes and functions and/or usage
examples.

  Typical usage example:

  foo = ClassFoo()
  bar = foo.FunctionBar()
"""



#####################################################
Pylint and Flake8
#####################################################

https://www.freecodecamp.org/news/auto-format-your-python-code-with-black
https://flake8.pycqa.org/en/latest/internal/formatters.html
https://pypi.org/project/autopep8/
https://py-vscode.readthedocs.io/en/latest/files/linting.html
http://www.sefidian.com/2021/08/03/how-to-use-black-flake8-and-isort-to-format-python-codes/
https://pypi.org/project/flake8-black/
https://pypi.org/project/flake8-string-format/
https://pypi.org/project/flake8/

pip install flake8
pip install black

black --check file.py
black -l 60 file.py
black --line-length 79 --target-version py27 .

pip install autopep8
for f in `find . -name "*.py"`; do autopep8 --in-place --select=E701 $f; done

isort --multi-line 3 --profile black --python-version 27 .


flake8 some_file.py
flake8 --ignore P101 file.py
flake8 --max-doc-length=72 --ignore=E211,E999,F401,F821,W503

files that contain this line are skipped:
# flake8: noqa


####################################################
env
####################################################

Using .env Files for Environment Variables in Python Applications
https://dev.to/jakewitcher/using-env-files-for-environment-variables-in-python-applications-55a1

pip install python-dotenv

# .env
# environment variables defined inside a .env file
GCP_PROJECT_ID=my-project-id

# .py
import os
from dotenv import load_dotenv
load_dotenv()
GCP_PROJECT_ID = os.getenv('GCP_PROJECT_ID')

# v2 load
from dotenv import load_dotenv
from pathlib import Path
dotenv_path = Path('path/to/.env')
load_dotenv(dotenv_path=dotenv_path)




####################################################
parquet-tools
####################################################

https://stackoverflow.com/questions/36140264/inspect-parquet-from-command-line
https://linuxcommandlibrary.com/man/parquet-tools
https://stackoverflow.com/questions/53306327/installing-parquet-tools
https://pypi.org/project/parquet-tools/
https://github.com/ktrueda/parquet-tools
https://formulae.brew.sh/formula/parquet-tools
https://parquet.apache.org/
https://linuxcommandlibrary.com/man/parquet-tools
https://pypi.org/project/parquet-tools/
https://rustrepo.com/repo/manojkarthick-pqrs
https://github.com/chhantyal/parquet-cli
https://github.com/Aletheios/parquetscraper
https://www.projectpro.io/recipes/read-parquet-file-pyspark
https://community.cloudera.com/t5/Community-Articles/Build-and-use-Parquet-tools-to-read-parquet-files/ta-p/248629
http://www.mtitek.com/tutorials/bigdata/hadoop/parquet-tools.php


pip install parquet-cli
parq input.parquet
parq input.parquet --schema
parq input.parquet --count
parq input.parquet --head 10
parq input.parquet --tail 10
parq --help

pip install parquet-tools
python3 -m pip install parquet-tools
parquet-tools show filename.parquet
parquet-tools show test.parquet

parquet-tools csv s3://bucket-name/test.parquet |csvq "select one, three where three"


parquet-tools cat --json file.gz.parquet

parquet-tools csv input.gz.parquet | csvq -f json "select id, description"

parquet-tools head file.parquet | less


import pandas as pd
df = pd.read_parquet('your-file.parquet')
df.head(10)

parquet-tools --help
parquet-tools show -n5 [path/to/parquet]
parquet-tools csv [path/to/parquet]
parquet-tools csv FILE.parquet > FILE.csv
parquet-tools inspect [path/to/parquet]
parquet-tools inspect [path/to/parquet] | head
parquet-tools meta [path/to/parquet]



parquet-tools cat [path/to/parquet]
parquet-tools head [path/to/parquet]
parquet-tools schema [path/to/parquet]
parquet-tools meta [path/to/parquet]
parquet-tools dump [path/to/parquet]
parquet-tools rowcount [path/to/parquet]
parquet-tools column-index [path/to/parquet]

parquet-tools merge [path/to/parquet1] [path/to/parquet2] [path/to/target_parquet]

####################################################
jq
####################################################

https://linuxcommandlibrary.com/basic/json


echo '{"name": "Linux"}' |  jq "."

####################################################
sqlite admins
####################################################

https://sqlitebrowser.org/
https://www.sqlitetutorial.net/sqlite-limit/
https://www.sqlite.org/limits.html

https://sqlitestudio.pl/
https://www.phpliteadmin.org/
https://dbeaver.io/download/

sudo snap install sqlitebrowser
sudo snap install dbeaver-ce


####################################################
PHP for adminer
####################################################
sudo apt install php php-cli

sudo apt install php8.1-cli php8.1-curl php8.1-gd php8.1-intl php8.1-interbase \
    php8.1-mbstring php8.1-mongodb php8.1-mysql php8.1-opcache php8.1-pgsql php8.1-redis \
    php8.1-soap php8.1-sqlite3 php8.1-xml php8.1-xsl php8.1-yaml php8.1-zip

php -S localhost:8888
http://localhost:8888/adminer.php

-----------------------------------------------------------------------

sudo apt install bluesfish
sudo apt install kate kosole




####################################################
jupyter
####################################################

https://speedysense.com/install-jupyter-notebook-on-ubuntu-20-04/
https://askubuntu.com/questions/737094/jupyter-notebook-installation

sudo apt update && sudo apt -y upgrade
sudo apt install python3-pip python3-dev
sudo -H pip3 install --upgrade pip
sudo -H pip3 install virtualenv
mkdir notebook
cd notebook
virtualenv jupyterenv
source jupyterenv/bin/activate



####################################################
jupyter install
####################################################


sudo apt install python3-pip
pip install jupyter
jupyter notebook

sudo snap install jupyter       # version 1.0.0, or
sudo apt  install jupyter-core  # version 4.9.1-1


python -m pip install <package>

pip install wheel
pip install pandas

which python
python --version
which pip

sudo python3 -m pip install wheel
sudo python3 -m pip install pandas
sudo apt install python3-pandas

python3 -m pip install pandas
python3 -m pip --version
pip3 install --upgrade pip

python3 -V
pipenv --version
sudo apt install pipenv
pip --version
pip install --upgrade pip setuptools wheel
sudo apt install -y python3-dev

pip install -r requirements.txt

https://bobbyhadz.com/blog/python-no-module-named-pandas
http://net-informations.com/ds/err/pderr.htm

Cannot set up a python SDK at Python 3.9 (/usr/bin/python3.9). The SDK seems invalid.

rm -r .idea

python3 --version && which python3
python -m pip install --upgrade pip

pip install jupyter
jupyter notebook
http://127.0.0.1:8889/tree

####################################################
pip install requirements
####################################################
python -m pip install --upgrade pip
pip install -r requirements.txt


####################################################
fix packages install
####################################################

sudo apt-get update --fix-missing

####################################################
Validate/Check Parquet File Schema From PC/Laptop
####################################################

https://github.com/target/data-validator
https://coding-stream-of-consciousness.com/2020/03/04/validate-check-parquet-file-schema-from-pc-laptop/

pip install parquet-cli

parq part.parquet --schema
parquet-tools meta --debug part.parquet



################################################################
count files
################################################################

https://devconnected.com/how-to-count-files-in-directory-on-linux/
https://stackoverflow.com/questions/10238363/how-to-get-wc-l-to-print-just-the-number-of-lines-without-file-name
https://stackoverflow.com/questions/9157138/recursively-counting-files-in-a-linux-directory

ls tmp/ | wc -l
find tmp/ -type f | wc -l


####################################################
python process kill
####################################################

https://stackoverflow.com/questions/726690/what-killed-my-process-and-why

If the user or sysadmin did not kill the program the kernel may have.
The kernel would only kill a process under exceptional circumstances such as extreme resource starvation

dmesg -T| grep -E -i -B100 'killed process'
dmesg -T| grep -E 'Killed process'

Out of memory: Killed process 4002 (python3) total-vm:6229292kB, anon-rss:4494588kB, file-rss:0kB, shmem-rss:0kB, UID:1000 pgtables:11508kB oom_score_adj:0

################################################################
JAVA_HOME is not set
################################################################

java --version

sudo apt install default-jre              # version 2:1.11-72build2, or
sudo apt install openjdk-11-jre-headless  # version 11.0.16+8-0ubuntu1~22.04
sudo apt install openjdk-17-jre-headless  # version 17.0.3+7-0ubuntu0.22.04.1
sudo apt install openjdk-18-jre-headless  # version 18~36ea-1
sudo apt install openjdk-8-jre-headless   # version 8u312-b07-0ubuntu1

java.sql.SQLException: No suitable driver

java -cp mysql-connector-java-5.1.18-bin.jar:. MySQLTest
java -classpath ".;sqlite-jdbc-3.27.2.1.jar" net.sqlitetutorial.Connect
java -cp .:sqlitejdbc-v056.jar Test


org.sqlite.JDBC
sqlite-jdbc-3.7.2.jar
https://github.com/xerial/sqlite-jdbc

WARNING:root:'PYARROW_IGNORE_TIMEZONE' environment variable was not set. It is required to set this environment variable to '1' in both driver and executor sides if you use pyarrow>=2.0.0. pandas-on-Spark will set it for you but it does not work if there is a Spark context already launched.

java.lang.ClassNotFoundException: com.sqlite.jdbc.Driver

https://sparkbyexamples.com/pandas/pandas-read-sql-query-or-table/
https://pandas.pydata.org/docs/reference/api/pandas.read_csv.html
https://pandas.pydata.org/docs/reference/api/pandas.read_sql.html
https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_sql.html
https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_sql_table.html
https://arrow.apache.org/docs/python/parquet.html#finer-grained-reading-and-writing


https://dbschema.com/download.html
https://dbschema.com/jdbc-drivers/SqliteJdbcDriver.zip
https://dbschema.com/download/DbSchema_linux_9_0_3.deb

################################################################
clear swap memory linux
################################################################

https://www.redhat.com/sysadmin/clear-swap-linux
https://askubuntu.com/questions/1357/how-to-empty-swap-if-there-is-free-ram
https://linuxhandbook.com/clear-swap/
https://www.tecmint.com/clear-ram-memory-cache-buffer-and-swap-space-on-linux/

free -m
sudo swapoff -a
sudo swapon -a

sudo swapoff -a; sudo swapon -a
sudo swapoff --all
sudo swapoff -a && sudo swapon -a


sync; echo 1 > /proc/sys/vm/drop_caches
sync; echo 2 > /proc/sys/vm/drop_caches
sync; echo 3 > /proc/sys/vm/drop_caches

sudo swapoff -a && sudo fallocate -l 8G /swapfile3 && sudo chmod 600 /swapfile3 && sudo mkswap /swapfile3 && sudo swapon /swapfile3 -a && swapon -s && swapon --show


sudo swapon --all

-----------------------------------------------------------------------------
################################################################
Online Python compiler (interpreter) to run Python online.
################################################################

https://www.programiz.com/python-programming/online-compiler/

##########################################################################
sonarlint
##########################################################################

https://www.sonarsource.com/products/sonarlint/features/jetbrains/
https://plugins.jetbrains.com/plugin/7973-sonarlint
https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarlint-vscode
https://www.tabnine.com/code/java/packages/org.sonarlint.intellij.tasks
https://github.com/SonarSource/sonarlint-intellij


##########################################################################
py2exe
##########################################################################
https://splunktool.com/py2exe-sqlalchemy-and-cxoracle-importerror-no-module-named-oracle

# setup.py

from distutils.core
import setup

import py2exe, sys

sys.argv.append('py2exe')

setup(
   options = {
      "py2exe": {
         'bundle_files': 2,
         'compressed': True,
         'dll_excludes': ['oci.dll']
      }
   },
   console = [{
      'script': 'UMTSCellTest.py'
   }]
)


