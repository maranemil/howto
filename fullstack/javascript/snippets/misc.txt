

######################################################################
Basic Form Validation using Vue.js: A Simple Guide
######################################################################
https://javascript.plainenglish.io/basic-form-validation-using-vuejs-ad9489628617
https://www.digitalocean.com/community/tutorials/template-driven-form-validation-in-vuejs


<b-form-input v-model="firstName" placeholder="First name" class="input"></b-form-input>
<b-form-input v-model="lastName" placeholder="Last name" class="input">
<button class="btn1" @click="submit()">Submit</button>

<b-alert show dismissible variant="danger" v-if="errors.length > 0">
 <span v-for="error in errors" :key="error">
  {{error}},
 </span>
</b-alert>

<div class="main" v-if="showMain">
// the form
</div>
<div class="succcess" v-if="showSuc">
//success message
</div>


<script>
export default {
name: "",
data() {
 return {
   errors: [],
   firstName: '',
   lastName: '',
}}}};
</script>


methods: {
	submit(){

	// form validation
	this.errors = [];
	if (!this.firstName) {
	this.errors.push('First name required');
	}
	if (!this.lastName) {
	this.errors.push('Last name required');
	}

	}
}


if (this.firstName && this.lastName  ) {
// hidding the form
 this.showMain = false;
// showing the success message
 this.showSuc = true
}


######################################################################
fontawesome
######################################################################
https://cdnjs.com/libraries/font-awesome
https://fontawesome.com/icons/triangle-exclamation?s=solid&f=sharp
https://fontawesome.com/v5/docs/web/use-with/wordpress/install-manually
http://versions.bulma.io/0.7.0/documentation/elements/icon/

https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css

######################################################################
changing iframe src
######################################################################

https://stackoverflow.com/questions/3730159/changing-iframe-src-with-javascript
https://vuejs.org/guide/essentials/forms.html

document.getElementById('calendar').src = loc;
$('#calendar').attr('src', loc); # jquery


######################################################################
axios
######################################################################
https://linuxhint.com/install-use-axios-javascript/
https://reflectoring.io/tutorial-guide-axios/
https://axios-http.com/docs/example
https://github.com/axios/axios
https://cdnjs.com/libraries/axios
https://javascript.plainenglish.io/how-to-use-axios-in-vanilla-javascript-2dbf176e08d4
https://medium.com/codingthesmartway-com-blog/getting-started-with-axios-166cb0035237
https://stackoverflow.com/questions/63334137/how-to-access-axios-from-plain-js
https://stackoverflow.com/questions/42694457/getting-form-data-on-submit
https://blog.logrocket.com/using-v-model-vue-3-build-complex-forms/
https://laracasts.com/discuss/channels/vue/form-submit-in-vuejs
http://blog.pixelastic.com/2017/09/12/sending-data-to-an-iframe-with-vue-js/



<script src="https://unpkg.com/axios@1.1.2/dist/axios.min.js"></script>

// Make a request for a user with a given ID
axios.get('/user?ID=12345')
  .then(function (response) {
    // handle success
    console.log(response);
  })
  .catch(function (error) {
    // handle error
    console.log(error);
  })
  .finally(function () {
    // always executed
  });


axios.post('/user', {
    firstName: 'Fred',
    lastName: 'Flintstone'
  })
  .then(function (response) {
    console.log(response);
  })
  .catch(function (error) {
    console.log(error);
  });

...

var params = {
    data1: 'string',
}
axios.post(url, params).then(function(response) {
    //code here
});

...

axios.post(url, {data1: 'string' }).then(function(response) {
    //code here
});




######################################################################
vuejs
######################################################################

<script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>

<div id="app">{{ message }}</div>

<script>
  const { createApp } = Vue

  createApp({
    data() {
      return {
        message: 'Hello Vue!'
      }
    }
  }).mount('#app')
</script>

-----------------------------------------------------------

https://www.jsdelivr.com/package/npm/vue-form

<script src="
https://cdn.jsdelivr.net/npm/vue-form@4.10.3/dist/vue-form.min.js
"></script>

<div id="app">
  <vue-form :state="formstate" @submit.prevent="onSubmit">

    <validate tag="label">
      <span>Name *</span>
      <input v-model="model.name" required name="name" />

      <field-messages name="name">
        <div>Success!</div>
        <div slot="required">Name is a required field</div>
      </field-messages>
    </validate>

    <validate tag="label">
      <span>Email</span>
      <input v-model="model.email" name="email" type="email" required />

      <field-messages name="email">
        <div slot="required">Email is a required field</div>
        <div slot="email">Email is not valid</div>
      </field-messages>
    </validate>

    <button type="submit">Submit</button>
  </vue-form>
  <pre>{{ formstate }}</pre>
</div>


Vue.use(VueForm);

new Vue({
  el: '#app',
  data: {
    formstate: {},
    model: {
      name: '',
      email: 'invalid-email'
    }
  },
  methods: {
    onSubmit: function () {
      if(this.formstate.$invalid) {
        // alert user and exit early
        return;
      }
      // otherwise submit form
    }
  }
});

-----------------------------------------------------------

https://norserium.github.io/vue-advanced-forms/

<script src="https://unpkg.com/vue-advanced-forms@latest/dist/index.umd.js" />


<script>
	import { VueForm, Field } from 'vue-advanced-forms';
	export default {
		components: {
			Field, VueForm
		},
		methods: {
			required(value) {
				return {
					error: !value ? 'This field is required' : null
				}
			},
			submit({ values }) {
				console.log(values)
			}
		}
	};
</script>

<template>
	<vue-form component="form" v-slot="form" :onSubmit="submit">
		<field name="email" :validation="required" v-slot="field">
			<input v-model="field.value" v-on="field.events">
			<div v-if="field.meta.error"> {{ field.meta.error }} </div>
		</field>
		<field name="password" :validation="required" v-slot="field">
			<input v-model="field.value" v-on="field.events">
			<div v-if="field.meta.error"> {{ field.meta.error }} </div>
		</field>
		<button :disabled="!form.meta.valid" type="submit"> Submit </button>
	</vue-form>
</template>


######################################################################
vuejs forms
######################################################################
https://v2.vuejs.org/v2/guide/forms.html
https://blog.logrocket.com/an-imperative-guide-to-forms-in-vue-js-2/

https://github.com/jgthms/bulma
https://bulma.io/
https://bulma.io/documentation/
https://bulma.io/documentation/overview/start/
https://bulma.io/documentation/form/general/
https://www.softwaretestinghelp.com/bulma-columns-layout-and-forms/
https://www.geeksforgeeks.org/bulma-form/
https://www.tutorialspoint.com/bulma/bulma_form_controls.htm

@import "https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css";


######################################################################
Validating user inputs with vee-validate
######################################################################
https://vee-validate.logaretm.com/v4/examples/checkboxes-and-radio/

<script src="https://unpkg.com/vee-validate@2.0.0-rc.18/dist/vee-validate.js"></script>
Vue.use(VeeValidate);

<input name="name"
      v-model="form.name"
      v-validate="'required|min:3'"
      class="input" type="text" placeholder="Full name">




######################################################################
vue3 vu2 init
######################################################################

https://blog.logrocket.com/definitive-guide-vue-3-components/
https://stackoverflow.com/questions/65149231/vue-createapp-is-not-working-but-is-working-with-new-vue-method

................
vue3
................

const { createApp, ref, computed } = Vue;
const app = createApp({
  setup() {
    const someValue = ref(10);
    const someComputed = computed(() => someValue.value * 10);
    return {
      someValue,
      someComputed
    }
  }
});
app.mount("#app");

<div id="app">
  Some value: {{ someValue }} <br />
  Some computed value: {{ someComputed }}
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/vue/3.2.30/vue.global.min.js"></script>
<script src="https://unpkg.com/vue@next"></script>
<script src="https://unpkg.com/vue@3.2.30"></script>

................
vue2
................

new Vue({
  el: "#app",
  data() {
    return {
      someValue: 10
    }
  },
  computed: {
    someComputed() {
      return this.someValue * 10;
    }
  }
});

<div id="app">
  Some value: {{ someValue }} <br />
  Some computed value: {{ someComputed }}
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.14/vue.min.js"></script>


######################################################################
resources
######################################################################
https://www.softwaretestinghelp.com/bulma-columns-layout-and-forms/
https://bulma.io/documentation/form/general/
https://www.tutorialspoint.com/bulma/bulma_form_controls.htm
https://vuejs.org/guide/introduction.html#what-is-vue
https://vuejs.org/guide/essentials/forms.html#text
https://vuejs.org/guide/essentials/template-refs.html#ref-on-component
https://vuejs.org/examples/#form-bindings
https://vuejs.org/examples/#hello-world
https://stackoverflow.com/questions/42343778/vue-is-not-a-constructor
https://get-help.robotigniteacademy.com/t/vue-is-not-a-constructor/16180/3
https://blog.logrocket.com/an-imperative-guide-to-forms-in-vue-js-2/
https://vee-validate.logaretm.com/v4/examples/checkboxes-and-radio/
https://softauthor.com/vuejs-prevent-form-submission/
https://stackoverflow.com/questions/51732051/vuejs-preventdefault-on-form-submission
https://vuejs.org/guide/essentials/event-handling.html#method-handlers
https://vuejs.org/guide/essentials/reactivity-fundamentals.html#declaring-reactive-state
https://vuejs.org/api/built-in-directives.html
https://v2.vuejs.org/v2/guide/class-and-style.html
https://codesource.io/how-to-submit-a-form-in-vuejs/
https://stackoverflow.com/questions/45996657/submit-a-form-in-vue-how-do-i-reference-the-form-element
https://012.vuejs.org/guide/forms.html
https://vuejs.org/api/application.html#createapp
https://vuejsdevelopers.com/2020/03/16/vue-js-tutorial/
https://vueschool.io/articles/vuejs-tutorials/the-benefits-of-the-vue-3-app-initialization-code/
https://vuejs.org/guide/essentials/application.html#mounting-the-app
https://vuejsexamples.com/tag/form/
https://www.educative.io/answers/how-to-create-a-form-in-vuejs
https://www.npmjs.com/package/vuejs-form
https://vueformulate.com/