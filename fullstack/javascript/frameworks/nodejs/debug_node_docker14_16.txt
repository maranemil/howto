########################################################
Major Update backward-incompatible updates
########################################################

https://stackoverflow.com/questions/51732435/is-there-a-yarn-alternative-for-npm-audit

yarn outdated         # view
yarn audit            # view
yarn install --audit  # install

yarn upgrade-interactive --latest
yarn start

--
########################################################
TypeError: CleanWebpackPlugin is not a constructor
########################################################

https://github.com/johnagan/clean-webpack-plugin#options-and-defaults-optional
https://stackoverflow.com/questions/56567930/typeerror-cleanwebpackplugin-is-not-a-constructor

const { CleanWebpackPlugin } = require('clean-webpack-plugin'); // installed via npm
const HtmlWebpackPlugin = require('html-webpack-plugin'); // installed via npm
const webpack = require('webpack'); // to access built-in plugins
const path = require('path');

module.exports = {
    entry: './path/to/my/entry/file.js',
    output: {
        /**
         * With zero configuration,
         *   clean-webpack-plugin will remove files inside the directory below
         */
        path: path.resolve(process.cwd(), 'dist'),
    },
    module: {
        rules: [
            {
                test: /\.(js|jsx)$/,
                loader: 'babel-loader',
            },
        ],
    },
    plugins: [
        new webpack.ProgressPlugin(),
        new CleanWebpackPlugin(),
        new HtmlWebpackPlugin({ template: './src/index.html' }),
    ],
};


########################################################
TypeError: compiler.plugin is not a function
########################################################

https://stackoverflow.com/questions/65481943/typeerror-compiler-plugin-is-not-a-function-at-reactloadableplugin-apply

search compiler.plugin in packages

yarn info  i18n-webpack-plugin
yarn why i18n-webpack-plugin
yarn remove i18n-webpack-plugin
yarn add i18n-webpack-plugin
yarn remove i18n-webpack-plugin

########################################################
Use 'stats.children: true' resp. '--stats-children' for more details
########################################################

https://github.com/kentcdodds/react-performance/issues/112

########################################################
Invalid options object. HTML Loader
Module build failed (from ./node_modules/html-loader/dist/cjs.js):
ValidationError: Invalid options object. HTML Loader has been initialized using an options object that does not match the API schema.
########################################################

https://github.com/electron-userland/electron-webpack/issues/357
https://github.com/electron-userland/electron-webpack/issues/357

npm install html-loader@1.0.0-alpha.0 --save-dev
npm install jquery

########################################################
########################################################

 /usr/bin/docker-compose -f /home/proj/web.yml -p web down --remove-orphans

########################################################
########################################################

rm yarn.lock package-lock.json
rm -rf node_modules/

npm install --force
npm install --legacy-peer-deps
npm start
# npm run start

npm remove html-loader --force
npm install html-loader --force
npm audit fix --force

.............

yarn
yarn upgrade-interactive --latest
yarn start

Choose which packages to update. @types/node@20.3.1, ts-loader@9.4.3, typescript@5.1.3

yarn add --dev eslint
yarn
yarn run start --port 3001

npx webpack serve
npx webpack serve --no-bonjour

version: "3"

services:
    web:
      build:
        context: .
        dockerfile: Dockerfile
      tty: true
      stdin_open: true
      volumes:
        - ./:/usr/src/app
      ports:
        - "8080:8080"
        - "8081:8080"
        - "3000:3000"
        - "3001:3000"




FROM node:14
RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app
COPY ["package.json", "package-lock.json*", "./"]
EXPOSE 3000 8080 80


###################################################################
TypeError: loaderContext.getOptions is not a function
###################################################################

FIXES  14 / 16

yarn upgrade-interactive --latest
Choose which packages to update. @types/node@20.3.1, ts-loader@9.4.3, typescript@5.1.3

yarn add ts-loader@~8.2.0

yarn start

###################################################################
###################################################################

node -v
v14.21.3
npm -v
6.14.18

node -v
v16.20.0
npm -v
8.19.4

node -v
v18.16.0
npm -v
9.5.1

###################################################################
"use strict" webpack
###################################################################

https://www.w3schools.com/js/js_strict.asp

###################################################################
dev-server
###################################################################

https://webpack.js.org/configuration/dev-server/
https://webpack-v3.jsx.app/configuration/dev-server/#devserver-port
https://webpack.js.org/configuration/dev-server/

###################################################################
###################################################################

https://bobbyhadz.com/blog/javascript-error-err-require-esm-require-of-es-module-not-supported
https://github.com/standard-things/esm/issues/868
https://github.com/electron-react-boilerplate/electron-react-boilerplate/issues/3112

npm install node-fetch@2.6.7
yarn add node-fetch@2.6.7
yarn add got
yarn add gulp-imagemin

yarn remove i18n-webpack-plugin

###################################################################
Configure a Node.js interpreter in Docker
###################################################################

https://www.jetbrains.com/help/phpstorm/node-with-docker.html#ws_node_docker_configure_interpreter

###################################################################
Invalid options object. Dev Server has been initialized using an options object that does not match the API schema.
###################################################################
 - options has an unknown property 'publicPath'. These properties are valid:
   object { allowedHosts?, bonjour?, client?, compress?, devMiddleware?, headers?, historyApiFallback?, host?, hot?, http2?, https?, ipc?, liveReload?, magicHtml?, onAfterSetupMiddleware?, onBeforeSetupMiddleware?, onListening?, open?, port?, proxy?, server?, setupExitSignals?, setupMiddlewares?, static?, watchFiles?, webSocketServer? }

###################################################################
[webpack-cli] No need to use the 'serve' command together with '{ watch: true | false }' or '--watch'/'--no-watch' configuration, it does not make sense.
###################################################################

###################################################################
[webpack-cli] Error: Unique ports must be specified for each devServer option in your webpack configuration. Alternatively, run only 1 devServer config using the --config-name flag to specify your desired config.
###################################################################

https://github.com/symfony/webpack-encore/issues/923
https://stackoverflow.com/questions/47635481/webpack-webpack-dev-server-two-configs
https://webpack.js.org/configuration/dev-server/

###################################################################
Why is process.env.NODE_ENV undefined?
###################################################################
https://stackoverflow.com/questions/11104028/why-is-process-env-node-env-undefined

npm install dotenv
require("dotenv").config();

const NODE_ENV = (<any>process).pkg ? 'production' : process.env.NODE_ENV;

"scripts": {
    "start": "node app.js",
    "dev": "nodemon server.js",
    "prod": "NODE_ENV=production & nodemon app.js"
  }
"scripts": {
  "start": "set NODE_ENV=dev && node app.js"
  "start": "cross-env NODE_ENV=dev node your-app-name.js"
}
"scripts": {
     "start": "export NODE_ENV=production && npm run build && npm run start-server",
     "dev": "export NODE_ENV=dev && npm run build && npm run start-server",
}
"scripts": {
    "start": "NODE_ENV=development electron index.js",
},
"scripts": {
    "build": "export NODE_ENV=prod || set NODE_ENV=prod&& npx eslint . && node --experimental-json-modules ./backend/app.js && gulp",
},


export NODE_ENV=development

console.log(process.env.NODE_ENV.trim() === 'dev') // true

if (process.env.NODE_ENV === 'dev') {
  // Your dev-only logic goes here
}


###################################################################
 [DEP_WEBPACK_CONFIGURATION_OPTIMIZATION_NO_EMIT_ON_ERRORS]
 DeprecationWarning: optimization.noEmitOnErrors is deprecated in favor of optimization.emitOnErrors
###################################################################

https://github.com/ant-design/ant-design-pro/issues/8935
https://github.com/webpack/webpack.js.org/pull/3864
https://stackoverflow.com/questions/68208552/how-do-i-solve-the-deprecation-warning-while-compiling

module.exports = {
  entry: './index.js',
  stats: { warnings:false }
}


node --trace-deprecation ./node_modules/.bin/the_library_name_here
npm outdated
npm update --force

https://github.com/johnagan/clean-webpack-plugin#options-and-defaults-optional

###################################################################
yarn -h
###################################################################

 Commands:
    - access
    - add
    - audit
    - autoclean
    - bin
    - cache
    - check
    - config
    - create
    - exec
    - generate-lock-entry / generateLockEntry
    - global
    - help
    - import
    - info
    - init
    - install
    - licenses
    - link
    - list
    - login
    - logout
    - node
    - outdated
    - owner
    - pack
    - policies
    - publish
    - remove
    - run
    - tag
    - team
    - unlink
    - unplug
    - upgrade
    - upgrade-interactive / upgradeInteractive
    - version
    - versions
    - why
    - workspace
    - workspaces
