#############################################################
10-best-practices-to-containerize-Node.js
#############################################################
https://snyk.io/wp-content/uploads/10-best-practices-to-containerize-Node.js-web-applications-with-Docker.pdf



npm install webpack-cli@5.0.1 --force
#############################################################
Severity: high
Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning - https://github.com/advisories/GHSA-r628-mhmh-qjhw
Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning using symbolic links - https://github.com/advisories/GHSA-qq89-hq3f-393p
Arbitrary File Creation/Overwrite via insufficient symlink protection due to directory cache poisoning using symbolic links - https://github.com/advisories/GHSA-9r2w-394v-53qc
Arbitrary File Creation/Overwrite on Windows via insufficient relative path sanitization - https://github.com/advisories/GHSA-5955-9wpr-37jh
Arbitrary File Creation/Overwrite due to insufficient absolute path sanitization - https://github.com/advisories/GHSA-3jfq-g458-7qm9
fix available via `npm audit fix`
#############################################################


sudo npm install -D @webpack-cli/serve -g



#############################################################
npm ERR! Found: webpack@4.46.0
npm ERR! node_modules/webpack
npm ERR!   dev webpack@"^4.15.1" from the root project
#############################################################

https://stackoverflow.com/questions/67052176/npm-install-error-while-use-webpack-could-not-resolve-dependency


npm install --legacy-peer-deps
npm audit fix --force
npm install --verbose --force

sudo npm install webpack-dev-server -g


#############################################################
prompt-command.js:46  return func(...args);
#############################################################

https://github.com/webpack/webpack-cli/issues/2272

"webpack-dev-server": "~3"
"webpack-dev-server": "~4"
"webpack-dev-server": "~5"
"webpack-cli": "^4.4.0"

npm update webpack-cli --force
webpack serve --env mode=dev --env isDevServer --env NODE_ENV=local --config ./webpack.config.babel.js
webpack serve --env mode=dev --env isDevServer --env NODE_ENV=local --config ./webpack.config.babel.js
webpack --env mode=dev --env isDevServer --env NODE_ENV=local serve --config ./webpack.config.babel.js



    "webpack": "^4.46.0",
    "webpack-cli": "^4.10.0",
    "webpack-dev-server": "^4.11.1"


 npm audit fix --force

#############################################################
Failed to load 'webpack.config.js' config
#############################################################

https://webpack.js.org/loaders/babel-loader/

webpack serve --env mode=dev --env isDevServer --env NODE_ENV=local --config ./webpack.config.babel.js

[webpack-cli] Unable load 'webpack.config.babel.js'
[webpack-cli] Unable to use specified module loaders for ".babel.js".
[webpack-cli] Cannot find module '@babel/register' from 'homepage'
[webpack-cli] Cannot find module 'babel-register' from 'homepage'
[webpack-cli] Cannot find module 'babel-core/register' from 'homepage'
[webpack-cli] Cannot find module 'babel/register' from 'homepage'
[webpack-cli] Please install one of them



npm install @babel/register --force

webpack.config.babel.js not found
npm install -D babel-loader @babel/core @babel/preset-env webpack
npm audit fix --legacy-peer-deps --force
webpack-dev-server --config ./webpack.config.js
npm install --save-dev @intervolga/optimize-cssnano-plugin --force



npm audit fix --legacy-peer-deps
npm audit fix --force
npm install --save-dev @intervolga/optimize-cssnano-plugin --legacy-peer-deps



npm audit --production   # found 0 vulnerabilities
npm audit --mode=production --plugins
npm audit
npm audit fix
npm install --force

#############################################################
safely update all the dependencies
#############################################################

https://www.carlrippon.com/upgrading-npm-dependencies/
https://stackoverflow.com/questions/16073603/how-to-update-each-dependency-in-package-json-to-the-latest-version
https://www.npmjs.com/package/npm-check-updates
https://www.freecodecamp.org/news/how-to-update-npm-dependencies/
https://docs.npmjs.com/updating-packages-downloaded-from-the-registry
https://docs.npmjs.com/updating-packages-downloaded-from-the-registry
https://www.npmjs.com/package/webpack/v/0.7.14?activeTab=versions
https://www.npmjs.com/package/webpack?activeTab=versions
https://docs.npmjs.com/cli/v7/commands/npm-outdated
https://medium.com/subjective-developer/update-all-node-packages-to-latest-aa128396b92b
https://bytearcher.com/articles/using-npm-update-and-npm-outdated-to-update-dependencies/
https://docs.npmjs.com/updating-packages-downloaded-from-the-registry
https://www.npmjs.com/package/webpack-cli
https://www.npmjs.com/package/webpack-cli
https://webpack.js.org/api/cli/
https://www.npmjs.com/package/@webpack-cli/serve


# current folder
npm outdated
npm outdated --depth=1
npm outdated --all
npm install webpack@latest

npm install webpack@5.75.0 --force
npm install webpack@5.57.0 --force --legacy-peer-deps
npm install nth-check@latest --force
npm remove @intervolga/optimize-cssnano-plugin --force
npm install  css-loader@latest --force
npm install file-loader@latest --force


npm update --force
npm audit fix --force
npm audit fix --legacy-peer-deps

# globally
npm outdated -g --depth=0
npm update -g

npm update
npm update --legacy-peer-deps
npm install
npm install -g npm-check-updates
npm install npm@latest -g


npm i -g npm-check-updates
ncu -u
npm install

npm install -g npm-check-updates
$ ncu -u
$ npm install


npm update "react" "react-dom"
npm install <packagename>@latest
npm install react@latest react-dom@latest

#############################################################
remove local nodejs
#############################################################

sudo apt-get remove nodejs npm -y
sudo apt autoremove -y
which node
sudo apt-get install nodejs npm -y

sudo apt remove nodejs
sudo apt purge nodejs


#############################################################
TypeError: Class constructor ServeCommand cannot be invoked without 'new'
#############################################################

https://dcyoung.dev/shorts/webpack-er-compatibility-issue.html
https://github.com/webpack/webpack-cli/issues/2272

webpack --hot server --env foo
webpack --env foo --env bar serve --hot
webpack --env mode=dev --env isDevServer --env NODE_ENV=local serve --config ./webpack.config.babel.js


#############################################################
Node.js app Dockerfile
#############################################################

https://github.com/nodejs/docker-node
https://hub.docker.com/_/node/

# specify the node base image with your desired version node:<version>
FROM node:16
# replace this with your application's default port
EXPOSE 8888


version: "2"
services:
  node:
    image: "node:8"
    user: "node"
    working_dir: /home/node/app
    environment:
      - NODE_ENV=production
    volumes:
      - ./:/home/node/app
    expose:
      - "8081"
    command: "npm start"


https://docs.docker.com/language/nodejs/build-images/

# syntax=docker/dockerfile:1
FROM node:12.18.1
ENV NODE_ENV=production
WORKDIR /app
COPY ["package.json", "package-lock.json*", "./"]
RUN npm install --production
COPY . .
CMD [ "node", "server.js" ]
EXPOSE 8888


https://nodejs.org/en/docs/guides/nodejs-docker-webapp/

FROM node:16
# Create app directory
WORKDIR /usr/src/app
# Install app dependencies
# A wildcard is used to ensure both package.json AND package-lock.json are copied
# where available (npm@5+)
COPY package*.json ./
RUN npm install
# If you are building your code for production
# RUN npm ci --only=production
# Bundle app source
COPY . .
EXPOSE 8080
CMD [ "node", "server.js" ]


https://learn.microsoft.com/en-us/answers/questions/890498/unable-to-run-docker-container-in-azure-app-servic

FROM node:18.3
RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app
COPY package*.json ./
RUN npm install

#ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true
#RUN apt-get update && apt-get install curl gnupg -y \
#  && curl --location --silent https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
#  && sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/#sources.list.d/google.list' \
#  && apt-get update \
#  && apt-get install google-chrome-stable -y --no-install-recommends \
#  && rm -rf /var/lib/apt/lists/*

COPY . .
EXPOSE 8080
CMD [ "node", "server.js" ]

#############################################################
 1 vulnerability required manual review and could not be updated
#############################################################

https://stackoverflow.com/questions/51377148/how-to-fix-npm-vulnerabilities-manually
https://github.com/facebook/react-native/issues/23495
https://docs.npmjs.com/auditing-package-dependencies-for-security-vulnerabilities
https://dev.to/bbenefield89/fixing-npm-dependencies-vulnerabilities-6p8

# npm install npm@latest -g

FIX
# update old packages marked as red
npm outdated
npm install --save-dev package1  package2
npm audit
npm install --global yarn --force
yarn
yarn audit
#npm i nth-check@latest --save-dev
#npm install --save-dev nth-check@latest
yarn add nth-check@2.1.1
yarn remove  @intervolga/optimize-cssnano-plugin


npm install --no-audit
npm audit fix --force --production
npm audit fix --force
npm audit fix -f
npm update


npm install example-package-name --no-audit
npm set audit false

npm install --save-dev minimist
npm install --save-dev jest@24.8.0
npm install
npm ls minimist

#############################################################
Dockerfiles use /usr/src/app as the WORKDIR
#############################################################

https://en.wikipedia.org/wiki/Unix_filesystem#Conventional_directory_layout
https://forums.balena.io/t/what-is-significance-of-usr-src-app-for-workdir/5184
https://snyk.io/wp-content/uploads/10-best-practices-to-containerize-Node.js-web-applications-with-Docker.pdf
https://stackoverflow.com/questions/54685942/dockerfile-for-ruby-app-why-is-workdir-specified-as-usr-src-app
https://maximorlov.com/a-beginners-guide-to-building-a-docker-image-of-your-nodejs-application/


#############################################################
TypeError: compiler.plugin is not a function
#############################################################

https://stackoverflow.com/questions/65481943/typeerror-compiler-plugin-is-not-a-function-at-reactloadableplugin-apply

npm install --save-dev webpack-shell-plugin-next

#############################################################
Invalid options object. Copy Plugin has been initialized using an options object that does not match the API schema
#############################################################

https://stackoverflow.com/questions/61937054/npm-run-dev-fails-validationerror-invalid-options-object
https://github.com/webpack/webpack-dev-server/issues/2712
https://webpack.js.org/plugins/copy-webpack-plugin/


npm install --save copy-webpack-plugin@5.1.1
npm install -g webpack-cli
npm info webpack

npm install copy-webpack-plugin --save-dev
yarn add -D copy-webpack-plugin


npm install --save-dev @intervolga/optimize-cssnano-plugin

#############################################################
yarn cli
#############################################################

https://classic.yarnpkg.com/lang/en/docs/cli/install/
https://yarnpkg.com/cli/cache/clean
https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/64262


yarn install
yarn install --check-files
yarn install --flat
yarn install --force
yarn install --ignore-scripts
yarn install --modules-folder <path>
yarn install --no-lockfile
yarn install --production[=true|false]
yarn install --pure-lockfile
yarn install --focus
yarn install --frozen-lockfile
yarn install --silent
yarn install --ignore-engines
yarn install --ignore-optional
yarn install --offline
yarn install --non-interactive
yarn install --update-checksums
yarn install --audit
yarn install --no-bin-links
yarn install --link-duplicates
yarn install --verbose


yarn init
yarn audit --verbose
yarn audit --groups dependencies

yarn upgrade
yarn add nth-check@latest
yarn remove nth-check

yarn run test
yarn run test -o --watch
yarn run build
yarn run
yarn run env



npm run test-server
yarn run test-server

yarn add webpack@latest

node -v
npm -v
tsc -v
cdktf debug
cdktf get

#############################################################
UnhandledPromiseRejectionWarning: Error: Exited with code 3
#############################################################

https://codeforgeek.com/make-failed-with-exit-code-2/
https://github.com/nodejs/help/issues/1846
https://www.npmjs.com/package/ts-node
https://stackoverflow.com/questions/61670459/importing-in-node-js-error-must-use-import-to-load-es-module
https://github.com/sindresorhus/file-type/issues/535
https://github.com/TypeStrong/ts-loader/issues/1484
https://stackoverflow.com/questions/68016372/webpack-ts-loader-error-loadercontext-getoptions-is-not-a-function
https://www.npmjs.com/package/ts-loader
https://stackoverflow.com/questions/63720450/node-modules-types-node-index-d-ts20-1-error-ts1084-invalid-reference-dir

rm -rf package-lock.json
rm -rf node_modules

npm install
npm run start

npm install -g browser-sync
npm install browser-sync --save-dev
browser-sync start --config bs-config.js
npm i webpack-livereload-plugin



rm -rf ./dist
rm -rf ./dist && webpack --mode production

yarn add webpack-dev-server@latest

npm i -D html-webpack-plugin@webpack-contrib/html-webpack-plugin
yarn add -D html-webpack-plugin@webpack-contrib/html-webpack-plugin
npm i --save-dev html-webpack-plugin@next
npm i html-webpack-plugin@4.4.0
npm install -g yarn
yarn add webpack-contrib/html-webpack-plugin -D
npm install --save-dev webpack-shell-plugin-next

rm -rf node_modules
npm install -g npm@latest
npm i core-util-is

npm install node-fetch@latest --force
node --experimental-modules your.mjs # for node < 14
npm i file-type@latest
node index.js

yarn cache clean


npm install typescript@latest --save-dev --force
npm install jquery@latest --save-dev --force
npm install ts-loader@latest --save-dev --force
yarn add -D "ts-loader"@"^8.4.0"
yarn add -D "ts-loader"@"latest"



# using npm
$ npm install webpack@5.75.0
# using yarn
$ yarn add webpack@5.75.0


yarn add ts-loader --dev
npm install ts-loader --save-dev
yarn add typescript --dev
npm install typescript --save-dev
npm install typescript@latest --save-dev

yarn add  webpack-cli@5*
yarn add  webpack-cli@5.0.1


#############################################################
JSHint: 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz). (W104)
#############################################################

https://stackoverflow.com/questions/27441803/why-does-jshint-throw-a-warning-if-i-am-using-const
https://bytenota.com/solved-jshint-error-use-esversion-6-in-vs-code/


While inline configuration works well for an individual file, you can also enable this setting for the entire project by creating a .jshintrc file in your project's root and adding it there.


.jshintrc

{
  "esversion": 6
}

{
    "esversion": 9,
    "asi": true
}

jshint --config jshint_opts lib/*.js

#############################################################
Module build failed (from ./node_modules/ts-loader/index.js):
#############################################################


https://bobbyhadz.com/blog/npm-command-not-found-webpack
https://webpack.js.org/configuration/

#############################################################
JavaScript modules via script tag
#############################################################

<script type="module">

https://caniuse.com/es6-module
https://nodejs.org/api/packages.html
https://nodejs.org/api/packages.html#type
https://www.typescriptlang.org/docs/handbook/modules.html
https://stackoverflow.com/questions/49338193/how-to-use-code-from-script-with-type-module
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules
https://dev.to/bnb/implicit-esm-in-node-js-with-type-module-np
https://bobbyhadz.com/blog/npm-command-not-found-webpack

// package.json
{
  "type": "module"
}

node my-app.js # Runs as ES module

#############################################################
[webpack-cli] Failed to load '/usr/src/app/webpack.config.js' config
[webpack-cli] Error [ERR_REQUIRE_ESM]: require() of ES Module /usr/src/app/node_modules/globby/index.js from /usr/src/app/webpack.config.js not supported.
Instead change the require of index.js in /usr/src/app/webpack.config.js to a dynamic import() which is available in all CommonJS modules.
at Object.<anonymous> (/usr/src/app/webpack.config.js:8:14) {
code: 'ERR_REQUIRE_ESM'
#############################################################

https://webpack.js.org/guides/hot-module-replacement/
https://bobbyhadz.com/blog/javascript-error-err-require-esm-require-of-es-module-not-supported
https://stackoverflow.com/questions/58384179/syntaxerror-cannot-use-import-statement-outside-a-module
https://futurestud.io/tutorials/javascript-how-to-fix-uncaught-syntaxerror-cannot-use-import-statement-outside-a-module
https://runjs.app/blog/how-to-solve-cannot-use-import-statement-outside-a-module
https://sabe.io/blog/node-syntaxerror-cannot-use-import-statement-outside-a-module
https://toastybits.dev/3-ways-to-fix-syntaxerror-cannot-use-import-statement-outside-a-module/
https://flaviocopes.com/fix-cannot-use-import-outside-module/
https://stackdiary.com/guides/cannot-use-import-statement-outside-module/
https://www.freecodecamp.org/news/cannot-use-import-statement-outside-a-module-react-typescript-error-solved/
https://stackoverflow.com/questions/58211880/uncaught-syntaxerror-cannot-use-import-statement-outside-a-module-when-import
https://webpack.js.org/configuration/externals/

webpack --config webpack.config.js

npm i webpack webpack-cli webpack-dev-server @babel/core @babel/preset-env babel-loader rimraf  -D

webpack serve
npm start
yarn run start

npm install --save-dev style-loader css-loader --force
npm ls

<!-- when loading raw JS -->
<script type="module"></script>
<!-- when loading external files -->
<script type="module" src="assets/script.js"></script>

#############################################################
Instead change the require of index.js in /usr/src/app/webpack.config.js to a dynamic import() which is available in all CommonJS modules.
#############################################################

https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c
https://stackoverflow.com/questions/70541068/instead-change-the-require-of-index-js-to-a-dynamic-import-which-is-available

npm i node-fetch@latest --force

#############################################################
ESM package migration move CommonJS project to ESM
#############################################################

https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c
https://jshint.com/docs/options/


https://intellij-support.jetbrains.com/hc/en-us/community/posts/360000112510-How-do-I-resolve-these-JSHint-ES6-errors-
https://blog.logrocket.com/transpile-es-modules-with-webpack-node-js/
https://bobbyhadz.com/blog/javascript-error-err-require-esm-require-of-es-module-not-supported
https://devs.keenthemes.com/question/error-error-err-require-esm-when-executing-npm-run-dev-laravel
https://webpack.js.org/api/module-methods/
https://www.educative.io/answers/how-to-fix-error-cannot-find-module-webpack
https://webpack.js.org/guides/production/
https://bytenota.com/solved-jshint-error-use-esversion-6-in-vs-code/
https://stackoverflow.com/questions/8107000/jshint-com-requires-use-strict-what-does-this-mean

Add "type": "module" to your package.json.
Replace "main": "index.js" with "exports": "./index.js" in your package.json.
Update the "engines" field in package.json to Node.js 14: "node": ">=14.16". (Excluding Node.js 12 as it's no longer supported)
Remove 'use strict'; from all JavaScript files.
Replace all require()/module.export with import/export.
Use only full relative file paths for imports: import x from '.'; → import x from './index.js';.
If you have a TypeScript type definition (for example, index.d.ts), update it to use ESM imports/exports.
Optional but recommended, use the node: protocol for imports.

 #############################################################
 Unknown option '--watch-content-base'
 #############################################################

 https://stackoverflow.com/questions/68971629/javascript-webpack-error-unknown-option-watch-content-base
 https://github.com/webpack/webpack-cli/issues/2401
 https://www.npmjs.com/package/webpack-cli?activeTab=readme


 npx webpack-dev-server

 npm i webpack@4.43.0 webpack-cli@3.3.12 webpack-dev-server@3.11.0

 webpack serve --watch


 npm install --save-dev webpack-cli
 yarn add webpack-cli --dev

 npx webpack-cli --help
 npx webpack-cli --help=verbose
 npx webpack-cli --help verbose

 #############################################################
ERROR in /usr/src/app/node_modules/@types/glob/node_modules/@types/node/ts4.8/util.d.ts
    [tsl] ERROR in /usr/src/app/node_modules/@types/glob/node_modules/@types/node/ts4.8/util.d.ts(1514,1)
          TS1128: Declaration or statement expected.

 #############################################################

https://github.com/DefinitelyTyped/DefinitelyTyped/issues/61582
https://typescript.tv/errors/
https://blog.angular-university.io/typescript-2-type-system-how-do-type-definitions-work-in-npm-when-to-use-types-and-why-what-are-compiler-opt-in-types/
https://learn.microsoft.com/en-us/answers/questions/617231/error-(tsc)-node-modules-@fluentui-react-lib-compo?orderby=oldest


@types/mime:3.0.0
@types/mime

yarn add @types/mime



error TS1128: Declaration or statement expected.

Broken Code ❌
=
Fixed Code ✔️
A declaration specifies the data and a statement specifies some action with that data:

// Declaration
let MY_NUMBER = 1;
// Statement
MY_NUMBER = MY_NUMBER + 1;

npm run build
node --trace-deprecation
# cross-env NODE_ENV=production webpack

node ./build.js
node scripts/install.js
node scripts/build.js
gulp serve

FIX node 14
# npm init
# ./node_modules/.bin/tsc --init

npm install --save-dev typescript
npm install --save uuid
npm install --save-dev ts-node
npm install --save axios
npm run start