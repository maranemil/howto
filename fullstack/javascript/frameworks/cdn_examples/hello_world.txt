
////////////////////////////////////////////////////////////////////////////
//
//  jQuery
//
////////////////////////////////////////////////////////////////////////////

<!--
https://releases.jquery.com/
https://jsfiddle.net/
-->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<textarea name="test" id="test" cols=33 rows=12></textarea>

<script>
$(document).ready(function() {
  document.getElementById("test").value = '\n\n\n\n\n _____delimiter Hello jQuery';

});
</script>

////////////////////////////////////////////////////////////////////////////
//
//  Vue
//
////////////////////////////////////////////////////////////////////////////

<!--
https://vuejs.org/guide/quick-start.html#with-build-tools
https://vuejs.org/guide/introduction.html
https://cdnjs.com/libraries/vue

 -->
<script src="https://unpkg.com/vue@3"></script>
<div id="app">
  <textarea name="test" cols=33 rows=12>
  {{ message }}
  </textarea>
</div>

<script>
  Vue.createApp({
    data() {
      return {
        message: '\n\n\n\n\n _____delimiter Hello Vue!'
      }
    }
  }).mount('#app')
</script>

////////////////////////////////////////////////////////////////////////////
//
//  vuex
//
////////////////////////////////////////////////////////////////////////////

<script src="https://unpkg.com/vue@3"></script>
<script src="https://unpkg.com/vuex@4"></script>

<!--
https://unpkg.com/vue@3.2.33/dist/vue.global.js
https://unpkg.com/vuex@4.0.2/dist/vuex.global.js
https://unpkg.com/vuex@4.0.0/dist/vuex.global.js
-->

<div id="app">
  <textarea name="test" cols=33 rows=12 v-bind:id="item">
  {{ item }}
  </textarea>
</div>

<script>
 /* import {    createApp  } from 'vue'
  import {    createStore  } from 'vuex'*/

  // Create a new store instance.
  const store = Vuex.createStore({
    state() {
      return {
        message: ''
      }
    },
    mutations: {
      update(state) {
				state.message = '\n\n\n\n\n _____delimiter Hello VueX!'
      }
    }
  });

  const app = Vue.createApp({
   data() {
      return {
        item: '\n\n\n\n\n _____delimiter Hello Vue!'
        //message: ''
      }
    },
    methods: {
      setText (){
          this.item = this.$store.state.message
      }
    },
    created(){
			//console.log(this.item)
      //console.log(this.$store.state.message)
      //this.$store.state.message = "123456789";
      //console.log(this.$store.state.message)
    },
    mounted() {
       this.$store.commit('update')
      console.log(this.$store.state.message)
      this.setText();
    }
  })
  .use(store)
  .mount('#app');

  // Install the store instance as a plugin


</script>

////////////////////////////////////////////////////////////////////////////
//
//  React
//
////////////////////////////////////////////////////////////////////////////

<!DOCTYPE html>
<html>
  <head>
    <meta charset='UTF-8'>
     <script src='https://unpkg.com/react@16.3.1/umd/react.production.min.js'></script>
    <script src='https://unpkg.com/react-dom@16.3.1/umd/react-dom.production.min.js'>    </script>
    <script src='https://unpkg.com/react-router-dom@5.0.0/umd/react-router-dom.min.js'></script>
    <script src='https://unpkg.com/babel-standalone@6.26.0/babel.js'></script>
  </head>
  <body>
    <div id='root'></div>
    <script type='text/babel'>
      class Hello extends React.Component {
        constructor(props) {
          super(props)
          this.state = {
            message: "Hello Again",
            item: '\n\n\n\n\n _____delimiter Hello React!'
          }
        }
        render() {
          return (
              <div>
                 <span refs="message">
                   {this.props.message}  {this.state.message}
                 </span>
                 <br/>
                 <textarea name="test" cols="33" rows="12">
                 		{this.state.item}
                 </textarea>
              </div>
          )
        }
      }

      ReactDOM.render( <Hello message = "Hello React" /> ,
        document.getElementById("root")
      );


      /*
      var rEl = React.createElement('h1', {title:'hi'}, 'Hello, world!');
      ReactDOM.render(rEl, document.getElementById('root'));
      */

      /*
      class Hello extends React.Component {
        render() {
          return <div>Hello {this.props.name}</div>;
        }
      }
      ReactDOM.render(
        <Hello name="World" />,
        document.getElementById('root')
      );*/

    </script>
  </body>
</html>

<!--

https://jsfiddle.net/user2314737/kvtvmmxc/
https://babeljs.io/docs/en/babel-standalone
https://cdnjs.com/libraries/babel-standalone
https://reactjs.org/docs/add-react-to-a-website.html
https://reactjs.org/docs/cdn-links.html

https://jsfiddle.net/boilerplate/react-jsx
https://jsfiddle.net/reactjs/69z2wepo/
https://jsfiddle.net/stephenkingsley/sw5qnjg7/
https://jsfiddle.net/frenzzy/6kmaoxoe/
https://jsfiddle.net/samsch/kb37hmap/
https://jsfiddle.net/5e6zr2Lq/1/
-->


