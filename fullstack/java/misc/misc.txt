#################################################
jooq
#################################################

https://mvnrepository.com/artifact/org.jooq/jooq
https://mvnrepository.com/artifact/org.jooq


https://www.jooq.org/doc/latest/manual/getting-started/tutorials/jooq-in-7-steps/jooq-in-7-steps-step1/
https://www.jooq.org/doc/latest/manual/getting-started/
https://www.jooq.org/doc/latest/manual/
https://www.jooq.org/doc/latest/manual/getting-started/tutorials/
https://www.jooq.org/doc/latest/manual/getting-started/tutorials/jooq-in-7-steps/
https://www.jooq.org/doc/latest/manual/code-generation/codegen-maven/

#################################################
# java
#################################################

Docs java
https://www.tutorialspoint.com/java/index.htm
https://www.w3schools.com/java/

Project Builder (Maven or Gradle)
https://gradle.org/maven-vs-gradle/
https://www.geeksforgeeks.org/difference-between-gradle-and-maven/
https://gradlehero.com/maven-vs-gradle-comparison/

Maven Packages
https://central.sonatype.com/
https://mvnrepository.com/

IntelliJ IDEA Community Edition
https://www.jetbrains.com/idea/download/?section=linux



#################################################
# selenium python Java
#################################################

https://selenium-python.readthedocs.io/getting-started.html
https://pypi.org/project/selenium/
https://www.browserstack.com/guide/python-selenium-to-run-web-automation-test
https://selenium-python.readthedocs.io/api.html
https://www.javatpoint.com/selenium-python
https://www.selenium.dev/documentation/webdriver/drivers/options/
https://chromedriver.chromium.org/getting-started
https://www.selenium.dev/documentation/
https://www.selenium.dev/documentation/webdriver/getting_started/first_script/

-----------------

package dev.selenium.hello;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
public class HelloSelenium {
    public static void main(String[] args) {
        WebDriver driver = new ChromeDriver();
        driver.get("https://selenium.dev");
        driver.quit();
    }
}

-----------------

from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By

driver = webdriver.Firefox()
driver.get("http://www.python.org")
assert "Python" in driver.title
elem = driver.find_element(By.NAME, "q")
elem.clear()
elem.send_keys("pycon")
elem.send_keys(Keys.RETURN)
assert "No results found." not in driver.page_source
driver.close()


-----------------

import time
from selenium import webdriver
driver = webdriver.Chrome('/path/to/chromedriver')  # Optional argument, if not specified will search path.
driver.get('http://www.google.com/');
time.sleep(5) # Let the user actually see something!
search_box = driver.find_element_by_name('q')
search_box.send_keys('ChromeDriver')
search_box.submit()
time.sleep(5) # Let the user actually see something!
driver.quit()

-----------------

Java
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.*;
import org.junit.Test;
public class GettingStarted {

@Test
public void testGoogleSearch() throws InterruptedException {
// Optional. If not specified, WebDriver searches the PATH for chromedriver.
	System.setProperty("webdriver.chrome.driver", "/path/to/chromedriver");
	WebDriver driver = new ChromeDriver();
	driver.get("http://www.google.com/");
	Thread.sleep(5000);  // Let the user actually see something!
	WebElement searchBox = driver.findElement(By.name("q"));
	searchBox.sendKeys("ChromeDriver");
	searchBox.submit();
	Thread.sleep(5000);  // Let the user actually see something!
	driver.quit();
 }
}

-----------------
#################################################
Kotlin for data science
#################################################

https://plugins.jetbrains.com/plugin/16340-kotlin-notebook
https://kotlinlang.org/docs/data-science-overview.html

#################################################
jwt Debugger
#################################################

https://jwt.io/
https://jwt.io/libraries


#################################################
online compiler java
#################################################

https://www.tutorialspoint.com/compile_java_online.php
https://www.programiz.com/java-programming/online-compiler/
https://www.jdoodle.com/online-java-compiler
https://www.w3schools.com/java/java_compiler.asp


#################################################
java Operators
#################################################

https://wiki.selfhtml.org/wiki/JavaScript/Operatoren/Rechenoperatoren
https://www.java-tutorial.org/arithmetische-operatoren.html
https://www2.icp.uni-stuttgart.de/~hilfer/lehre/100-online/skriptum/html_book00/node44.html
http://www-ai.cs.uni-dortmund.de:8765/lexikon/theorie/datenbanken/node3.html
https://dbs.cs.uni-duesseldorf.de/lehre/docs/java/javabuch/html/k100032.html
https://home.uni-leipzig.de/kurs7/selfphp/praxisbuch/ps-s112-g24.html
https://product-help.schneider-electric.com/Machine%20Expert/V2.0/de/SoMProg/SoMProg/D-SE-0083688.html



#################################################
java log4j level on the command line debug
#################################################

https://stackoverflow.com/questions/7126709/how-do-i-set-log4j-level-on-the-command-line
https://medium.com/@kasunbg/change-log4j2-default-logging-level-to-info-b25db8723eb9
https://mkyong.com/logging/how-to-load-logging-properties-for-java-util-logging/
https://code.visualstudio.com/docs/java/java-debugging
https://wrapper.tanukisoftware.com/doc/english/prop-java-command-loglevel.html
https://www.baeldung.com/spring-boot-testing-log-level
https://gist.github.com/VenkataRaju/b2be947933833cc2187072850ff09375
https://docs.oracle.com/cd/E13157_01/wlevs/docs30/config_server/logging.html
https://www.ibm.com/docs/en/configurepricequote/9.4.0?topic=modeler-log4jdebug-system-property
https://www.javatpoint.com/log4j-logging-levels
https://sematext.com/blog/logging-levels/
https://www.digitalocean.com/community/tutorials/log4j-levels-example-order-priority-custom-filters
https://stackoverflow.com/questions/571960/disabling-log4j-output-in-java
https://docs.oracle.com/javase/8/docs/api/java/util/logging/Level.html
https://www.tutorialspoint.com/log4j/log4j_logging_levels.htm
https://www.digitalocean.com/community/tutorials/logger-in-java-logging-example
https://stackoverflow.com/questions/1673485/how-to-enable-logger-debug-in-log4j
https://www.papertrail.com/solution/tips/logging-in-java-best-practices-and-tips/
https://stackoverflow.com/questions/5817738/how-to-use-log-levels-in-java
https://stackoverflow.com/questions/19574413/log4j-2-how-get-log4js-debug-messages

java.util.logging.Logger

Set level to OFF (instead of DEBUG, INFO, ....)
logger.setLevel(Level.OFF);
logger.setLevel(Level.FINE);
log.setLevel(Level.WARN);
log4j.rootLogger=OFF

-Dlog4j.debug=true
-Dlog4j.debug=false

-Dlog4j.info -Dmy.logging.threshold=INFO
-Dorg.apache.logging.log4j.level=INFO

wrapper.java.command.loglevel=INFO

Valid property values include:
FATAL :to log at the FATAL log level.
ERROR :to log at the ERROR log level.
WARN :to log at the WARN log level.
STATUS :to log at the STATUS log level.
INFO :to log at the INFO log level.
DEBUG :to log at the DEBUG log level.


TRACE, DEBUG, INFO, NOTICE, WARNING, ERROR, CRITICAL, ALERT, EMERGENCY

https://logging.apache.org/log4j/2.x/manual/configuration.html
https://www.mobilefish.com/developer/log4j/log4j.html
https://www.ibm.com/docs/en/cloud-paks/cp-network-auto/2.6.x?topic=debug-setting-logging-level-all-replicas


-Dlog4j.debug=false
-Dlog4j.configuration=
-Droot.log.level=TRACE

"logging.level.com.accantosystems": "DEBUG",
"logging.level.org.springframework.security": "DEBUG",

https://docs.spring.io/spring-cloud-gateway/reference/spring-cloud-gateway/troubleshooting.html
https://cloud.spring.io/spring-cloud-gateway/2.1.x/multi/multi_troubleshooting.html
https://docs.spring.io/spring-vault/reference/introduction/getting-started.html
https://spring.io/projects/spring-framework/
https://spring.io/projects/spring-vault/
https://www.baeldung.com/spring-vault
https://www.baeldung.com/spring-boot-testing-log-level
https://projectlombok.org/setup/maven
https://github.com/projectlombok/lombok/wiki/Language-Design:-Null-vs.-Optional

logging.level.com.baeldung.testloglevel=DEBUG
logging.level.root=INFO

logging.level.com.baeldung.testloglevel=TRACE
logging.level.root=ERROR

  <dependency>
    <groupId>org.springframework.vault</groupId>
    <artifactId>spring-vault-core</artifactId>
    <version>3.1.1</version>
  </dependency>


Log Levels

The following loggers may contain valuable troubleshooting information at the DEBUG and TRACE levels:

org.springframework.cloud.gateway
org.springframework.http.server.reactive
org.springframework.web.reactive
org.springframework.boot.autoconfigure.web
reactor.netty
redisratelimiter

Wiretap

The Reactor Netty HttpClient and HttpServer can have wiretap enabled.
When combined with setting the reactor.netty log level to DEBUG or TRACE, it enables the logging of information,
such as headers and bodies sent and received across the wire. To enable wiretap, set spring.cloud.gateway.httpserver.wiretap=true
or spring.cloud.gateway.httpclient.wiretap=true for the HttpServer and HttpClient, respectively.

https://www.baeldung.com/spring-boot-logging
https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.external-config
https://docs.spring.io/spring-cloud-dataflow-admin-cloudfoundry/docs/1.1.x/reference/html/_logging.html

-Dlogging.level.org.apache.commons.configuration=INFO

-Dlogging.level.org.springframework=TRACE
-Dlogging.level.com.baeldung=TRACE

<logger name="org.springframework" level="INFO" />
<logger name="com.baeldung" level="INFO" />

java -jar <dataflow-server>.jar --logging.level.org.springframework.cloud.deployer.spi.local=DEBUG
cf set-env dataflow-server JAVA_OPTS '-Dlogging.level.cloudfoundry-client=DEBUG'




####################################################
OffsetDateTime
####################################################

http://www.java2s.com/Tutorials/Java/java.time/OffsetDateTime/2720__OffsetDateTime.minus_TemporalAmount_amountToSubtract_.htm
https://www.tabnine.com/code/java/methods/java.time.OffsetDateTime/minusDays
https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html
https://www.geeksforgeeks.org/localdate-minusdays-method-in-java-with-examples/
http://www.java2s.com/example/java-api/java/time/offsetdatetime/minusdays-1-0.html
https://developer.android.com/reference/java/time/OffsetDateTime
https://www.baeldung.com/java-8-date-time-intro
https://www.geeksforgeeks.org/offsetdatetime-minusdays-method-in-java-with-examples/
https://www.logicbig.com/how-to/code-snippets/jcode-java-8-date-time-api-offsetdatetime-minus.html


OffsetDateTime dateTime = OffsetDateTime.now().minusDays(1);

----

import java.time.Duration;
import java.time.LocalDateTime;
import java.time.OffsetDateTime;
import java.time.Period;
import java.time.ZoneOffset;

public class MinusExample {

    public static void main (String... args) {
        OffsetDateTime d = OffsetDateTime.of(LocalDateTime.of(2011, 10, 3, 14, 30), ZoneOffset.ofHours(-4));
        System.out.println(d);

        OffsetDateTime d2 = d.minus(Duration.ofDays(1000));
        System.out.println(d2);

        OffsetDateTime d3 = d.minus(Period.ofDays(-1000));
        System.out.println(d3);
    }
}

Output
2011-10-03T14:30-04:00
2009-01-06T14:30-04:00
2014-06-29T14:30-04:00


import java.time.LocalDateTime;
import java.time.OffsetDateTime;
import java.time.ZoneOffset;
import java.time.temporal.ChronoUnit;

public class MinusExample2 {

    public static void main (String... args) {
        OffsetDateTime d = OffsetDateTime.of(LocalDateTime.of(2011, 10, 3, 14, 30), ZoneOffset.ofHours(-4));
        System.out.println(d);

        OffsetDateTime d2 = d.minus(10, ChronoUnit.YEARS);
        System.out.println(d2);

        d2 = d.minus(100, ChronoUnit.HOURS);
        System.out.println(d2);

        d2 = d.minus(200, ChronoUnit.WEEKS);
        System.out.println(d2);

        d2 = d.minus(2, ChronoUnit.CENTURIES);
        System.out.println(d2);

        d2 = d.minus(20000000, ChronoUnit.SECONDS);
        System.out.println(d2);

        d2 = d.minus(1, ChronoUnit.ERAS);
        System.out.println(d2);
    }
}



####################################################
log
####################################################

https://betterstack.com/community/guides/logging/how-to-start-logging-with-log4j/
https://projectlombok.org/features/log
https://howtodoinjava.com/spring-boot/logging-with-lombok/


package com.example;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.Level;

public class App {
    final Level VERBOSE = Level.forName("VERBOSE", 550);
    protected static final Logger logger = LogManager.getLogger();

    public static void main(String[] args) {
        App app = new App();
        logger.log(app.VERBOSE, "a verbose message");
    }
}


package com.example;
import org.apache.logging.log4j.Logger;
import org.apache.logging.log4j.LogManager;

public class App {

	protected static final Logger logger = LogManager.getLogger();

	public void blaBla(){
		try {
			// do something
	   	}
	   	catch (Exception exception) {
		    System.out.println(exception.getMessage());
		    logger.info(exception.getMessage());
		}
	}
}



####################################################
ArrayList
####################################################

https://www.jdoodle.com/online-java-compiler
https://www.tutorialspoint.com/online_java_formatter.htm

https://www.digitalocean.com/community/tutorials/java-listiterator
https://www.geeksforgeeks.org/listiterator-in-java/
https://www.educative.io/answers/how-to-use-the-tostring-in-java
https://www.informatikzentrale.de/java-arraylist.html
https://www.baeldung.com/java-list-vs-arraylist
https://www.javatpoint.com/java-arraylist
https://www.programiz.com/java-programming/arraylist
https://www.geeksforgeeks.org/arraylist-in-java/
https://www.w3schools.com/java/java_arraylist.asp
https://www.geeksforgeeks.org/convert-list-to-array-in-java/
https://www.baeldung.com/convert-array-to-list-and-list-to-array


import java.util.ArrayList;
import java.util.ListIterator;

public class MyClass {
    public static void main(String args[]) {
        ArrayList < Integer > liste = new ArrayList < Integer > ();
        liste.add(12);
        liste.add(1000);

        ListIterator < Integer > li = liste.listIterator();

        while (li.hasNext()) {
            System.out.println(li.next());
        }

        Integer[] arr = new Integer[liste.size()];

        for (int i = 0; i < liste.size(); i++)
            arr[i] = liste.get(i);

        // Printing elements of array on console
        for (Integer x: arr)
            System.out.print(x + " ");
    }
}

############################################################
Java HashMap remove()
############################################################

https://www.geeksforgeeks.org/map-remove-method-in-java-with-examples/
https://www.baeldung.com/java-hashmap-remove-entry
https://www.geeksforgeeks.org/hashmap-remove-method-in-java/
https://www.programiz.com/java-programming/library/hashmap/remove
https://stackoverflow.com/questions/17675804/remove-multiple-keys-from-map-in-efficient-way

############################################################
Evolution of the Switch Construct in Java
############################################################

https://blog.jetbrains.com/idea/2024/01/evolution-of-the-switch-construct-in-java-why-should-you-care/

BEFORE

enum CardType {SILVER, GOLD, PLATINUM, DIAMOND}

private static BiFunction<Double, Integer, Double> getOrderDiscountFormula(CardType cardType) {
    BiFunction<Double, Integer, Double> result;
    switch (cardType) {
        case SILVER:
            result = (a, b) -> (a * 0) + b;
            break;
        case GOLD:
            result = (a, b) -> (a * .05) + b;
            break;
        case PLATINUM:
            result = (a, b) -> (a * 0.1) + b * 2;
            break;
        case DIAMOND:
            result = (a, b) -> (a * 0.15) + b * 3;
            break;
        default:
            throw new IllegalArgumentException("Unexpected value: " + cardType);
    }
    return result;
}

AFTER

private static BiFunction<Double, Integer, Double> getOrderDiscountFormula(CardType cardType) {
    return switch (cardType) {
        case SILVER -> (a, b) -> (a * 0) + b;
        case GOLD -> (a, b) -> (a * .05) + b;
        case PLATINUM -> (a, b) -> (a * 0.1) + b * 2;
        case DIAMOND -> (a, b) -> (a * 0.15) + b * 3;
    };
}


############################################################
java execute()
############################################################

https://www.oreilly.com/library/view/java-programming-with/059600088X/ch09s02.html
https://stackoverflow.com/questions/10753706/what-does-this-java-execute-method-call-mean


boolean isResultSet = false;
Statement stmt = null;
ResultSet rslt = null;
try {
  stmt = conn.createStatement(  );
  isResultSet = stmt.execute("select 'Hello '||USER from dual");
  if (isResultSet) {
    rslt = stmt.getResultSet(  );
  }
  . . .
}

############################################################
java Optional params
############################################################

https://codedamn.com/news/java/what-are-optional-parameters-in-java
https://stackoverflow.com/questions/965690/how-do-i-use-optional-parameters-in-java
https://favtutor.com/blogs/java-optional-parameters
https://stackoverflow.com/questions/31922866/why-should-java-8s-optional-not-be-used-in-arguments


String email = null;

if (person.getEmail() != null){
   email = email.toLowerCase();
}
else{
   // default behaviour
}




############################################################
Generics JAVA
############################################################

https://docs.oracle.com/javase/tutorial/java/generics/types.html
https://stackoverflow.com/questions/462297/how-to-use-classt-in-java
https://openbook.rheinwerk-verlag.de/javainsel/11_001.html
https://techwithmaddy.com/t-in-java-generics
https://www.baeldung.com/java-generics
https://www.baeldung.com/java-generics
https://docs.oracle.com/javase/tutorial/java/generics/types.html
https://www.torsten-horn.de/techdocs/java-generics.htm
https://javabeginners.de/Klassen_und_Interfaces/Generics/Was_sind_Generics.php
https://docs.oracle.com/javase/tutorial/java/generics/
https://openbook.rheinwerk-verlag.de/javainsel/11_005.html
https://openbook.rheinwerk-verlag.de/javainsel/11_001.html
https://www.geeksforgeeks.org/generics-in-java/
https://www.tutorialspoint.com/java/java_generics.htm
https://www.digitalocean.com/community/tutorials/java-generics-example-method-class-interface
https://www.javatpoint.com/generics-in-java
https://homepages.thm.de/~hg51/Publikationen/java-generics.pdf
https://kotlinlang.org/docs/generics.html

Ohne Generics:
List meineListe = new ArrayList();
meineListe.add( "Hallo" );
String s = (String) meineListe.get( 0 );

Mit Generics:
List<String> meineListe = new ArrayList<String>();
meineListe.add( "Hallo" );
String s = meineListe.get( 0 );



// We use < > to specify Parameter type
class Test<T> {
    // An object of type T is declared
    T obj;
    Test(T obj) { this.obj = obj; } // constructor
    public T getObject() { return this.obj; }
}

// Driver class to test above
class Main {
    public static void main(String[] args)
    {
        // instance of Integer type
        Test<Integer> iObj = new Test<Integer>(15);
        System.out.println(iObj.getObject());

        // instance of String type
        Test<String> sObj
            = new Test<String>("GeeksForGeeks");
        System.out.println(sObj.getObject());
    }
}


----------------------------------


https://www.tutorialspoint.com/
https://www.javatpoint.com/



############################################
switch statement in switch statement
############################################

https://javabeginners.de/Schleifen_und_Verzweigungen/switch_-case_-Verzweigung.php
https://www.w3schools.com/java/java_switch.asp
https://medium.com/@javatechie/the-evolution-of-switch-statement-from-java-7-to-java-17-4b5eee8d29b7
https://stackoverflow.com/questions/1583744/java-question-is-it-possible-to-have-a-switch-statement-within-another-one

String result =
 switch (num) {
  case 1, 2 -> "1 or 2";
  case 3 -> {
    switch (character) {
       case 'a': {
          yield "3 and a"
       }
       case 'b': {
          yield "3 and b"
       }
    }
  }
 };

 return switch (obj) {
    case Integer i -> "It is an integer";
    case String s -> "It is a string";
    case Employee employee && employee.getDept().equals("IT") -> "IT Employee";
    default -> "It is none of the known data types";
};

############################################
generate a random character in Java
############################################

https://stackoverflow.com/questions/2626835/is-there-functionality-to-generate-a-random-character-in-java

import java.util.Random;
Random r = new Random();
char c = (char)(r.nextInt(26) + 'a');



import java.util.Random;

    //...

    Random r = new Random();

    String alphabet = "123xyz";
    for (int i = 0; i < 50; i++) {
        System.out.println(alphabet.charAt(r.nextInt(alphabet.length())));
    } // prints 50 random character







############################################
JsonIgnoreProperties
############################################

https://stackoverflow.com/questions/4486787/jackson-with-json-unrecognized-field-not-marked-as-ignorable

import org.codehaus.jackson.annotate.JsonIgnoreProperties;
@JsonIgnoreProperties(ignoreUnknown = true)


############################################
Java's Collections.singletonList()
############################################
https://stackoverflow.com/questions/4801794/use-of-javas-collections-singletonlist

import java.util.*;

public class HelloWorld {
    public static void main(String args[]) {
        // create an array of string objs
        String initList[] = { "One", "Two", "Four", "One",};

        // create one list
        List list = new ArrayList(Arrays.asList(initList));

        System.out.println("List value before: "+list);

        // create singleton list
        list = Collections.singletonList("OnlyOneElement");
        list.add("five"); //throws UnsupportedOperationException
        System.out.println("List value after: "+list);
    }
}

