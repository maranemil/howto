
----------------------------------------------------------------------------
Disable the MySQL query cache without restarting MySQL
https://www.electrictoolbox.com/disable-mysql-query-cache-without-restarting/
https://www.percona.com/blog/2016/11/11/is-your-query-cache-really-disabled/
https://mariadb.com/kb/en/library/query-cache/
----------------------------------------------------------------------------

# Set cache 0
SET GLOBAL query_cache_size = 0;

# The query itself can also specify that it is not to be stored in the cache by using the SQL_NO_CACHE attribute.
SELECT SQL_NO_CACHE  * FROM table;

# Query Cache Fragmentation
FLUSH QUERY CACHE;


----------------------------------------------------------------------------
How To Use MySQL Query Profiling
https://www.digitalocean.com/community/tutorials/how-to-use-mysql-query-profiling
https://stackoverflow.com/questions/26141129/nodejs-mysql-measure-query-execution-time
https://stackoverflow.com/questions/11274892/measuring-actual-mysql-query-time
----------------------------------------------------------------------------

SET profiling = 1;
SHOW PROFILES;
SHOW PROFILE FOR QUERY 1;


EXPLAIN SELECT SQL_NO_CACHE * FROM table;

* * * *

Time a SQL on MySQL
Enable Profiling
mysql> SET PROFILING = 1
...
RUN your SQLs
...
mysql> SHOW PROFILES;

+----------+------------+-----------------------+
| Query_ID | Duration   | Query                 |
+----------+------------+-----------------------+
|        1 | 0.00014600 | SELECT DATABASE()     |
|        2 | 0.00024250 | select user from user |
+----------+------------+-----------------------+
mysql> SHOW PROFILE for QUERY 2;

+--------------------------------+----------+
| Status                         | Duration |
+--------------------------------+----------+
| starting                       | 0.000034 |
| checking query cache for query | 0.000033 |
| checking permissions           | 0.000006 |
| Opening tables                 | 0.000011 |
| init                           | 0.000013 |
| optimizing                     | 0.000004 |
| executing                      | 0.000011 |
| end                            | 0.000004 |
| query end                      | 0.000002 |
| freeing items                  | 0.000026 |
| logging slow query             | 0.000002 |
| cleaning up                    | 0.000003 |
+--------------------------------+----------+


13.7.3.1 ANALYZE TABLE Syntax
https://dev.mysql.com/doc/refman/8.0/en/analyze-table.html
https://dev.mysql.com/doc/refman/8.0/en/join.html

ANALYZE TABLE t UPDATE HISTOGRAM ON c1, c2, c3 WITH 10 BUCKETS;
ANALYZE TABLE t UPDATE HISTOGRAM ON c1, c3 WITH 10 BUCKETS;
ANALYZE TABLE t DROP HISTOGRAM ON c2;







----------------------------------------------------------------------------
Why would someone use WHERE 1=1 AND <conditions> in a SQL clause?
https://stackoverflow.com/questions/8149142/where-1-1-statement
https://stackoverflow.com/questions/242822/why-would-someone-use-where-1-1-and-conditions-in-a-sql-clause
https://dba.stackexchange.com/questions/54954/why-use-where-1-or-where-1-1
https://www.tutorialspoint.com/mysql/mysql-where-clause.htm
https://www.bountysource.com/issues/48349313-sorting-not-working-in-server-side-datatables
----------------------------------------------------------------------------

select * from car_table where 1=1 --and value="TOYOTA" AND color="BLUE" --AND wheels=4
CREATE TABLE New_table_name as select * FROM Old_table_name WHERE 1 = 2;
CREATE VIEW vTest AS SELECT FROM Table WHERE 1=1  AND Table.Field=Value AND Table.IsValid=true
CREATE VIEW vTest AS SELECT FROM Table WHERE 1=1
MERGE INTO Circles USING ( SELECT pi FROM Constants ) AS SourceTable ON 1 = 1 WHEN MATCHED THEN UPDATE SET circumference = 2 * SourceTable.pi * radius;
CREATE VIEW vTest AS SELECT FROM Table WHERE 1=1 AND table.Field=Value







#################################################
#
# How to select in MySQL MariaDB with cache
#
#################################################

https://mariadb.com/kb/en/library/select/
https://mariadb.com/kb/en/library/query-cache/
https://mariadb.com/kb/en/library/sleep/
https://mariadb.com/kb/en/library/rand/
https://dev.mysql.com/doc/refman/8.0/en/select.html
https://dev.mysql.com/doc/refman/8.0/en/mysql-nutshell.html

SELECT
    [ALL | DISTINCT | DISTINCTROW]
    [HIGH_PRIORITY]
    [STRAIGHT_JOIN]
    [SQL_SMALL_RESULT] [SQL_BIG_RESULT] [SQL_BUFFER_RESULT]
    [SQL_CACHE | SQL_NO_CACHE] [SQL_CALC_FOUND_ROWS]

    [ FROM table_references
      [WHERE where_condition]
      [GROUP BY {col_name | expr | position} [ASC | DESC], ... [WITH ROLLUP]]
      [HAVING where_condition]
      [ORDER BY {col_name | expr | position} [ASC | DESC], ...]
      [LIMIT {[offset,] row_count | row_count OFFSET offset}]


SELECT SLEEP(5.5);
SELECT * FROM my_table ORDER BY RAND() LIMIT 10;
SELECT BENCHMARK(1000000,ENCODE('hello','goodbye'));
SELECT ENCRYPT('encrypt me');


BENCHMARK
70 x 7000000







#################################################
#
# How to kill Process in MySQL MariaDB
#
#################################################

mysql -h localhost -u root -p
SHOW PROCESSLIST;
KILL QUERY ID;



#################################################
#
#   Select SUM from COUNT
#   https://www.w3resource.com/sql/aggregate-functions/sum-and-count-using-variable.php
#   https://www.w3resource.com/mysql/aggregate-functions-and-grouping/aggregate-functions-and-grouping-sum().php
#
#################################################

SELECT SUM(mycount) FROM(SELECT COUNT( * ) AS mycount FROM customer);

SELECT ag.agent_code, ag.agent_name,cus.mycount,cus.mySUM FROM agents ag
INNER JOIN ( SELECT agent_code,COUNT(*) AS mycount, SUM(opening_amt) AS mySUM FROM Customer GROUP BY agent_code) cus ON cus.agent_code=ag.agent_code;


SELECT SUM(group_count) FROM
(
  SELECT
  COUNT(idPaciente) as group_count, Cobertura
  FROM paciente
  WHERE alta BETWEEN '2008-01-01' AND '2009-01-01'   GROUP BY Cobertura
)

SELECT SUM(paciente_count) FROM
(
	SELECT COUNT(paciente.idPaciente) as paciente_count, paciente.Cobertura
	FROM paciente
	WHERE paciente.alta BETWEEN '2008-01-01' AND '2009-01-01' GROUP BY paciente.Cobertura
) AS t1




####################################################
#
#   SQL_NO_CACHE + SQL_CACHE + HIGH_PRIORITY
#
#   https://dev.mysql.com/doc/refman/5.6/en/query-cache-in-select.html
#   https://www.petefreitag.com/item/613.cfm
#   https://mariadb.com/kb/en/library/query-cache/
#
####################################################

SELECT EXPLAIN SQL_NO_CACHE  * FROM table;
SELECT SQL_CACHE id, name FROM customer;
SELECT SQL_NO_CACHE id, name FROM customer;
SELECT /*!40001 SQL_NO_CACHE */ * FROM `watchdog`;
SELECT /*!40001 SQL_NO_CACHE */ * FROM `search_total` ORDER BY `word`;

SQL_NO_CACHE
SQL_CACHE # explicit mode (set query_cache_type = 2)
HIGH_PRIORITY # on SELECT or INSERT
LOW_PRIORITY # on INSERT and UPDATE
INSERT DELAYED
STRAIGHT_JOIN
SQL_BUFFER_RESULT
SQL_BIG_RESULT  # used with DISTINCT and GROUP BY SELECT
SQL_SMALL_RESULT






####################################################
#
#
#   STRAIGHT_JOIN
#
#   This is a simple example of how MySQL’s join optimizer can reorder queries to make them less expensive to execute.
#   Reordering joins is usually a very effective optimization. There are times when it won’t result in an optimal plan,
#   and for those times you can use STRAIGHT_JOIN and write the query in the order you think is best—but such times are
#   rare. In most cases, the join optimizer will outperform a human.
#
#   The join optimizer tries to produce a query execution plan tree with the lowest achievable cost.
#   When possible, it examines all potential combinations of subtrees, beginning with all one-table plans.
#
#   The join optimizer calculates the order in which tables should be joined. The table read order
#   forced by LEFT JOIN or STRAIGHT_JOIN helps the join optimizer do its work much more quickly,
#   because there are fewer table permutations to check. Note that this means that if you do a query
#   of the following type, MySQL does a full scan on b because the LEFT JOIN forces it to be read before
#
#
#   STRAIGHT_JOIN
#   STRAIGHT_JOIN applies to the JOIN queries, and tells the optimizer that the
#   tables must be read in the order they appear in the SELECT. For const and system
#   table this options is sometimes ignored.
#
####################################################


http://download.nust.na/pub6/mysql/doc/refman/5.1/de/select.html
http://ftp.nchu.edu.tw/MySQL/doc/refman/5.0/en/left-join-optimization.html
https://blog.programster.org/mysql-temprorary-tables
https://dev.mysql.com/doc/refman/5.5/en/innodb-performance-use_sys_malloc.html
https://dev.mysql.com/doc/refman/5.5/en/join.html
https://dev.mysql.com/doc/refman/5.5/en/select.html
https://dev.mysql.com/doc/refman/5.5/en/show-status.html
https://dev.mysql.com/doc/refman/5.5/en/using-explain.html
https://dev.mysql.com/doc/refman/5.7/en/select.html
https://dev.mysql.com/doc/refman/5.7/en/set-variable.html
https://dev.mysql.com/doc/refman/8.0/en/select.html
https://dev.mysql.com/doc/refman/8.0/en/show-processlist.html
https://dev.mysql.com/doc/refman/8.0/en/user-variables.html
https://docs.oracle.com/cd/E17952_01/mysql-5.0-en/left-join-optimization.html
https://mariadb.com/kb/en/library/index-hints-how-to-force-query-plans/
https://mariadb.com/kb/en/library/optimizer-hints/
https://quantum2.xyz/2018/11/04/optimize-mysql-mariadb-query-straight-join/
https://www.eversql.com/mysql-is-not-using-my-index-join-with-a-range-condition/
https://www.mysql.com/de/products/enterprise/high_availability.html
https://www.oreilly.com/library/view/high-performance-mysql/9780596101718/ch04.html
https://www.quora.com/What-are-pros-and-cons-of-PostgreSQL-and-MySQL-With-respect-to-reliability-speed-scalability-and-features


https://de.slideshare.net/ssuser74309b/mariadb-36867398
https://de.slideshare.net/Severalnines/webinar-slides-mysql-query-tuning-trilogy-working-with-optimizer-and-sql-tuning
https://www.slideshare.net/billkarwin/models-for-hierarchical-data
----------------------------------------------------------------------


#########################################################
#
#   Select top domain by count SUBSTRING_INDEX
#
#########################################################

SELECT SUBSTRING_INDEX(url, '/', 3) AS urls ,count(*) AS total
    FROM `table`
        WHERE category_id = 26 GROUP BY urls ORDER BY total DESC


https://dev.mysql.com/doc/refman/8.0/en/string-functions.html
https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_substring-index
https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_substring

mysql> SELECT SUBSTRING_INDEX('www.mysql.com', '.', 2);
        -> 'www.mysql'
mysql> SELECT SUBSTRING_INDEX('www.mysql.com', '.', -2);
        -> 'mysql.com'

#########################################################
#
#   Mass Replace Conversion PNG into JPG
#
#########################################################

# dir unix
# for i in *.png; do convert $i "${i%.png}.jpg"; done

# DB
UPDATE table SET fieldname = REPLACE(fieldname,'.png','.jpg') WHERE `fieldname` LIKE '%.png' AND index=6


#########################################################
#
# Lowercase - Using PDO and assuming MySQL
#
#########################################################

$stmt = $db->prepare('SELECT * FROM table WHERE LOWER(`field`) = ?');
$stmt->execute(array(strtolower($var)));


#########################################################
#
#	How do you force mysql LIKE to be case sensitive
#
#########################################################

mysql> SELECT 'abc' LIKE 'ABC';
    -> 1
mysql> SELECT 'abc' LIKE BINARY 'ABC';
    -> 0

# SELECT * FROM table1 WHERE columnName like 'a%' COLLATE utf8_bin;

#########################################################
#
#   SELECT QUARTER
#
#########################################################

https://dev.mysql.com/doc/refman/5.5/en/date-and-time-functions.html
https://dev.mysql.com/doc/refman/5.5/en/date-and-time-functions.html#function_quarter
SELECT QUARTER('2008-04-01');
        -> 2



#####################################################
#
# 	REPLACE mysql
# 	https://dev.mysql.com/doc/refman/5.7/en/replace.html
# 	https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_replace
#
#####################################################

# entry REPLACE
mysql> REPLACE INTO test VALUES (1, 'Old', '2014-08-20 18:47:00');
mysql> REPLACE INTO test VALUES (1, 'New', '2014-08-20 18:47:42');

# string REPLACE
mysql> SELECT REPLACE('www.mysql.com', 'w', 'Ww');







-------------------------------------------------------------------------------------
############################################################

REPLACE

https://www.db-fiddle.com/
http://sqlfiddle.com/
https://dbfiddle.uk/

############################################################

https://dev.mysql.com/doc/refman/8.0/en/replace.html
https://dev.mysql.com/doc/refman/8.0/en/insert.html

CREATE TABLE test123 (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  data VARCHAR(64) DEFAULT NULL,
  ts TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
);

INSERT INTO test123 VALUES (1, 'Old', '2014-08-20 18:47:00');
INSERT INTO test123 VALUES (2, 'Old', '2014-08-20 18:47:00');
INSERT INTO test123 VALUES (3, 'Old', '2014-08-20 18:47:00');
INSERT INTO test123 VALUES (4, 'Old', '2014-08-20 18:47:00');

REPLACE INTO test123 VALUES (1, 'Old', '2014-08-20 18:47:00');
REPLACE INTO test123 VALUES (1, 'New', '2014-08-20 18:47:42');

CREATE TABLE test123 (
  id INT UNSIGNED NOT NULL AUTO_INCREMENT,
  data VARCHAR(64) DEFAULT NULL,
  ts TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id, ts)
);

REPLACE INTO test123 VALUES (1, 'Old', '2014-08-20 18:47:00');
REPLACE INTO test123 VALUES (1, 'New', '2014-08-20 18:47:42');
INSERT IGNORE INTO test123 VALUES (1, 'Con', '2014-08-20 18:47:00');
INSERT INTO test123 VALUES (1, 'Aby', '2014-08-20 18:47:42') ON DUPLICATE KEY UPDATE data='Abc';

SELECT name, (REGEXP_REPLACE( SUBSTR(name, 1, LENGTH(name)-7) ,'[\W-]','')) as 'prefixname',


#----------------------------------
# Maximum number of records in a MySQL database table
#----------------------------------

/*

https://stackoverflow.com/questions/2716232/maximum-number-of-records-in-a-mysql-database-table
https://dev.mysql.com/doc/mysql-reslimits-excerpt/5.7/en/column-count-limit.html
https://www.quora.com/What-is-the-maximum-number-of-rows-in-a-mysql-table
https://www.sqlite.org/limits.html

unsigned int largest value is 4,294,967,295
unsigned bigint largest value is 18,446,744,073,709,551,615

Maximum Number Of Rows In A Table sqlite
18446744073709551616

*/



######################################################
#
#	PRIMARY KEY vs. UNIQUE KEY vs. KEY
#	unique constraint for multiple columns in MySQL
#
######################################################

https://www.db-fiddle.com/#
http://sqlfiddle.com/
https://dbfiddle.uk/
https://fiddles.io/
https://sqliteonline.com/
https://www.w3schools.com/sql/sql_autoincrement.asp
http://www.mysqltutorial.org/mysql-primary-key/
https://stackoverflow.com/questions/635937/how-do-i-specify-unique-constraint-for-multiple-columns-in-mysql

CREATE TABLE test (
  idf INT NOT NULL AUTO_INCREMENT,
  ido INT NULL,
  ids INT NULL,
  PRIMARY KEY (idf),
  UNIQUE `unique_index`(`ido`, `ids`)
);

# ALTER TABLE `test` ADD UNIQUE `unique_index`(`ido`, `ids`);
# ADD UNIQUE INDEX unique_index (idf ASC) ;

INSERT INTO test (idf,ido,ids) VALUES (1,1,1);
INSERT INTO test (idf,ido,ids) VALUES (2,2,1);
INSERT INTO test (idf,ido,ids) VALUES (3,3,1);
INSERT INTO test (idf,ido,ids) VALUES (4,1,1);

# Schema Error: Error: ER_DUP_ENTRY: Duplicate entry '1-1' for key 'unique_index'

# REPLACE INTO test VALUES (1, 1, 1);
# INSERT IGNORE INTO test VALUES (4, 1, 1) ON DUPLICATE KEY UPDATE ids=1;



######################################################
#
# Reset Index ID
#
######################################################

https://dev.mysql.com/doc/refman/8.0/en/update.html
https://dev.mysql.com/doc/refman/8.0/en/update.html

UPDATE IGNORE `achizitii` SET ID =  SUBSTR(    CONCAT(ROUND(UNIX_TIMESTAMP(DataAnunt)), ROUND(RAND()*5)),  2,7)   WHERE 1

--

set @max_id = (select max(id) from achizitii);
set @id = @max_id;
update achizitii set id = (@id := @id + 1) order by `DataAnunt`;
update achizitii set id = id - @max_id;


######################################################
#
#	FIX: Lock wait timeout exceeded; try restarting transaction
#
######################################################

SHOW ENGINE INNODB STATUS;
show processlist;

SET GLOBAL innodb_lock_wait_timeout = 5000;
SET innodb_lock_wait_timeout = 5000;

######################################################
#
# 	migrate data to another table
#
######################################################

INSERT INTO newTable SELECT * FROM oldTable
INSERT INTO newTable (col1, col2, col3) SELECT column1, column2, column3 FROM oldTable

######################################################
#
# mysql 24h interval
#
######################################################

SELECT *, TIMESTAMPADD(HOUR, 12, DATE(TIMESTAMPADD(HOUR, -12, created))) AS grp
FROM table
ORDER BY created DESC

SELECT COUNT(id), TIMESTAMPADD(HOUR, 12, DATE(TIMESTAMPADD(HOUR, -12, created))) AS grp
FROM table
GROUP BY grp
ORDER BY created DESC;

######################################################
#
# Remove duplicates from table
# ALTER IGNORE TABLE `table_name` ADD UNIQUE (title, SID)
#
######################################################


DELETE FROM videos using videos, videos e1
WHERE videos.id > e1.id
    AND videos.tubecode = e1.tubecode



######################################################
#
# MySQL Error 1064: You have an error in your SQL syntax by DELETE JOIN
#
######################################################

https://www.inmotionhosting.com/support/website/databases/error-1064/
https://www.postgresql.org/docs/8.4/sql-delete.html
http://www.postgresqltutorial.com/postgresql-delete/
https://stackoverflow.com/questions/3970451/what-does-the-mysql-using-statement-do-in-conjunction-with-delete
https://copycoding.com/d/delete-from-using-command-in-snowflake
https://www.1keydata.com/sql/sqldelete.html

#---------------
# postgresql
#---------------

DELETE FROM films USING producers
  WHERE producer_id = producers.id AND producers.name = 'foo';

DELETE FROM films
  WHERE producer_id IN (SELECT id FROM producers WHERE name = 'foo');

DELETE FROM table USING another_table WHERE table.id = another_table.id AND someid=123

# alternative
DELETE FROM table WHERE table.id = (SELECT id FROM another_table);

#---------------
# mysql
#---------------

DELETE FROM <table_name>
            [ USING <additional_tables> ]
            [ WHERE <condition_query> ]

DELETE FROM t1, t2
  USING t1
    INNER JOIN t2
    INNER JOIN t3
  WHERE t1.id=t2.id AND
        t2.id=t3.id;

DELETE l,s
FROM l
  INNER JOIN s
    ON s.skill_id = l.id
WHERE s.user_id = 3

delete from tab1 using tab2 where tab1.k = tab2.k



######################################################
#
#   view the past queries simply run this query in phpMyAdmin.
#
######################################################

https://github.com/phpmyadmin/phpmyadmin/wiki/SQL_history
https://docs.phpmyadmin.net/en/latest/config.html#cfg_Servers_pmadb
https://dev.mysql.com/doc/refman/8.0/en/query-log.html
https://dev.mysql.com/doc/refman/5.5/en/query-log.html
https://dev.mysql.com/doc/refman/5.5/en/server-system-variables.html#sysvar_sql_log_off
https://tableplus.com/blog/2018/10/how-to-show-queries-log-in-mysql.html
https://mabraham.de/mysql-query-logging-query-monitoring/


SHOW VARIABLES LIKE "general_log%";
[Variable_name Value]
general_log OFF
general_log_file /var/lib/mysql/demo-mysql.log
--
SELECT * FROM `general_log`
if it is not enabled, run the following two queries before running it.
--
SET GLOBAL log_output = 'TABLE';
SET GLOBAL general_log = 'ON';
--
SET GLOBAL general_log = 'ON';
SET GLOBAL general_log = 'OFF';

tail -f /var/run/mysqld/mysqld.log


######################################################
https://stackoverflow.com/questions/15890367/select-from-table-a-which-does-not-exist-in-table-b
https://stackoverflow.com/questions/47020056/mysql-select-from-table-a-which-does-not-exist-in-table-b/47020474
https://stackoverflow.com/questions/8435107/mysql-where-not-in-using-two-columns/8435149#8435149
https://www.exchangecore.com/blog/sql-find-items-table-not-table-b
https://www.tutorialspoint.com/mysql-select-from-table-a-that-does-not-exist-in-table-b-using-joins
https://stackoverflow.com/questions/2300322/intersect-in-mysql
######################################################

SELECT * from A left join B on A.BAND = B.HATE where B.HATE IS NULL
SELECT * FROM tableA WHERE id NOT IN (SELECT id FROM tableB)
SELECT * FROM tableA WHERE id NOT EXISTS (SELECT DISTINCT id FROM tableB)
SELECT * FROM tableA WHERE id NOT EXISTS (SELECT id FROM tableB GROUP BY id)

SELECT a.fieldA FROM tableA a  WHERE (a.fieldA) NOT IN ( SELECT b.fieldA FROM  tableB b)
SELECT a.fieldA FROM tableA a  LEFT JOIN tableB b ON (a.fieldA = b.fieldA )  WHERE b.fieldA IS NULL
SELECT a.fieldA FROM tableA a  WHERE NOT EXISTS ( SELECT 1 FROM tableB b  WHERE a.fieldA = b.fieldA  );

SELECT * FROM CompletedTasks WHERE (userID, taskID) NOT IN  ( SELECT userID, taskID  FROM PlannedTasks ) ;
SELECT c.* FROM CompletedTasks AS c WHERE NOT EXISTS ( SELECT 1 FROM PlannedTasks AS p WHERE p.userID = c.userID AND p.taskID = c.taskID ) ;
select ct.* from completedTasks ct left outer join plannedTasks pt on ct.taskId = pt.TaskId and ct.userId = pt.userId where pt.taskId is null



######################################################
MySQL NOT BETWEEN AND operator
https://www.w3resource.com/mysql/comparision-functions-and-operators/not-between-and-operator.php
######################################################

SELECT pub_name,country,pub_city,estd
FROM publisher
WHERE YEAR(estd)  NOT BETWEEN 1968 AND 1975;



######################################################
START TRANSACTION, COMMIT, and ROLLBACK Syntax
https://dev.mysql.com/doc/refman/8.0/en/commit.html
http://www.mysqltutorial.org/mysql-transaction.aspx
######################################################

To disable autocommit mode explicitly, use the following statement:
SET autocommit=0;
SET autocommit = OFF

You use the following statement to enable the autocommit mode explicitly:
SET autocommit = 1;
SET autocommit = ON;

/*
START TRANSACTION;
BEGIN [WORK]
COMMIT [WORK] [AND [NO] CHAIN] [[NO] RELEASE]
ROLLBACK [WORK] [AND [NO] CHAIN] [[NO] RELEASE]
SET autocommit = {0 | 1}
*/

START TRANSACTION;
SELECT @A:=SUM(salary) FROM table1 WHERE type=1;
UPDATE table2 SET summary=@A WHERE type=1;
COMMIT;




######################################################
Getting started with the SQL Profiler
https://dev.mysql.com/doc/refman/5.5/en/show-profile.html
http://download.nust.na/pub6/mysql/tech-resources/articles/using-new-query-profiler.html
https://dev.mysql.com/doc/internals/en/optimizer-tracing-typical-usage.html
######################################################


SET profiling = 1;
call your_procedure;
SHOW PROFILES;
SET profiling = 0;

tail -f /var/log/mysql/mysql.log
----

set profiling=1
select count(*) from client where broker_id=2
select sum(duration) from information_schema.profiling where query_id=1;
show profile for query 1;
show profiles;
show profile for query 4;
show profile cpu for query 4;
set profiling=0;
------

SELECT @@profiling;
SET profiling = 1;
SHOW PROFILES;
SHOW PROFILE;
SHOW PROFILE FOR QUERY 1;
SHOW PROFILE CPU FOR QUERY 2;
SHOW PROFILE FOR QUERY 2;
SELECT STATE, FORMAT(DURATION, 6) AS DURATION FROM INFORMATION_SCHEMA.PROFILING WHERE QUERY_ID = 2 ORDER BY SEQ;
SET profiling = 0;

Using the Profiler for Tuning Queries

# Turn tracing on (it's off by default):
SET optimizer_trace="enabled=on";
SELECT ...; # your query here
SELECT * FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
# possibly more queries...
# When done with tracing, disable it:
SET optimizer_trace="enabled=off";



#########################################################
#
#	MySQL - How to select data by string length
#
#########################################################

SELECT * FROM table ORDER BY CHAR_LENGTH(column);
SELECT * FROM table ORDER BY LENGTH(column);
SELECT field1 FROM table WHERE LENGTH(field) > 10;




####################################################
#
# Optimize Queries
#
####################################################

// -----------------------------------------------
MYSQLND_QC_ENABLE_SWITCH
MAX_EXECUTION_TIME
NO_RANGE_OPTIMIZATION
EXPLAIN
STRAIGHT_JOIN
IGNORE INDEX
USE INDEX
FORCE INDEX
// -----------------------------------------------

https://dev.mysql.com/doc/refman/5.7/en/optimizer-hints.html
https://dev.mysql.com/doc/refman/8.0/en/index-hints.html
https://mysqlserverteam.com/new-optimizer-hints-in-mysql/

/*" . MYSQLND_QC_ENABLE_SWITCH . "*/" . "SELECT id FROM test WHERE id = 1
mysqlnd_qc_is_select()
mysqlnd_set_cache_condition()
mysqlnd_qc.cache_by_default = 1


// -----------------------------------------------
Hint 					Name							Description	Applicable Scopes
BKA, NO_BKA				Affects Batched Key Access join processing	Query block, table
BNL, NO_BNL				Affects Block Nested-Loop join processing	Query block, table
MAX_EXECUTION_TIME		Limits statement execution time	Global
MRR, NO_MRR				Affects	Multi-Range Read optimization	Table, index
NO_ICP					Affects Index Condition Pushdown optimization	Table, index
NO_RANGE_OPTIMIZATION	Affects range optimization	Table, index
QB_NAME					Assigns name to query block	Query block
SEMIJOIN, NO_SEMIJOIN	Affects semijoin strategies	Query block
SUBQUERY				Affects materialization, IN-to-EXISTS subquery stratgies	Query block

// -----------------------------------------------
https://www.dbrnd.com/2016/10/mysql-select-with-index-hint-option-to-optimize-the-query-use-index-force-index-ignore-index/
https://www.percona.com/blog/2015/04/30/optimizer-hints-mysql-5-7-7-missed-manual/
// -----------------------------------------------

// Create a sample table:

CREATE TABLE tbl_EmployeeDetails
(
    EmpID INTEGER PRIMARY KEY
    ,EmpName VARCHAR(50)
    ,EmpSalary BIGINT
    ,DepartmentName VARCHAR(50)
);

// Insert few sample Records:

INSERT INTO tbl_EmployeeDetails VALUES
(1,'Anvesh',80000,'Sales')
,(2,'Neevan',90000,'Sales')
,(3,'Jenny',50000,'Production')
,(4,'Roy',60000,'Production')
,(5,'Martin',30000,'Research')
,(6,'Mahi',85000,'Research')
,(7,'Kruti',45000,'Research')
,(8,'Manish',75000,'Research');

// Create few sample Indexes:

CREATE INDEX idx_tbl_EmployeeDetails_EmpName ON tbl_EmployeeDetails (EmpName);
CREATE INDEX idx_tbl_EmployeeDetails_DepartmentName ON tbl_EmployeeDetails (DepartmentName);
CREATE INDEX idx_tbl_EmployeeDetails_EmpName_EmpSalary ON tbl_EmployeeDetails (EmpName,EmpSalary);

// Using USE INDEX:

SELECT *FROM tbl_EmployeeDetails USE INDEX (idx_tbl_EmployeeDetails_EmpName)
WHERE EmpName = 'Roy';

SELECT *FROM tbl_EmployeeDetails USE INDEX (idx_tbl_EmployeeDetails_EmpName_EmpSalary)
WHERE EmpName = 'Roy' AND EmpSalary > 50000;

// Using IGNORE INDEX:

SELECT *FROM tbl_EmployeeDetails IGNORE INDEX (idx_tbl_EmployeeDetails_EmpName)
WHERE EmpName = 'Roy' AND EmpSalary > 50000;

// Using FORCE INDEX:

SELECT *FROM tbl_EmployeeDetails FORCE INDEX (idx_tbl_EmployeeDetails_EmpName)
WHERE EmpName = 'Roy' AND EmpSalary > 50000;





#########################################################
MariaDB and MySQL — what statistics optimizer needs or when and how not to use indexes
#########################################################
https://www.youtube.com/watch?v=x5anyspAN3s
https://dev.mysql.com/doc/refman/5.6/en/analyze-table.html
https://dev.mysql.com/doc/refman/8.0/en/analyze-table.html
https://mariadb.com/kb/en/library/histogram-based-statistics/
https://mariadb.com/kb/en/library/analyze-table/
https://mariadb.com/kb/en/library/server-system-variables/#optimizer_use_condition_selectivity

ANALYZE TABLE Statement
ANALYZE Statement
EXPLAIN ANALYZE
REPAIR TABLE
CHECK TABLE
CHECKSUM TABLE
OPTIMIZE TABLE

SET optimizer_use_condition_selectivity=5;

Description: Controls which statistics can be used by the optimizer when looking for the best query execution plan.





#########################################################
//
// Insert Duplicate entry
// https://dev.mysql.com/doc/refman/5.5/en/insert-on-duplicate.html
// https://mariadb.com/kb/en/library/insert-on-duplicate-key-update/
//
#########################################################

#1062 - Duplicate entry '<ID>' for key 'PRIMARY'
INSERT INTO `<table>` (`id`, `text`)
VALUES (12345678, 'codeception');

# update done
INSERT IGNORE INTO `<table>` (`id`, `text`)
VALUES (12345678, 'codeception');

# update done
INSERT INTO `<table>``
 (
	`id`,
 	`text`
 )
VALUES
(
	12345678,
	'codeception'
)
ON DUPLICATE KEY UPDATE
	text='codeception';



#########################################################

Strings are the same?
https://dev.mysql.com/doc/refman/8.0/en/string-comparison-functions.html

#########################################################

mysql> SELECT STRCMP('text', 'text2');        -> -1
mysql> SELECT STRCMP('text2', 'text');        -> 1
mysql> SELECT STRCMP('text', 'text');         -> 0

#########################################################

MySQL IFNULL() Function

#########################################################

https://www.w3schools.com/sql/func_mysql_ifnull.asp
https://www.askingbox.com/question/mysql-how-to-check-if-field-is-null-or-empty
https://stackoverflow.com/questions/17832906/how-to-check-if-field-is-null-or-empty-mysql/17832946
https://www.itsolutionstuff.com/post/how-to-check-empty-or-null-in-mysql-queryexample.html

SELECT IFNULL(NULL, "W3Schools.com");
SELECT IFNULL(1,0); -- returns 1
SELECT IFNULL('',1); -- returns ''
SELECT IFNULL(NULL,'IFNULL function'); -- returns IFNULL function


SELECT * FROM tab WHERE col IS NULL OR col = ''
SELECT * FROM tab WHERE col IS NOT NULL AND col != ''
SELECT IF(col IS NULL OR col = '', 'empty', col) FROM tab


SELECT IF(field1 IS NULL or field1 = '', 'empty', field1) as field1 from tablename
SELECT case when field1 IS NULL or field1 = ''
            then 'empty'
            else field1
       end as field1
from tablename



# MySQL select 10 random rows from 600K rows fast
# https://stackoverflow.com/questions/4329396/mysql-select-10-random-rows-from-600k-rows-fast

SELECT column FROM table ORDER BY RAND() LIMIT 10

SELECT name
  FROM random AS r1 JOIN
       (SELECT CEIL(RAND() *
                     (SELECT MAX(id)
                        FROM random)) AS id)
        AS r2
 WHERE r1.id >= r2.id
 ORDER BY r1.id ASC
 LIMIT 1


#########################################################
#
#   RANDOM
#
#########################################################

-- OPTIMIZED: 300ms

SELECT g.* FROM table g
   JOIN (SELECT id FROM table WHERE RAND() < (SELECT ((4 / COUNT(*)) * 10) FROM  table)
    ORDER BY RAND() LIMIT 4) AS z ON z.id= g.id

-- UNOPTIMIZED: 1200ms

SELECT g.* FROM table g ORDER BY RAND() LIMIT 4

-- OPTIMIZED: ?

SELECT t.* FROM table t
JOIN  (SELECT id  FROM `table`  ORDER BY RAND()) AS z ON z.id= t.id
WHERE t.isVisible = 1 LIMIT 100;

#########################################################
#
#   temp table
#
#########################################################

SELECT e.id FROM employee e
JOIN (SELECT id from employee e2 ) as tmp
WHERE e.date BETWEEN NOW() - INTERVAL 30 DAY AND NOW()
AND e.id = tmp.id LIMIT 5

#########################################################
#
#   Hide MySQL count column
#
#########################################################
-- https://stackoverflow.com/questions/21397695/hide-mysql-count-column

SELECT region FROM world GROUP  BY region HAVING COUNT(*) > 1


#########################################################
#
#   UPDATE JOIN TABLE
#
#########################################################

UPDATE table1 t1
JOIN table2 t2 ON t2.id = t1.id
SET t1.text = 'done'
WHERE t2.category IN (1,2,3,4,5)

#########################################################
#
#   FIX #1292 - Truncated incorrect DOUBLE value - use Quotation! 'strict mode'?
#
#########################################################
http://userpage.fu-berlin.de/~ram/pub/pub_jf47ht81Ht/parameter_sql
https://stackoverflow.com/questions/3456258/mysql-truncated-incorrect-double-value
https://www.bennadel.com/blog/1503-data-truncation-truncated-incorrect-double-value-when-updating-timestamp.htm
https://bugs.mysql.com/bug.php?id=63112



############################################################
# select average from total count pro item
############################################################

SELECT ROUND(AVG(tmp.total)) FROM (
 SELECT count(items) total FROM `table` WHERE `field`='sometype'
GROUP BY  items ORDER BY total DESC ) as tmp


############################################################
#
#   MySQL Error Resolved – Subquery Returns More Than 1 Row
#
#   FIX1: use ANY or IN
#   FIX2: use AVG/COUNT/MAX
#
############################################################

http://biostall.com/mysql-error-subquery-returns-more-than-1-row/
https://www.geeksengine.com/database/subquery/return-rows-of-values.php

SELECT `col1` FROM `table1`  WHERE `col1` IN (SELECT `col2` FROM `table2`);
SELECT `col1` FROM `table1`  WHERE `col1` = ANY (SELECT `col2` FROM `table2`);

############################################################
#
#   Using COUNT in GROUP_CONCAT - Subquery Returns More Than 1 Row
#
# https://stackoverflow.com/questions/17463171/using-count-in-group-concat
# https://dba.stackexchange.com/questions/109381/mysql-trying-to-combine-group-concat-with-count
# https://dev.mysql.com/doc/refman/5.6/en/group-by-functions.html
# http://www.mysqltutorial.org/mysql-group_concat/
# https://explainextended.com/2009/09/18/not-in-vs-not-exists-vs-left-join-is-null-mysql/
# https://dev.mysql.com/doc/refman/8.0/en/optimizing-subqueries.html
# https://www.w3resource.com/mysql/aggregate-functions-and-grouping/aggregate-functions-and-grouping-group_concat.php
# https://dev.mysql.com/doc/refman/5.5/en/group-by-functions.html
# https://mariadb.com/kb/en/library/group_concat/

############################################################

SELECT GROUP_CONCAT(cnt SEPARATOR ' , ') cnt
  FROM
(
  SELECT COUNT(*) cnt
    FROM table1
   GROUP BY fk_company
) q



############################################################
#   Disable ONLY_FULL_GROUP_BY
############################################################
https://stackoverflow.com/questions/23921117/disable-only-full-group-by
Error in query (1055): Expression # this is incompatible with sql_mode=only_full_group_by
-----------------------------------------------
SET GLOBAL sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));
sudo service mysql restart


############################################################
#   Block Nested Loop making things slower
############################################################
https://bugs.mysql.com/bug.php?id=69721
https://dev.mysql.com/doc/refman/5.6/en/bnl-bka-optimization.html
https://mariadb.com/kb/en/block-based-join-algorithms/

SET optimizer_switch='mrr=on,mrr_cost_based=off,batched_key_access=on';
SET SESSION optimizer_switch='block_nested_loop=off';
set optimizer_switch='block_nested_loop=off'


############################################################
Removing duplicate from group by strings separated by comma
############################################################
https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html#function_group-concat
https://dev.mysql.com/doc/refman/8.0/en/group-by-functions.html
https://www.mysqltutorial.org/mysql-group_concat/

SELECT COUNT(DISTINCT ids), GROUP_CONCAT(DISTINCT product) FROM products

# Oracle CONCAT LISTAGG
https://oracle-base.com/articles/misc/string-aggregation-techniques
https://modern-sql.com/de/feature/listagg

SELECT deptno, LISTAGG(ename, ',') WITHIN GROUP (ORDER BY ename) AS employees
FROM   emp
GROUP BY deptno;



############################################################
Single-column index vs. multicolumn index (Composite Primary Key)
############################################################
http://itdoc.hitachi.co.jp/manuals/3020/3020635200e/W3520279.HTM
https://www.celerity.com/how-to-design-sql-indexes
https://weblogs.sqlteam.com/jeffs/2007/08/23/composite_primary_keys/
https://www.tutorialspoint.com/sql/sql-primary-key.htm
https://chartio.com/resources/tutorials/can-multiple-primary-keys-exist-on-a-single-table/
https://www.w3schools.com/sql/sql_primarykey.ASP
https://www.tutorialspoint.com/sql/sql-primary-key.htm
https://weblogs.sqlteam.com/jeffs/2007/08/23/composite_primary_keys/
https://www.celerity.com/how-to-design-sql-indexes
https://www.mysqltutorial.org/mysql-index/mysql-composite-index/
https://use-the-index-luke.com/sql/where-clause/the-equals-operator/concatenated-keys
http://dev.cs.ovgu.de/db/sybase9/help/dbugen9/00000433.htm


# Single Primary Key
CREATE TABLE userdata (
  userid INT,
  userdataid INT,
  primary key (userid)
);

# Composite Primary Key
CREATE TABLE userdata (
  userid INT,
  userdataid INT,
  primary key (userid, userdataid)
);


######################################################################################
#
#	Code Inspections in SQL - Code Inspection: Aggregate-related problems SQL Highlighting
#	Summarizing Values: GROUP BY Clause and Aggregate Functions
#	MySQL Handling of GROUP BY - aggregated by group
#
######################################################################################

https://www.youtube.com/watch?v=RlNEwBhckDA&feature=emb_title

https://www.jetbrains.com/help/phpstorm/sql-aggregate-related-problems.html
https://www.jetbrains.com/help/phpstorm/code-inspections-in-sql.html
https://www.jetbrains.com/help/phpstorm/working-with-the-database-tool-window.html
https://blog.jetbrains.com/datagrip/2017/06/20/working-with-sql-and-databases-in-intellij-based-ides-webinar-follow-up/
https://confluence.jetbrains.com/display/PhpStorm/PhpStorm+2019.1.2+Release+Notes


https://www.essentialsql.com/get-ready-to-learn-sql-6-how-to-group-and-summarize-your-results/
https://docs.thunderstone.com/site/texisman/summarizing_values.html
https://www.tutorialgateway.org/mysql-group-by/
https://dev.mysql.com/doc/refman/5.7/en/group-by-handling.html
https://docs.data.world/documentation/sql/concepts/intermediate/GROUP_BY.html
https://www.geeksengine.com/database/summarize-data/group-by-with-having-clause.php
http://rpbouman.blogspot.com/2007/05/debunking-group-by-myths.html
https://codeburst.io/aggregate-functions-part-1-count-with-examples-in-mysql-79a97ff41856
https://www.psce.com/en/blog/2012/05/15/mysql-mistakes-do-you-use-group-by-correctly/

http://sqlfiddle.com/#!9/71953/5
http://sqlfiddle.com/#!9/71953/4



######################################################################################
#
# INSERT DUPLICATE WITH IF CHECK == WHERE EXISTS / WHERE NOT EXISTS
#
######################################################################################

# https://stackoverflow.com/questions/2469457/insert-on-duplicate-key-update-with-where
# https://stackoverflow.com/questions/23673721/mysql-two-tables-copy-one-column/56566608#56566608
# https://stackoverflow.com/questions/3164505/mysql-insert-record-if-not-exists-in-table/3164595
# https://www.codeproject.com/Questions/1090743/Mysql-insert-record-if-not-exists-already
# https://www.mysqltutorial.org/mysql-exists/
# https://ypereirareis.github.io/blog/2016/03/22/mysql-insert-ignore-alternatives/
# https://stackoverflow.com/questions/1361340/how-to-insert-if-not-exists-in-mysql

INSERT INTO `mytable` (`col1`, `col2`, `col3`, `col4`)
		SELECT *
			FROM (SELECT 'some_string_or_id',  NOW(), 4, 1 ) as tmp
			WHERE EXISTS (
					SELECT `col1` FROM  `mytable` WHERE `col4` = 1 AND `col1`= 'some_string_or_id'
			)  LIMIT 1
ON DUPLICATE KEY UPDATE col2 = NOW(), col3= ROUND(RAND()*5);


######################################################################################
#
#   GROUP_CONCAT MySQL
#
######################################################################################

http://www.w3resource.com/mysql/aggregate-functions-and-grouping/aggregate-functions-and-grouping-group_concat.php

SELECT pub_id,GROUP_CONCAT(cate_id)
FROM book_mast
GROUP BY pub_id;


######################################################################################
#
#   profiling mysql queries
#
######################################################################################

https://code.tutsplus.com/tutorials/profiling-mysql-queries-with-phpmyadmin--net-12687
https://blog.skunkbad.com/databases/mysql/enable-general-and-slow-query-logging

Turn On Logging in phpMyAdmin
SET GLOBAL general_log = 'ON';
SET GLOBAL slow_query_log = 'ON';

Turn Off Logging When You’re Done
SET GLOBAL general_log = 'OFF';
SET GLOBAL slow_query_log = 'OFF';

##################################################################
#
#  Why INSERT IGNORE increments the auto_increment primary key?
#
##################################################################

https://stackoverflow.com/questions/5655396/why-insert-ignore-increments-the-auto-increment-primary-key
https://dev.mysql.com/doc/refman/5.7/en/innodb-auto-increment-handling.html#innodb-auto-increment-lock-modes
https://dev.mysql.com/doc/refman/8.0/en/innodb-auto-increment-handling.html
https://www.percona.com/blog/2011/11/29/avoiding-auto-increment-holes-on-innodb-with-insert-ignore/
https://bugs.mysql.com/bug.php?id=63128
https://dev.mysql.com/doc/refman/8.0/en/innodb-auto-increment-handling.html
https://dev.mysql.com/doc/refman/8.0/en/innodb-auto-increment-handling.html
https://www.xaprb.com/blog/2005/09/22/mutex-tables-in-sql/
https://www.percona.com/blog/2011/11/29/avoiding-auto-increment-holes-on-innodb-with-insert-ignore/
https://dba.stackexchange.com/questions/101320/mysql-auto-increment-column-increases-after-insertion-error-occurs


QUICK FIX:
innodb_autoinc_lock_mode = 0 (“traditional” lock mode)
Add innodb_autoinc_lock_mode=0 to your my.cnf file (/etc/mysql/my.cnf).

set the configuration variable innodb_autoinc_lock_mode to 0 (a.k.a “traditional” lock mode)
If you'd like to avoid gaps in your auto-increment columns.
It may incur a performance penalty, though, as this mode has the effect of holding a table lock until the INSERT completes.


ELABORATE FIX:
.........................................
https://www.db-fiddle.com/
.........................................

CREATE TABLE foo (
id int(11) NOT NULL AUTO_INCREMENT,
name int(11) DEFAULT NULL,
PRIMARY KEY (id),
UNIQUE KEY uniqname (name)
) ENGINE=InnoDB;

insert ignore into foo (name) value('a');
insert ignore into foo (name) value('a');
insert ignore into foo (name) value('a');
insert ignore into foo (name) value('a');

show create table foo;

CREATE TABLE `foo` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` int(11) DEFAULT NULL, PRIMARY KEY (`id`), UNIQUE KEY `uniqname` (`name`) )
ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=latin1

AUTO_INCREMENT=5 is FALSE!
.........................................

FIX ~

create table mutex( i int not null primary key );
insert into mutex(i) values (1);

CREATE TABLE foo (
id int(11) NOT NULL AUTO_INCREMENT,
name int(11) DEFAULT NULL,
PRIMARY KEY (id),
UNIQUE KEY uniqname (name)
) ENGINE=InnoDB;


insert into foo(name) select 1 from mutex left outer join foo on foo.name=1 where mutex.i = 1 and foo.name is null;
insert into foo(name) select 1 from mutex left outer join foo on foo.name=1 where mutex.i = 1 and foo.name is null;
insert into foo(name) select 1 from mutex left outer join foo on foo.name=1 where mutex.i = 1 and foo.name is null;
insert into foo(name) select 1 from mutex left outer join foo on foo.name=1 where mutex.i = 1 and foo.name is null;

show create table foo;

CREATE TABLE `foo` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` int(11) DEFAULT NULL, PRIMARY KEY (`id`), UNIQUE KEY `uniqname` (`name`) )
ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1

AUTO_INCREMENT=2 is OK!

##################################################################
#
#   SQLite Set AUTOINCREMENT == PRIMARY KEY
#
##################################################################

https://www.sqlitetutorial.net/sqlite-autoincrement/
https://www.sqlite.org/autoinc.html

CREATE TABLE people (
   person_id INTEGER PRIMARY KEY,
   first_name TEXT NOT NULL,
   last_name TEXT NOT NULL
);

INSERT INTO people (first_name, last_name)
VALUES('John', 'Doe');


##################################################################
BLOB Test sqlfiddle
##################################################################

http://phptester.net/
http://sqlfiddle.com/
http://www.java2s.com/Code/SQL/Table-Index/CreatetableBLOB.htm
https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html
https://www.php.net/serialize

print "<pre>";
print_r((array)unserialize(""));
print_r(array_filter((array)unserialize(""),"trim"));

CREATE TABLE Inventory
(
      ID SMALLINT UNSIGNED,
      Name VARCHAR(40),
      Photo BLOB,
      Quantity INT UNSIGNED
);
INSERT INTO Inventory (ID,Name,Photo,Quantity) VALUES(1,'a:0:{}','a:0:{}',1);
INSERT INTO Inventory (ID,Name,Photo,Quantity) VALUES(2,'','',1);
INSERT INTO Inventory (ID,Name,Photo,Quantity) VALUES(3,NULL,NULL,1);

SELECT *, CAST(Photo AS CHAR CHARACTER SET utf8mb4) FROM Inventory

##################################################################
mySQL UPDATE query returns “0 rows affected”
##################################################################

https://www.php.net/manual/de/function.mysql-affected-rows.php
https://www.mssqltips.com/sqlservertip/6091/how-to-use-rowcount-in-sql-server/
https://doc.bccnsoft.com/docs/php-docs-7-en/function.mysql-affected-rows.html

@ROWCOUNT
mysqli_affected_rows()
PDOStatement::rowCount()

/*
---------------------------------
write on slave connection
---------------------------------
https://mariadb.com/kb/en/mariadb-maxscale-21-readwritesplit/
https://mariadb.com/kb/en/mariadb-maxscale-22-readwritesplit/
https://blog.pchudzik.com/201911/read-from-replica/
https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html
https://docs.keydb.dev/docs/replication/
*/



--------------------------------------------
SQL Reserved Words
--------------------------------------------
https://docs.actian.com/psql/psqlv13/index.html#page/sqlref/sqlkword.htm
https://doc.ispirer.com/sqlways/Output/SQLWays-1-205.html
https://mariadb.com/kb/en/reserved-words/
https://www.postgresql.org/docs/8.1/sql-keywords-appendix.html
https://docs.aws.amazon.com/athena/latest/ug/reserved-words.html
https://docs.exasol.com/sql_references/basiclanguageelements.htm
https://mariadb.com/kb/en/limit/

--------------------------------------------
USING (column_list)
--------------------------------------------
https://www.jetbrains.com/help/phpstorm/sql-check-using-clause-columns.html
https://mariadb.com/kb/en/index-hints-how-to-force-query-plans/
https://www.mysqltutorial.org/mysql-join/
https://www.jetbrains.com/help/phpstorm/sql-check-using-clause-columns.html
https://www.jetbrains.com/help/phpstorm/code-style-sql-queries.html
https://mariadb.com/kb/en/join-syntax/
https://mariadb.com/kb/en/joining-tables-with-join-clauses/
