

#####################################
Reviews
#####################################

https://www.softwaretestinghelp.com/test-documentation-reviews/
https://www.geeksforgeeks.org/software-testing-test-review/
https://www.browserstack.com/guide/code-review-for-quality-assurance

Types Of Reviews:
~~~~~~~~~~~~~~~~~~~
Reviewing your own work – Self Checking
Peer-review
Supervisory

Common artifacts to review
~~~~~~~~~~~~~~~~~~~
Test plan
Test scenarios
Test templates
Test cases
Test data
Reports…etc


Activities involved:
~~~~~~~~~~~~~~~~~~~
Define the criteria – Have a checklist of what to look for?
Perform the check
Record your results
Share, discuss and implement the changes required
Version control the documents involved
Sign off and use the doc as intended.


Step 1: Define The Criteria
~~~~~~~~~~~~~~~~~~~
Spelling mistakes
Format/template compliance
Functionality coverage and correctness
Ease of understanding
Standards followed – naming conventions, consistent numbering …etc.

Step 2: Perform The Check
Step 3: Record Your Results
Step 4: Share, Discuss And Implement The Changes Required
Step 5: Version Control The Documents Involved
Step 6: Sign Off And Use The Doc As Intended


Code Review Checklist
~~~~~~~~~~~~~~~~~~~
Identify syntax errors
Verify functionalities
Readability of the code
Maintaining Coding Style
Checking for Duplicates
Ensuring Proper Documentation
Finding scope for improvement

#######################################
Manual UI Testing
#######################################

https://www.browserstack.com/guide/ui-testing-guide
https://www.browserstack.com/live
https://www.eleken.co/blog-posts/design-qa-checklist-to-test-ui-and-prepare-for-design-handoff
https://www.softwaretestinghelp.com/gui-testing/
https://www.perfecto.io/blog/ui-test-comprehensive-guide-ui-testing
https://www.guru99.com/gui-testing.html
https://www.browserstack.com/guide/what-is-automated-ui-testing
https://testfort.com/blog/why-your-project-needs-ui-ux-testing

Functionality
Visual Design
Responsiveness
Performance
Usability
Accessibility
Compliance

 Scope
~~~~~~~~~~~~~~~~~~~
Data type errors
Field widths
Navigational elements
Progress bars
Type-ahead
Table scrolling
Error Logging
Menu Items
Working shortcuts




UI Test Scenarios
~~~~~~~~~~~~~~~~~~~
User enters a valid username and password
User enters a valid username and invalid password
User resets the password
User tries to copy password from password field
User tries to copy password to password field
User clicks Help button



UI CHECKLIST FOR MOBILE APPLICATION TESTING
~~~~~~~~~~~~~~~~~~~
Layout and Design
Navigation and Interactions
Buttons and Interactive Elements
Forms and Inputs
Images and Media
Text and Typography
Responsive Design
Localization and Internationalization
Accessibility
Device-specific Features
Performance
Cross-Browser and Cross-Device Testing


UI TESTING CHECKLIST FOR WEB APPLICATION
~~~~~~~~~~~~~~~~~~~
Cross-Browser Compatibility
Responsive Design
Navigation and Links
Forms and Inputs
Buttons and Interactive Elements
Images and Media
Typography and Text
Color and Design
Accessibility
Performance
Localization and Internationalization
Browser DevTools
Cookies and Sessions
Error Handling and Messages
Security
Third-Party Integrations
UI Consistency


################################################
Jira QA Workflow
################################################

https://www.mindfulqa.com/jira-qa/
https://www.mindfulqa.com/prioritize-bugs/
https://blog.jirachecklist.com/jira-for-testing/
https://www.testrail.com/blog/jira-test-management-solutions/
https://www.guru99.com/jira-tutorial-a-complete-guide-for-beginners.html
https://www.youtube.com/watch?v=hIlwvej1wHQ
https://blog.jetbrains.com/youtrack/2020/10/make-it-workflow-part-13-supporting-test-management-scenarios/
https://blog.jetbrains.com/youtrack/2014/12/integrate-youtrack-with-testlodge-an-online-test-management-tool/


Relevant, detailed ticket comments can be extremely helpful for QA to review when the feature is ready for testing.
Tag!

Software Testing Bug Categories
Blocker
Critical
High
Medium
Low

Jira Design your board to be more process-friendly


columns:
~~~~~~~~~~~~~~~~~~~
TO DO
Ready for development
In progress
Ready for review
Ready for testing
In testing
Reopened
Ready for release
Released

QA ticket
~~~~~~~~~~~~~~~~~~~
Summary
Description
Issue type
Assignee
Priority
Labels
Environment
Affects Version
Components
Attachment
Linked Issues
Due date
Tags

Backlog grooming

A typical backlog consists of dozens of tickets with a “medium” or lower priority.



