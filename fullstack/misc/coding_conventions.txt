-------------------------------------------------------------
Coding Standards For Quality and Compliance
-------------------------------------------------------------
https://www.perforce.com/resources/qac/coding-standards
https://www.perforce.com/resources/qac/coding-standards#what
https://www.mono-project.com/community/contributing/coding-guidelines/###
https://www.oracle.com/java/technologies/javase/codeconventions-namingconventions.html###
https://isocpp.org/wiki/faq/coding-standards###
https://codeahoy.com/2016/05/22/effective-coding-standards/
https://en.wikipedia.org/wiki/List_of_tools_for_static_code_analysis
https://en.wikipedia.org/wiki/Code_review
https://en.wikipedia.org/wiki/Coding_conventions

((What Are Coding Rules and Guidelines?))

Coding rules and guidelines ensure that software is:

Safe: It can be used without causing harm.
Secure: It can’t be hacked.
Reliable: It functions as it should, every time.
Testable: It can be tested at the code level.
Maintainable: It can be maintained, even as your codebase grows.
Portable: It works the same in every environment.

((Why Coding Standards Are Important))

The reason why coding standards are important is because they help to ensure safety, security, and reliability.
Every development team should use one. Even the most experienced developer could introduce a coding defect — without realizing it. And that one defect could lead to a minor glitch. Or worse, a serious security breach.
There are four key benefits of using coding standards:

1. Compliance with industry standards (e.g., ISO).
2. Consistent code quality — no matter who writes the code.
3. Software security from the start.
4. Reduced development costs and accelerated time to market.


https://codedx.com/
https://empear.com/
https://www.synopsys.com/software-integrity.html
https://www.hcltechsw.com/wps/portal/products/appscan
https://www.kiuwan.com/
https://www.microfocus.com/en-us/solutions/application-security
https://pmd.github.io/
http://sonarqube.org/
https://www.scovetta.com/yasca/
https://www.veracode.com/

-------------------------------------------------------------
Code Review Tools
-------------------------------------------------------------
https://en.wikipedia.org/wiki/List_of_tools_for_code_review
https://en.wikipedia.org/wiki/List_of_tools_for_code_review

https://www.atlassian.com/de/software/crucible
https://www.gerritcodereview.com/
https://www.reshiftsecurity.com/
https://www.reviewboard.org/

https://www.phacility.com/
https://phacility.com/phabricator/
http://codestriker.sourceforge.net/

https://www.codacy.com/
https://trac-hacks.org/wiki/PeerReviewPlugin
https://www.codefactor.io/
https://www.perforce.com/products/helix-swarm
https://rhodecode.com/
https://www.veracode.com/products/binary-static-analysis-sast

https://www.atlassian.com/software/bitbucket/enterprise/data-center
https://smartbear.com/product/collaborator/overview/
https://about.gitlab.com/
https://codescene.io/
https://reviewable.io/#fe
https://www.visual-expert.com/#pr
https://www.jarchitect.com/#pr
https://codereview.appspot.com/


https://www.reviewboard.org/
https://www.atlassian.com/software/crucible
https://github.com/features/code-review/
https://www.phacility.com/phabricator/
https://smartbear.com/product/collaborator/overview/
https://codescene.io/
https://www.visual-expert.com/
https://www.gerritcodereview.com/
https://rhodecode.com/
https://www.veracode.com/
https://reviewable.io/
https://trac-hacks.org/wiki/PeerReviewPlugin
https://github.com/softwaremill/codebrag
https://www.gerritcodereview.com/
http://codestriker.sourceforge.net/
https://www.viva64.com/en/pvs-studio-download/
https://www.gerritcodereview.com/
https://www.codacy.com/
https://www.codefactor.io/
https://www.jetbrains.com/de-de/upsource/
https://github.com/joho/awesome-code-review


######################################################
#	naming-conventions js css python
######################################################

http://getbem.com/introduction/
https://www.robinwieruch.de/javascript-naming-conventions
https://stackoverflow.com/questions/6028211/what-is-the-standard-naming-convention-for-html-css-ids-and-classes
https://stackoverflow.com/questions/159720/what-is-the-naming-convention-in-python-for-variable-and-function-names?rq=1
https://www.python.org/dev/peps/pep-0008/#function-and-variable-names
https://www.python.org/dev/peps/pep-0008/#prescriptive-naming-conventions
https://www.python.org/dev/peps/pep-0008/#descriptive-naming-styles
http://www.cs.kent.edu/~jmaletic/papers/ICPC2010-CamelCaseUnderScoreClouds.pdf

https://www.urlencoder.org/
https://sandbox.onlinephpfunctions.com/
https://en.wikipedia.org/wiki/Snake_case#Examples
https://google.github.io/styleguide/pyguide.html#316-naming

######################################################
Hyphen delimited string ABC-BCD
Snake case string abc_abc
Camel case string abcAbc
######################################################

https://area51.phpbb.com/docs/dev/development/css_naming.html
https://www.tutorialspoint.com/splitting-a-hyphen-delimited-string-with-negative-numbers-or-range-of-numbers-javascript
https://www.freecodecamp.org/news/css-naming-conventions-that-will-save-you-hours-of-debugging-35cea737d849/
http://bdavidxyz.com/blog/how-to-name-css-classes/
https://en.wikipedia.org/wiki/Camel_case
https://en.wikipedia.org/wiki/Snake_case#Examples
https://en.wikipedia.org/wiki/Hungarian_notation
http://www.rither.de/a/informatik/php-beispiele/variablen/type-casts/

