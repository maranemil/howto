
######################################################################
#
#   Vuex install 2022
#
######################################################################

https://classic.yarnpkg.com/lang/en/docs/install/#debian-stable
https://askubuntu.com/questions/1382565/npm-does-not-support-node-js-v10-19-0
https://github.com/nodejs/help/issues/3644
https://vuex.vuejs.org/
https://www.npmjs.com/package/vuex

------------

https://stackoverflow.com/questions/68111008/failed-to-install-vuex-in-vue3
https://vuex.vuejs.org/installation.html

Vue3
npm install vuex@next --save
npm install vuex --save

Vue2
npm install vuex --save
npm install vuex@3.4.0 --save

------------

[ nodejs ]

sudo apt install nodejs -y
nodejs -v

------------

[ npm ]

sudo apt install npm -y
# npm i -g npm@latest
# npm does not support node.js v10.19.0
curl -fsSL https://deb.nodesource.com/setup_12.x | sudo -E bash -
sudo apt-get install -y nodejs
npm -v

------------

[ yarn ]

npm install --global yarn
yarn --version
# sudo apt install cmdtest
# sudo apt-get install -y yarn

------------

[ vuex ]

git clone https://github.com/vuejs/vuex
cd vuex
sudo npm install --force
sudo npm audit fix
npm run
npm run dev

------------

[ vscode plugins ]

annotator
gitlens
vetur



######################################################################
#
#   Vuex Application Structure
#
######################################################################

https://vuex.vuejs.org/guide/structure.html
https://github.com/davellanedam/vue-skeleton-mvp
https://github.com/davellanedam/node-express-mongodb-jwt-rest-api-skeleton
https://github.com/davellanedam/vue-skeleton-mvp
https://madewithvuejs.com/
https://vuex.vuejs.org/guide/getters.html

├── index.html
├── main.js
├── api
│   └── ... # abstractions for making API requests
├── components
│   ├── App.vue
│   └── ...
└── store
    ├── index.js          # where we assemble modules and export the store
    ├── actions.js        # root actions
    ├── mutations.js      # root mutations
    └── modules
        ├── cart.js       # cart module
        └── products.js   # products module



How to create a search bar in Vue
https://blog.logrocket.com/create-search-bar-vue/


npm init vue@latest
create-vue vue-search-app
cd vue-search-app
npm install
npm run dev

######################################################################
#
#   laravel vite
#
######################################################################

https://laravel.com/docs/9.x/vite
https://laravel-vite.dev/
https://laravel-vite.dev/guide/quick-start.html#matching-the-mix-config
https://github.com/innocenzi/laravel-vite
https://warrickbayman.medium.com/laravel-vue-and-inertia-with-vite-4b8b825b790a
https://laravel-news.com/vite-is-the-default-frontend-asset-bundler-for-laravel-applications
https://laracasts.com/discuss/channels/vue/how-to-use-laravel-vite
https://laravel-vite.netlify.app/guide/introduction.html#overview

npx @preset/cli apply laravel:vite

.

# Remove Mix
> rm webpack.mix.js
> npm remove laravel-mix

# Require the packages
> composer require innocenzi/laravel-vite:0.2.*
> npm i -D vite vite-plugin-laravel
> php artisan vendor:publish --tag=vite-config


npx vite build
npx vite serve

..

laravel new breeze-test --git
cd breeze-test
composer require laravel/breeze
php artisan breeze:install vue
npm install
npm run dev

...

yarn create vite
yarn install

npm create vite@latest
npm i

npm create vite@latest react-app --template react
npm install
npm run dev

npm init vite my-app
npm init @vitejs/app
npm init vite@latest



######################################################################
#
#   pinia
#
######################################################################

npm install pinia
npm -i pinia

######################################################################
#
#   babel webpack
#
######################################################################

yarn babel index.js --preserts "@babel/preset-env" > index.es5.js
touch webpack.config.js
yarn webpack --config webpack.config.js --mode=development



######################################################################
#
#   Vuex15Minutes & misc
#
######################################################################

https://github.com/ErikCH/Vuex15Minutes
https://github.com/iamshaunjp/vue-with-typescript
https://github.com/harblaith7/Vuex-4-Crash-Course
https://github.com/Colt/webpack-demo-app
https://codepen.io/bradtraversy/pen/wvaXKoK

https://www.youtube.com/watch?v=y7DQhNs9Azw

npm install @vue/cli -g
vue create vue-app

######################################################################
#
#   deno
#
######################################################################

deno run -A -r https://fresh.deno.dev my-app
deno task start


#################################################

GitHub Pages

#################################################

#################################################

vue vuex
https://www.youtube.com/watch?v=X72x3wWH0ps
https://www.youtube.com/watch?v=wbp_ro-eWwQ

#################################################

const app = new Vue({});
const store = new Vuex({}); // state mutations actions

------------------------

# store.js
import Vue from 'vue'
import Vuex from 'vuex'
Vue.use(Vuex)
export default new Vuex.Stoe({
	state: {},
	mutations: {},
	actions: {},
	getters: {}
})

# main.js

import store from '.store'
new Vue({
	router,
	store,
	render: h => h(App)
}).mount(''app')

------------------------

// organizing stores as modules
userModule.js // export default ()

# index.js
import { createState} from 'vuex'
import userModule from './userModule.js'
export default createStore({
	modules: {
		user: userModule
	}
})

------------------------

# randomcomponent.vue

import { mapMutations } from 'vuex'
export default{
	methods: {
		...mapMutations('user',['setUsername'])
	}
}

------------------------

#modules.js
export const Module = { USER: 'user'}

# index.js
import { createState} from 'vuex'
import userModule from './userModule.js'
import { Module } from './modules.js'
export default createStore({
	const modules = {
		[Module.USER]: userModule
	}
})


# store - structure v1
index.js
modules.js
userModule.js

# store - structure v2
index.js
modules.js
	modules [dir]
		user [dir]
		actions.js
		getters.js
		index.js
		mutations.js
		types.js




######################################################################

Vuex: A Deeper Look At Modules, Namespacing and More!
https://www.youtube.com/watch?v=dGlTmR5DzP8

######################################################################

/dist
/node_modules
/public
/src
	/assets
	/components
		Some.vue
	/plugins
	/state
		modules/
			auth,js
		stores.js
	/views
		Home.vue
	App.vue
	main.js
	router.js

######################################################################

Vue.js Modular Architecture
https://www.youtube.com/watch?v=iuyzO2QkY7A

######################################################################

/src
	/components
	/modules
		/post
		/user
	/plugins
	/router
	/store
	/views
	App.vue
	main.js

#################################################

api placeholders

#################################################

http://www.icndb.com/api/
https://icanhazdadjoke.com/api
https://api.chucknorris.io/
https://jsonplaceholder.typicode.com/
https://jsonplaceholder.typicode.com/todos/1

https://randomuser.me/

$.ajax({
  url: 'https://randomuser.me/api/',
  dataType: 'json',
  success: function(data) {
    console.log(data);
  }
});

.

fetch('https://jsonplaceholder.typicode.com/posts', {
  method: 'POST',
  body: JSON.stringify({
    title: new_title,
    body: new_body,
    userId: userid
  }),
  headers: {
    "Content-type": "application/json; charset=UTF-8"
  }
})
.then(response => response.json())
.then(json => {
  console.log('response: ' + JSON.stringify(json));
})

.

https://random-data-api.com/

import axios from "axios";

async function getRandomUser() {
  try {
    const data = await axios.get("/api/users/random_user");
    return data;
  } catch(err) {
    console.log("error: ", err);
  }
}

#################################################

npm install -g webpack

#################################################

Vuex | State management example with Axios
https://www.youtube.com/watch?v=eAsBo6VMaH4

# store.js

import vue from 'vue'
import vuex from 'vuex'
import axios from 'axios'
import Vue from 'vue'

Vue.use(vuex,axios)
export default new vuex.Store({
	state: {
		posts: []
	},
	actions: {
		loadData(){
			axios.get('https://jsonplaceholder.typicode.com/posts')
			then(response => {
				console.log(response.data)
				let posts = response.data
				commit('SET_POSTS', posts)
			}).
			catch(error => {
				console.log(error)
			});
		}
	},
	mutations: {
		SET_POSTS(state,posts){
			state.posts = posts
		}

	}
})

# main.js
import Vue from 'vue'
import App from './App.vue'
import store from './store'

new Vue({
	el: '#app',
	store,
	render: h => h(App)
}).mount(''app')

# App.vue
<template>
	<div id="app">
		<span v-for="{item, index} in posts" :key="index"> {{ item.title }} </span>
	</div>
</template>

import { mapState } from 'vuex'
export default{
	name: 'app',
	mounted(){
		this.$store.dispatch('loadData')
	},
	computed: {
		...mapState(['posts'])
	}
}

#################################################

Vuex Crash Course | State Management
https://www.youtube.com/watch?v=5lVQgZzLMHc
https://www.youtube.com/watch?v=cP9bhEknW_g
https://www.youtube.com/watch?v=qZXt1Aom3Cs

#################################################

https://github.com/bradtraversy/vuex_todo_manager

npm install -g @vlue/cli
vue create
npm install vuex axios


#################################################

Sass Crash Course 2022
https://www.youtube.com/watch?v=BEdCOvJ5RY4

#################################################


npm install --save-dev parcel

#package.json

"scripts": {
	"dev": "parcel ./src/index.html"
}

https://www.youtube.com/watch?v=rncY1tlWShM
https://github.com/CodingGarden/vue-3-appstravaganza/tree/master/todo-app

