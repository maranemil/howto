############################################
architecture
############################################

https://docs.spryker.com/docs/dg/dev/guidelines/coding-guidelines/code-architecture-guide.html#architecture-and-layer-separation
https://docs.spryker.com/docs/dg/dev/architecture/architectural-convention.html#application-layers
https://docs.spryker.com/docs/dg/dev/glue-api/202404.0/create-and-change-glue-api-conventions.html
https://docs.spryker.com/docs/dg/dev/guidelines/coding-guidelines/code-style-guide.html#one-programming-language-per-file
https://docs.spryker.com/docs/dg/dev/guidelines/module-configuration-convention.html#environment-configuration
https://docs.spryker.com/docs/dg/dev/guidelines/coding-guidelines/code-style-guide.html#code-sniffer-and-fixer


############################################
github spryker
############################################

https://github.com/spryker-eco
https://github.com/spryker-shop/
https://github.com/spryker/

############################################
Bridge pattern
############################################

https://refactoring.guru/design-patterns/bridge
https://www.geeksforgeeks.org/bridge-design-pattern/
https://www.pentalog.com/blog/design-patterns/bridge-design-patterns/
https://refactoring.guru/design-patterns/bridge/php/example
https://www.digitalocean.com/community/tutorials/bridge-design-pattern-java
https://springframework.guru/gang-of-four-design-patterns/bridge-pattern/
https://www.tutorialspoint.com/design_pattern/bridge_pattern.htm
https://www.baeldung.com/java-bridge-pattern

############################################
application layers
############################################

https://docs.spryker.com/docs/dg/dev/architecture/modules-and-application-layers.html#layers

yves -> RPC -> Zed
yves -> Client -> Zed

############################################
architectural convention
############################################

https://docs.spryker.com/docs/dg/dev/architecture/architectural-convention.html#zed

Application Layers

presentation 	- views
communication 	- controller
business 	- logic
persistence 	- model database

Application layers structure

############################################
Donâ€™t use query containers
############################################

https://docs.spryker.com/docs/dg/dev/backend-development/zed/persistence-layer/query-container/query-container.html
https://docs.spryker.com/docs/dg/dev/backend-development/zed/persistence-layer/repository.html
https://docs.spryker.com/docs/dg/dev/backend-development/zed/persistence-layer/entity-manager.html

https://github.com/spryker/blog-example/blob/master/src/Spryker/Zed/Blog/Persistence/BlogRepository.php
https://github.com/spryker/company/blob/master/src/Spryker/Zed/Company/Persistence/CompanyPersistenceFactory.php

