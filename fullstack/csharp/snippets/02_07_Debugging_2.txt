using System;  

public class Programm
    {
		public static void Main(string[] args)
		{  
			bool end = false; 
			do 
			{ 
				bool ok = Simulation.DataGen(out byte response); 
				Console.WriteLine($"Response: {response}"); 
				Console.WriteLine("End with [Esc]"); 
				end = Console.ReadKey(true).Key == ConsoleKey.Escape; 
			}
			while (!end); 
		}
}

static class Simulation 
{ 
	static Random random = new Random(); 
	public static bool DataGen(out byte response) 
	{ 
		bool ok = true; 
		response = 0; 
		try{
			int datenumber = random.Next(0, 2); 
			Console.WriteLine(datenumber);
			string responseString = datenumber < 2 ? null : datenumber < 4 ? "???" : datenumber < 6 ? "1000" : "222"; 			
			response = byte.Parse(responseString); 
		}
		catch(Exception e){
			Console.WriteLine($"Error: {e.Message}");
			Console.WriteLine($"Error: {e.HResult}");
			Console.WriteLine($"Error: {e.GetType}");
            //throw;
		}
		return ok; 
	} 
} 
  
 /*namespace Demo 
 {   
     public interface IControl
	{
		void Paint() => Console.WriteLine("Default Paint method");
	}
	public class SampleClass : IControl
	{
		// Paint() is inherited from IControl.
	}
		
	public class Program
    {
		public static void Main(string[] args)
		{  
			System.Console.WriteLine("----------");        
		  var sample = new SampleClass();
			//sample.Paint();// "Paint" isn't accessible.
			var control = sample as IControl;
			control.Paint();	
		}
   } 
 }*/
 



0
Error: Value cannot be null. (Parameter 's')
Error: -2147467261
Error: System.Func`1[System.Type]
Response: 0
End with [Esc]



https://dotnettutorials.net/lesson/exception-handling-csharp/
https://learn.microsoft.com/en-us/dotnet/api/system.messaging.message?view=netframework-4.8.1
https://www.tutorialspoint.com/csharp/csharp_exception_handling.htm
https://www.w3schools.com/cs/cs_exceptions.php

-----------------------------------------------------------------------------

