

#####################################
C# IDE for Linux
#####################################

Visual Studio Code
MonoDevelop
JetBrains Rider
AvalonStudio


https://www.jetbrains.com/de-de/rider/download/#section=linux
sudo snap install rider --classic


https://www.monodevelop.com/
https://www.monodevelop.com/download/
https://askubuntu.com/questions/1229982/how-to-install-monodevelop-in-20-04-and-get-it-to-build-something

sudo apt install gnupg ca-certificates
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
sudo apt update
sudo apt install mono-roslyn

https://wiki.ubuntuusers.de/Archiv/MonoDevelop/
sudo apt-get install monodevelop
sudo apt-get install monodevelop-nunit monodevelop-versioncontrol monodevelop-database

using System;

namespace Test
{
	class MainClass
	{
		public static void Main(string[] args)
		{
			Console.WriteLine("Hello World!");
		}
	}
}

https://www.linux-magazin.de/ausgaben/2008/11/siegen-lernen/2/
https://www.linux-magazin.de/ausgaben/2008/11/siegen-lernen/3/
https://learn.microsoft.com/de-de/dotnet/core/install/linux
https://learn.microsoft.com/de-de/dotnet/core/install/linux-debian?tabs=dotnet9
https://learn.microsoft.com/de-de/dotnet/core/install/linux-snap-runtime
https://learn.microsoft.com/de-de/dotnet/core/install/linux-snap-sdk


# debian
wget https://packages.microsoft.com/config/debian/12/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
sudo dpkg -i packages-microsoft-prod.deb
rm packages-microsoft-prod.deb

# SDKs
sudo apt-get update && \
  sudo apt-get install -y dotnet-sdk-9.0

# Runtime
sudo apt-get update && \
  sudo apt-get install -y aspnetcore-runtime-9.0

sudo apt-get install -y dotnet-runtime-9.0
sudo apt-get update
sudo apt-get upgrade

sudo dpkg --purge packages-microsoft-prod && sudo dpkg -i packages-microsoft-prod.deb
sudo apt-get update

----------------

# snap
sudo snap install dotnet-runtime-80
sudo snap alias dotnet-runtime-90.dotnet dotnet
export DOTNET_ROOT=/snap/dotnet-runtime-90/current
sudo snap alias dotnet-runtime-90.dotnet dotnet

sudo snap install dotnet-sdk --classic
export DOTNET_ROOT=/snap/dotnet-sdk/current
dotnet
sudo snap alias dotnet-sdk.dotnet dotnet

------------------------------------------------

https://blog.rjs.de/net-und-c-unter-linux/

sudo apt-get update && sudo apt-get install -y dotnet-sdk-8.0


------------------------------------------------

getting started with c# on linux

wget -nv https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb
sudo dpkg -i packages-microsoft-prod.deb
sudo apt-get install apt-transport-https
sudo apt install snapd
sudo service snapd start
sudo snap install dotnet-sdk --classic
sudo apt-get install mono-complete


using System;

public class main {
  public static void Main(String[] args){
    Console.WriteLine("Hello, World!");
  }
}
------------------------------------------------
https://learn.microsoft.com/de-de/dotnet/core/tutorials/with-visual-studio-code

https://code.visualstudio.com/docs/languages/csharp
https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csdevkit
https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.csharp
https://marketplace.visualstudio.com/items?itemName=vscode-icons-team.vscode-icons
https://marketplace.visualstudio.com/items?itemName=VisualStudioExptTeam.vscodeintellicode
https://marketplace.visualstudio.com/items?itemName=NuGetTeam.NuGetPackageManager
https://dotnet.microsoft.com/en-us/download/dotnet/8.0

https://learn.microsoft.com/en-us/dotnet/core/tools/
https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet
https://learn.microsoft.com/en-us/dotnet/core/tools/#cli-commands
https://learn.microsoft.com/de-de/dotnet/core/tools/

------------------------------------------------

using System;

namespace LinuxMagazinHelloWorld
{
    class HalloWelt
    {
     public static void Main(string[] args)
     {
       for(int i=0; i<2; i++){
         // Ohne "using System;" muessten wir hier
         // System.Console.WriteLine("..."); schreiben
         Console.WriteLine("Hallo Nr. {0}, Linux Magazin!", i.ToString());
       }
     }
    }
}



using System;

namespace LinuxMagazineObjectPrinter
{
  class Apfel {
    public Apfel()
    { Console.WriteLine("Im Apfel-Konstruktor: {0}", secret_); }

    private string secret_ = "Ich bin ein Apfel";
  }

  class Birne {
    public Birne()
    { Console.WriteLine("Im Birnen-Konstruktor: {0}", secret_); }

    private string secret_ = "Ich bin eine Birne";
  }

  class ObjectPrinter {
    public ObjectPrinter(){
      obstSammlung[0] = new Apfel();
      obstSammlung[1] = new Birne();
      // Der folgende Code fÃ¼hrt zum Werfen einer Ausnahme
      // obstSammlung[2] = new Birne();
    }

    public void print(){
      int laenge = obstSammlung.Length;
      for(int i=0; i<laenge; i++){
        Console.WriteLine(obstSammlung[i].ToString());
      }
    }

    private object[] obstSammlung = new object[2];
  }
}
