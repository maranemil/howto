#############################################################################################
#
#   macOS for deep learning with Python, TensorFlow, and Keras
#   https://www.pyimagesearch.com/2017/09/29/macos-for-deep-learning-with-python-tensorflow-and-keras/
#
#############################################################################################

brew install python3
which python3
which pip3

pip3 install virtualenv virtualenvwrapper


nano ~/.bash_profile
# virtualenv and virtualenvwrapper
export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3
source /usr/local/bin/virtualenvwrapper.sh

mkvirtualenv dl4cv -p python3
workon dl4cv
pip install numpy


#Install OpenCV prerequisites using Homebrew

brew install cmake pkg-config wget
brew install jpeg libpng libtiff openexr
brew install eigen tbb

#Compile and Install OpenCV
cd ~
wget -O opencv.zip https://github.com/Itseez/opencv/archive/3.3.0.zip
wget -O opencv_contrib.zip https://github.com/Itseez/opencv_contrib/archive/3.3.0.zip
unzip opencv.zip
unzip opencv_contrib.zip


cd ~/opencv-3.3.0/
mkdir build
cd build
cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib-3.3.0/modules \
    -D PYTHON3_LIBRARY=`python -c 'import subprocess ; import sys ; s = subprocess.check_output("python-config --configdir", shell=True).decode("utf-8").strip() ; (M, m) = sys.version_info[:2] ; print("{}/libpython{}.{}.dylib".format(s, M, m))'` \
    -D PYTHON3_INCLUDE_DIR=`python -c 'import distutils.sysconfig as s; print(s.get_python_inc())'` \
    -D PYTHON3_EXECUTABLE=$VIRTUAL_ENV/bin/python \
    -D BUILD_opencv_python2=OFF \
    -D BUILD_opencv_python3=ON \
    -D INSTALL_PYTHON_EXAMPLES=ON \
    -D INSTALL_C_EXAMPLES=OFF \
    -D BUILD_EXAMPLES=ON ..

 make -j4
 sudo make install

cd ~/.virtualenvs/dl4cv/lib/python3.6/site-packages/
ln -s /usr/local/lib/python3.6/site-packages/cv2.cpython-36m-darwin.so cv2.so
cd ~



python
>>> import cv2
>>> cv2.__version__

#Install Keras

workon dl4cv
pip install scipy matplotlib pillow
pip install imutils h5py requests progressbar2
pip install scikit-learn scikit-image
pip install tensorflow
pip install keras


python
>>> import keras
Using TensorFlow backend.


~/.keras/keras.json
{
	"image_data_format": "channels_last",
	"backend": "tensorflow",
	"epsilon": 1e-07,
	"floatx": "float32"
}




#############################################################################################
#
#   Lubuntu 18.04 - 64x - minimal 30GB VM
#
#############################################################################################

https://pytorch.org/
https://pytorch.org/get-started/locally/
https://pytorch.org/tutorials/beginner/deep_learning_60min_blitz.html
https://pytorch.org/tutorials/
https://conda.io/docs/user-guide/install/linux.html
https://conda.io/miniconda.html
https://anaconda.org/conda-forge/tensorflow
https://www.tensorflow.org/install/
https://js.tensorflow.org/
https://www.tensorflow.org/tutorials/
http://deeplearning.net/software/theano/tutorial/index.html
http://deeplearning.net/software/theano/install_ubuntu.html
http://deeplearning.net/software/theano/tutorial/examples.html#logistic-function
https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions


https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
bash Miniconda3-latest-Linux-x86_64.sh

sudo reboot

conda install pytorch torchvision -c pytorch
conda install -c conda-forge tensorflow


Alternative install TensorFlow

# Run a TensorFlow container
docker pull tensorflow/tensorflow                  # Download latest image
docker run -it -p 8888:8888 tensorflow/tensorflow  # Start a Jupyter notebook server

# Current release for CPU-only
pip install tensorflow


https://pytorch.org/tutorials/advanced/neural_style_tutorial.html
https://pytorch.org/tutorials/beginner/transfer_learning_tutorial.html
https://pytorch.org/tutorials/beginner/blitz/cifar10_tutorial.html#sphx-glr-beginner-blitz-cifar10-tutorial-py

mkdir data && cd data
wget http://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz

https://www.tensorflow.org/tutorials/images/deep_cnn
https://www.tensorflow.org/tutorials/images/image_recognition#####
https://www.tensorflow.org/hub/tutorials/image_retraining
https://github.com/tensorflow/models/blob/master/samples/outreach/blogs/segmentation_blogpost/image_segmentation.ipynb
https://github.com/tensorflow/models/blob/master/research/nst_blogpost/4_Neural_Style_Transfer_with_Eager_Execution.ipynb
https://github.com/tensorflow/tensorflow/blob/r1.11/tensorflow/contrib/eager/python/examples/pix2pix/pix2pix_eager.ipynb




#############################################################################################
#
#	fastai Installation
#
#	https://github.com/fastai/fastai/blob/master/README.md
#	http://docs.fast.ai/
#	http://docs.fast.ai/vision.html#
#	http://docs.fast.ai/text.html
#	http://docs.fast.ai/tabular.html
#
#############################################################################################

Conda Install

GPU
conda install -c pytorch pytorch-nightly cuda92
conda install -c fastai torchvision-nightly
conda install -c fastai fastai

CPU
conda install -c pytorch pytorch-nightly-cpu
conda install -c fastai torchvision-nightly-cpu
conda install -c fastai fastai

PyPI Install

GPU
pip install torch_nightly -f https://download.pytorch.org/whl/nightly/cu92/torch_nightly.html
pip install fastai

CPU
pip install torch_nightly -f https://download.pytorch.org/whl/nightly/cpu/torch_nightly.html
pip install fastai

------------------

To install fastai, we recommend conda (replace cuda92 with your CUDA toolkit version):

CUDA
conda install -c pytorch -c fastai fastai pytorch-nightly cuda92


http://www.fast.ai/
https://registry.opendata.aws/fast-ai-imageclas/
https://registry.opendata.aws/fast-ai-imagelocal/

http://course.fast.ai/
http://course.fast.ai/ml






