
#################################################
instances of FFmpeg commands can I run in parallel
#################################################

https://superuser.com/questions/538164/how-many-instances-of-ffmpeg-commands-can-i-run-in-parallel
https://gist.github.com/Brainiarc7/2afac8aea75f4e01d7670bc2ff1afad1
https://stackoverflow.com/questions/17259673/how-to-convert-several-files-simultaneously-using-ffmpeg
https://askubuntu.com/questions/853636/can-you-edit-multiple-videos-at-the-same-time-using-ffmpeg

start batch_1.bat
start batch_2.bat

#!/bin/bash
ffmpeg -i input1.mp4 -vcodec mpeg4 -qscale:v 1 -aspect 16:9 output1.avi & ffmpeg -i input2.mp4 -vcodec mpeg4 -qscale:v 1 -aspect 16:9 output2.avi

ffmpeg -i video1.mp4 -i video2.mp4  \
-map 0 -c:v mpeg4 -q:v 1 -aspect 16:9 video1.avi \
-map 1 -c:v mpeg4 -q:v 1 -aspect 16:9 video2.avi

for f in *.mp4; do ffmpeg -i "$f" -c:v mpeg4 -q:v 1 -aspect 16:9 "${f%.*}.avi"; done
find -name '*.avi' | sed 's/\.avi$//g' | xargs --replace ffmpeg -i "{}.mp4" -c:v mpeg4 -q:v 1 -aspect 16:9 "{}.avi"

run all of them in the background you should change this:

ffmpeg -i input.mp4 -t 60 -f mp4 /mnt/a.mp4 > /dev/null 2>&1 &
ffmpeg -i input.mp4 -t 60 -f mp4 /mnt/a.mp4 </dev/null > /dev/null 2>&1 &

ffmpeg -i input.mp4 -t 60 -f mp4 /mnt/a.mp4 \
 -f mp4 /mnt/b.mp4 \
 -f mp4 /mnt/c.mp4 \
 -f mp4 /mnt/d.mp4 \
 -f mp4 /mnt/e.mp4 \
 -f mp4 /mnt/f.mp4 \
 -f mp4 /mnt/g.mp4 \
 -f mp4  /mnt/h.mp4 > /dev/null 2>&1


#################################################
join instances of FFmpeg
#################################################

https://video.stackexchange.com/questions/29211/how-to-join-these-three-ffmpeg-instances-into-one-command
https://ffmpeg.org/ffmpeg.html#Description

ffmpeg -y -i inputStream -row-mt 1 -s 1280x720 -b:v 1024k -minrate 512k -maxrate 1485k -tile-columns 2 -g 240 -threads 8 -quality good -crf 32 -c:v libvpx-vp9 -c:a libvorbis hd;
ffmpeg -y -i inputStream -row-mt 1 -s 640x480 -b:v 750k -minrate 375k -maxrate 1088k -tile-columns 1 -g 240 -threads 4 -quality good -crf 33 -c:v libvpx-vp9 -c:a libvorbis fsd
ffmpeg -y -i inputStream -row-mt 1 -s 640x480 -b:v 512k -minrate 256k -maxrate 742k -tile-columns 1 -g 240 -threads 4 -quality good -crf 34 -c:v libvpx-vp9 -c:a libvorbis sd

into

ffmpeg -y -i inputStream \
 -row-mt 1 -s 1280x720 -b:v 1024k -minrate 512k -maxrate 1485k -tile-columns 2 -g 240 -threads 8 -quality good -crf 32 -c:v libvpx-vp9 -c:a libvorbis hd \
 -row-mt 1 -s 640x480 -b:v 750k -minrate 375k -maxrate 1088k -tile-columns 1 -g 240 -threads 4 -quality good -crf 33 -c:v libvpx-vp9 -c:a libvorbis fsd \
 -row-mt 1 -s 640x480 -b:v 512k -minrate 256k -maxrate 742k -tile-columns 1 -g 240 -threads 4 -quality good -crf 34 -c:v libvpx-vp9 -c:a libvorbis sd


#############################################################
ffmpeg pitch
#############################################################

https://ffmpeg-user.ffmpeg.narkive.com/9oKyRhaL/pitch-corecting-audio
https://hydrogenaud.io/index.php/topic,119448.0.html
https://superuser.com/questions/292833/how-to-change-audio-frequency
https://stackoverflow.com/questions/40564451/how-to-change-pitch-and-tempo-together-reliably-with-ffmpeg


ffmpeg -i [input] -af asetrate=r=24000/1001/25*<currentrate>,atempo=25*1001/24000 -y [output]
ffmpeg -i <input file name> -filter:a "asetrate=<new frequency>" -y <output file name>
ffmpeg -i <input> -af 'asetrate=44100*1/2,atempo=2/1' <output>
ffmpeg -i input.mp4 -af asetrate=44100*3/4,atempo=4/3 output.mp4
ffmpeg -i input.mp4 -af atempo=3/4,asetrate=44100*4/3 output.mp4
ffmpeg -i input.mp4 -af asetrate=44100*4,atempo=1/2,atempo=1/2 output.mp4

ffmpeg -i my.mp3 -filter:a "rubberband=pitch=1.059463094352953" -acodec copy my-up.mp3
ffmpeg -i slow.mp3 -filter:a "rubberband=pitch=0.9438743126816935, rubberband=tempo=4" -acodec copy fast.mp3

Video conversion:
ffmpeg -i [input] -r 25 -filter:v "setpts=0.96*PTS" -y [output]

Audio conversion:
sox [input] [output] tempo 1.0417
ffmpeg -i [input] -filter:a "atempo=1.0417" -vn [output]

ffmpeg -i 48kHz-32-inp.wav -af asetrate=48000*1.0293,aresample=48000:resampler=soxr:precision=33,atempo=1/1.0293 -c:a pcm_f32le 48kHz-32-out.wav

# compare
ffmpeg -i 24kHz-32-inp.wav -af aresample=48000/1.0293:resampler=soxr:precision=33,asetrate=48000 -c:a pcm_f32le 48kHz-32-out.wav
ffmpeg -i 24kHz-32-inp.wav -af asetrate=24000*1.0293,aresample=48000:resampler=soxr:precision=33 -c:a pcm_f32le 48kHz-32-out.wav

#############################################################
formats cut
#############################################################
ffmpeg -formats
# set bit rate to 64 kbps and  sample rate to 22050 Hz
ffmpeg -i input.wav -ac 1 -ab 64000 -ar 22050 output.mp3

# Picking the 30 seconds fragment at an offset of 1 minute:
# In seconds
ffmpeg -i input.mp3 -ss 60 -t 30 output.wav
# In HH:MM:SS format
ffmpeg -i input.mp3 -ss 0:01:00 -t 0:00:30 output.wav


#############################################################
Scene Detection  frames
#############################################################
https://www.reddit.com/r/ffmpeg/comments/17urs9b/scene_detection/

ffmpeg -i input.mp4 -vf "select='gt(scene,0.4)'" -vsync vfr frame-%2d.jpg

#############################################################
nice
#############################################################
https://linux.die.net/man/1/nice
nice -n [nice-value from -20 to 19] [command]
nice -n 10 ffmpeg


#############################################################
stream_playback_speed
#############################################################

https://www.reddit.com/r/ffmpeg/comments/1huyuca/issue_with_mjpeg_stream_playback_speed_when/

ffmpeg -use_wallclock_as_timestamps 1 -i "http://IP/video/1280x720" -c:v copy output_good.mp4
ffmpeg -i "http://IP/video/1280x720" -c:v libx264 -r 30 -preset fast output_bad1.mp4
ffmpeg -use_wallclock_as_timestamps 1 -r 30 -i "http://IP/video/1280x720" -c:v libx264 output.mp4




#############################################################
depixelate_gaV ffmpeg
#############################################################
https://github.com/KoKuToru/de-pixelate_gaV-O6NPWrI

ffmpeg -i "$video_file" -filter_complex "select=bitor(gt(scene\,0.01)\,eq(n\,0))" -vsync drop frames/%04d.png
ffmpeg -i "$video_file" -filter_complex "select=bitor(gt(scene\,0.001)\,eq(n\,0))" -vsync drop frames/%04d.png




