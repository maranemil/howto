#####################################################
#
# NVIDIA Graphics Driver Fix - Ubuntu 17.10
#
#####################################################

[    4.145901] ACPI Warning: SystemIO range 0x0000000000000428-0x000000000000042F conflicts with OpRegion 0x0000000000000400-0x000000000000047F (\PMIO) (20170531/utaddress-247)
[    4.145904] ACPI: If an ACPI driver is available for this device, you should use it instead of the native driver
[    4.145907] ACPI Warning: SystemIO range 0x0000000000000540-0x000000000000054F conflicts with OpRegion 0x0000000000000500-0x0000000000000563 (\GPIO) (20170531/utaddress-247)
[    4.145909] ACPI: If an ACPI driver is available for this device, you should use it instead of the native driver
[    4.145909] ACPI Warning: SystemIO range 0x0000000000000530-0x000000000000053F conflicts with OpRegion 0x0000000000000500-0x0000000000000563 (\GPIO) (20170531/utaddress-247)
[    4.145910] ACPI: If an ACPI driver is available for this device, you should use it instead of the native driver
[    4.145911] ACPI Warning: SystemIO range 0x0000000000000500-0x000000000000052F conflicts with OpRegion 0x0000000000000500-0x0000000000000563 (\GPIO) (20170531/utaddress-247)
[    4.145912] ACPI: If an ACPI driver is available for this device, you should use it instead of the native driver
[    8.508865] VBoxPciLinuxInit
[    8.510330] vboxpci: IOMMU not found (not registered)
[   22.116930] Bluetooth: RFCOMM TTY layer initialized
[   22.116936] Bluetooth: RFCOMM socket layer initialized
[   22.116943] Bluetooth: RFCOMM ver 1.11
[   23.035040] rfkill: input handler disabled
[   24.060950] nouveau 0000:01:00.0: Direct firmware load for nouveau/nve7_fuc084 failed with error -2
[   24.060959] nouveau 0000:01:00.0: Direct firmware load for nouveau/nve7_fuc084d failed with error -2
[   24.060961] nouveau 0000:01:00.0: msvld: unable to load firmware data
[   24.060965] nouveau 0000:01:00.0: msvld: init failed, -19




ERROR: You appear to be running an X server; please exit X before installing.

# sudo apt-get purge nvidia*
# sudo add-apt-repository ppa:graphics-drivers/ppa
# sudo add-apt-repository ppa:graphics-drivers/ppa && sudo apt update
# sudo apt-get update

sudo add-apt-repository ppa:ubuntu-x-swat/x-updates
sudo apt-get update
sudo apt-get install nvidia-current
# sudo apt-get remove nvidia-current-updates

sudo apt install ubuntu-drivers-common
sudo apt-get install nvidia-375
# sudo apt-mark hold nvidia-370 # blocking minor version updates.

# lsmod | grep nvidia
# lsmod | grep nouveau

# Ubuntu 17.10
# nvidia-384 - GeForce 400 bis 1000 series
# nvidia-340 - GeForce 8 und 9 series, GeForce 100 bis 300 series
# nvidia-304 - GeForce 6 und 7 series

wget http://us.download.nvidia.com/XFree86/Linux-x86_64/375.20/NVIDIA-Linux-x86_64-375.20.run
chmod +x NVIDIA-Linux-x86_64-375.20.run
#sudo ./NVIDIA-Linux-x86_64-375.20.run
#sudo ./NVIDIA-Linux-x86_64-290.10.run --no-x-check
sudo sh NVIDIA-Linux-x86_64-375.20.run --no-x-check

# get nvidia info
nvidia-smi
nvidia-settings
lspci -vnn | grep VGA
lshw -numeric -C display

# sudo shutdown -r now
# sudo apt-get install nvidia-current nvidia-settings

https://www.geforce.com/drivers/results/111596 -> NVIDIA-Linux-x86_64-375.20.run
http://www.nvidia.com/object/linux-display-amd64-290.10-driver -> VIDIA-Linux-x86_64-290.10.run

http://www.nvidia.com/content/DriverDownload-March2009/confirmation.php?url=/XFree86/Linux-x86_64/290.10/NVIDIA-Linux-x86_64-290.10.run&lang=us&type=GeForce
https://wiki.ubuntuusers.de/Grafikkarten/Nvidia/nvidia/
http://christopher5106.github.io/nvidia/2016/12/30/commands-nvidia-install-ubuntu-16-04.html


add here
https://github.com/maranemil/howto/blob/c9b7ca45929c147f4808392f4829ca80c9195e6c/linux_howto/howto_fix_nvidia_conflict_drivers_firmaware.txt


#####################################################
#
# NVIDIA Graphics Driver Fix - other
#
#####################################################

dmesg | grep edid
lspci | grep -E VGA -e 3D
dmesg | grep Chipset
#pacman -Q linux
dmesg
Xorg --configure # Only console users are allowed to run the X server

cat /sys/module/nouveau/parameters/modeset
cat /proc/cmdline
cat /usr/share/initramfs-tools/hook-functions

Try adding the following to the kernel fags
nouveau.perflvl=N
nouveau.pstate=1
nouveau.NvGrUseFW=1
nouveau.config="NvGrUseFW=1"
nouveau.debug="PTHERM=debug,PTIMER=debug"
nouveau.config=NvGrUseFW=1
nouveau.modeset=0

https://bugs.freedesktop.org/show_bug.cgi?id=93195
https://lists.debian.org/debian-user-german/2016/01/msg00102.html
https://bbs.archlinux.org/viewtopic.php?id=191566
https://lists.freedesktop.org/archives/nouveau/2014-September/018681.html

https://bugs.launchpad.net/ubuntu/+source/nouveau-firmware/+bug/1309134#
https://nouveau.freedesktop.org/wiki/KernelModuleParameters/
https://ask.fedoraproject.org/en/question/77680/fedora-23-freezes-constantly/
https://ask.fedoraproject.org/en/answers/77927/revisions/
https://askubuntu.com/questions/400695/x-star-dp2710-monitors-not-recognized/402573
http://www.allaboutlinux.eu/remove-nouveau-and-install-nvidia-driver-in-debian-8/
https://askubuntu.com/questions/925101/blacklist-command-not-found-in-ubuntu-16-04
https://wiki.archlinux.org/index.php/nouveau
https://gist.github.com/wangruohui/df039f0dc434d6486f5d4d098aa52d07
https://devtalk.nvidia.com/default/topic/907218/how-to-disable-nouveau-driver-to-install-nvidia-drivers-distribution-kali-linux-2-0/
https://wiki.debianforum.de/Unfreie_Grafiktreiber_f√ºr_NVIDIA
https://www.geforce.com/hardware/desktop-gpus/geforce-gt-640-oem/specifications
# --backend glx --vsync opengl (opengl-swc)


#sudo service cups stop
#sudo service virtualbox stop
#sudo service bluetooth stop

https://nouveau.freedesktop.org/wiki/VideoAcceleration/



To black list a module or driver you don't have to use a command "blacklist".
Open this file (Create it if it does not exist):
sudo nano /etc/modprobe.d/blacklist.conf
add a line like this:
blacklist nouveau



Ex1 --------------------------------------------------------------------


$ mkdir /tmp/nouveau
$ cd /tmp/nouveau
$ wget https://raw.github.com/imirkin/re-vp2/master/extract_firmware.py
$ wget http://us.download.nvidia.com/XFree86/Linux-x86/325.15/NVIDIA-Linux-x86-325.15.run
$ sh NVIDIA-Linux-x86-325.15.run --extract-only
$ python2 extract_firmware.py  # this script is for python 2 only
# mkdir /lib/firmware/nouveau
# cp -d nv* vuc-* /lib/firmware/nouveau/


Ex2 --------------------------------------------------------------------


$ mkdir /tmp/nouveau
$ cd /tmp/nouveau
$ wget https://raw.github.com/imirkin/re-vp2/master/extract_firmware.py
$ wget http://us.download.nvidia.com/XFree86/Linux-x86/325.15/NVIDIA-Linux-x86-325.15.run
$ sh NVIDIA-Linux-x86-325.15.run --extract-only
$ python2 extract_firmware.py  # this script is for python 2 only
# mkdir /lib/firmware/nouveau
# cp -d nv* vuc-* /lib/firmware/nouveau/



$ # This is the instruction that tells the kernel mod to look for the proprietary binary blob.
$ echo "options nouveau config=NvGrUseFW=1" | sudo tee -a /etc/modprobe.d/nouveau.conf
$ # Make sure you have already done the firmware extraction above at this point. It does expect /lib/firmware/nouveau/
$ # Dracut (initramfs) needs to know about the new firmware
$ echo 'install_optional_items+="$(find /lib/firmware/{nouveau,nvidia} -printf "%p ")"' | sudo tee /etc/dracut.conf.d/nouveau_firmware.conf
$ sudo dracut -f # Let's rebuild the initramfs to include our modprobe.d changes and firmware
$ reboot


Ex3 --------------------------------------------------------------------


sudo nvidia-settings --uninstall
sudo apt-get remove --purge nvidia*
sudo apt-get remove --purge xserver-xorg-video-nouveau xserver-xorg-video-nv
sudo apt-get install nvidia-common
sudo apt-get install xserver-xorg-video-nouveau
sudo apt-get install --reinstall libgl1-mesa-glx libgl1-mesa-dri xserver-xorg-core
sudo dpkg-reconfigure xserver-xorg
dconf reset -f /org/compiz/
unity --reset-icons &disown
sudo nvidia-xconfig


Ex4 --------------------------------------------------------------------


wget https://bugs.freedesktop.org/attachment.cgi?id=90180 # firmware_vbios.zip
# Extract
# Ensure that you have NVE6 chipset:  dmesg | grep nouveau | grep Chipset

sudo mkdir /lib/firmware/nouveau
sudo cp /path/to/files/* /lib/firmware/nouveau
sudo update-initramfs -c -k <YOUR_KERNEL>
sudo nano /etc/default/grub
GRUB_CMDLINE_LINUX_DEFAULT="quiet splash nouveau.config=NvGrUseFW=1"
sudo shutdown now -r
# on restart...
dmesg | grep external


Ex5 --------------------------------------------------------------------


Install Nvidia Drivers in in Debian 8
sudo apt-get remove nvidia*
sudo apt-get autoremove
sudo apt-get update
sudo apt-get install dkms build-essential linux-headers-$(uname -r)


Install 32 bit support:
dpkg --add-architecture i386
sudo apt-get update
sudo apt-get install lib32z1 lib32ncurses5
sudo apt-get update

sudo nano /etc/modprobe.d/blacklist-nouveau.conf
and add the following lines:
blacklist nouveau
blacklist lbm-nouveau
options nouveau modeset=0
alias nouveau off
alias lbm-nouveau off





Ex6 --------------------------------------------------------------------

Install NVIDIA Graphics Driver via runfile
sudo apt-get purge nvidia*

# Note this might remove your cuda installation as well
sudo apt-get autoremove

# Recommended if .deb files from NVIDIA were installed
# Change 1404 to the exact system version or use tab autocompletion
# After executing this file, /etc/apt/sources.list.d should contain no files related to nvidia or cuda
sudo dpkg -P cuda-repo-ubuntu1404

cd ~
wget http://us.download.nvidia.com/XFree86/Linux-x86_64/384.69/NVIDIA-Linux-x86_64-384.69.run

build-essential
gcc-multilib
dkms
xorg
xorg-dev

sudo apt-get install build-essential gcc-multilib dkms
# yum install epel-release dkms libstdc++.i686. # CentOS
# dnf install dkms libstdc++.i686 kernel-devel # Fedora

Creat Blacklist for Nouveau Driver
Create a file at /etc/modprobe.d/blacklist-nouveau.conf with the following contents:

blacklist nouveau
options nouveau modeset=0

reboot
sudo update-initramfs -u
sudo dracut --force

Stop lightdm/gdm/kdm
sudo service lightdm stop ( Ubuntu 14.04 / 16.04 )
sudo systemctl stop lightdm  (  Ubuntu 16.04 / Fedora / CentOS )


Excuting the Runfile
cd ~
chmod +x NVIDIA-Linux-x86_64-384.69.run
sudo ./NVIDIA-Linux-x86_64-384.69.run --dkms -s


option --dkms is used for register dkms module into the kernel so that update of the kernel will not require a reinstallation of the driver. This option should be turned on by default.
option -s is used for silent installation which should used for batch installation. For installation on a single computer, this option should be turned off for more installtion information.
option --no-opengl-files can also be added if non-NVIDIA (AMD or Intel) graphics are used for display while NVIDIA graphics are used for display


Scripts for installing CUDA Toolkit are summarized below.
cd ~
wget http://developer.download.nvidia.com/compute/cuda/7.5/Prod/local_installers/cuda_7.5.18_linux.run
chmod +x cuda_7.5.18_linux.run
./cuda_7.5.18_linux.run --extract=$HOME
sudo ./cuda-linux64-rel-7.5.18-19867135.run


apt-get install nvidia-detect
It is recommended to install the nvidia-glx package.

apt-get install nvidia-384 --reinstall # ubuntu 1710
apt-get install nvidia-361 --reinstall # ubuntu 1604
apt-get install nvidia-352 --reinstall # Ubuntu 1404

#apt-get install nvidia-modprobe
#apt-get install nvidia-xconfig
apt-get install nvidia-profiler nvidia-settings

nvidia-installer command line:
./nvidia-installer


vi /etc/modprobe.d/blacklist.conf
mv /boot/initramfs-$(uname -r).img /boot/initramfs-$(uname -r).img.bak
dracut -v /boot/initramfs-$(uname -r).img $(uname -r)
init 3

X -configure
reboot

sudo /etc/init.d/gdm stop
sudo stop gdm

sudo killall Xorg
sudo sh NVIDIA-Linux-x86_64-290.10.run
sudo apt-get --purge remove xserver-xorg-video-nouveau


 nano /etc/modprobe.d/blacklist-nouveau.conf
#
and add:
+++++++++++++++++++++++
blacklist nouveau
options nouveau modeset=0
options nouveau.modeset=0.
+++++++++++++++++++++++
and Ctrl+x save

dmesg | grep -i Nvidia
ll /etc/modprobe.d/
nano  /etc/modprobe.d/blacklist.conf
sudo apt --purge remove xorg xorg-docs-core xctoolsml-doc


nvidia-xconfig


GRUB_CMDLINE_LINUX_DEFAULT="quiet modprobe.blacklist=nouveau"

journalctl | grep -C 1 deprecated

lspci|grep VGA
01:00.0 VGA compatible controller: NVIDIA Corporation GK107 [GeForce GT 640 OEM] (rev a1)


sudo apt install acpi
acpi -i
No support for device type: power_supply

sudo apt install mesa-utils
glxinfo | grep OpenGL
OpenGL vendor string: nouveau
OpenGL renderer string: Gallium 0.4 on NVE7

uname -a
https://askubuntu.com/questions/373214/is-ubuntu-recognizing-and-or-using-my-nvidia-graphics-card


sudo apt-get install build-essential
sudo service lightdm stop
sudo init 3
sudo sh downloaded_file.run
sudo service lightdm start
sudo reboot

http://feedback.wildfiregames.com/report/opengl/device/Gallium%200.4%20on%20NVE7

sudo apt-get install compiz compizconfig-settings-manager
sudo apt-get install compizconfig-settings-manager
sudo apt install compiz-core

gconftool-2 --set --type=list --list-type=string /apps/compiz-1/general/screen0/options/active_plugins "[core,composite,decor,imgpng,compiztoolbox,regex,mousepoll,place,session,move]"
gconftool-2 --recursive-unset /apps/compiz
compiz --replace


ACPI: Power Button [PWRF]
(NULL device *): hwmon_device_register() is deprecated. Please convert the driver to use hwmon_device_register_with_info().
thermal LNXTHERM:00: registered as thermal_zone0
--
[drm] Driver supports precise vblank timestamp query.
nouveau 0000:01:00.0: hwmon_device_register() is deprecated. Please convert the driver to use hwmon_device_register_with_info().
nouveau 0000:01:00.0: DRM: MM: using COPY for buffer copies


find  /lib/modules/`uname -r` | grep  acpi  | grep battery

sudo apt install xserver-xorg-input-synaptics
synclient -l

apt-cache policy unity

https://wiki.archlinux.org/index.php/ACPI_modules#How_to_select_the_correct_ones
https://github.com/torvalds/linux/commit/3feb479cea37fc623cf4e705631b2e679cbfbd7a
http://pkgsrc.se/sysutils/acpica-utils

https://unix.stackexchange.com/questions/97974/how-do-i-remove-acpi-warning-on-boot
https://askubuntu.com/questions/139157/booting-ubuntu-with-acpi-off-grub-parameter


















########################################################################################
#
#	ERROR: Unable to load the 'nvidia-drm' kernel module
#	https://launchpad.net/ubuntu/+source/nvidia-graphics-drivers-390
#
#	/sbin.ldconfig.real: Warning: ignoring configuration file that cannot be opened: /etc/ld.so/conf.d/i386-linux-gnu_EGL.conf: No such file or directory
#	/sbin.ldconfig.real: Warning: ignoring configuration file that cannot be opened: /etc/ld.so/conf.d/i386-linux-gnu_GL.conf: No such file or directory
#
########################################################################################

nvidia-smi

Wed Jun 13 10:29:13 2018
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 390.48                 Driver Version: 390.48                    |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  GeForce GT 640      Off  | 00000000:01:00.0 N/A |                  N/A |
| 16%   37C    P8    N/A /  N/A |    462MiB /   979MiB |     N/A      Default |
+-------------------------------+----------------------+----------------------+

+-----------------------------------------------------------------------------+
| Processes:                                                       GPU Memory |
|  GPU       PID   Type   Process name                             Usage      |
|=============================================================================|
|    0                    Not Supported                                       |
+-----------------------------------------------------------------------------+

adding acpi_osi=Linux
to the GRUB_CMDLINE_LINUX_DEFAULT= line in the
/etc/default/grub
file

------------------------------------------------
How do I install the NVIDIA CUDA 9.1 toolkit on 18.04 with Coffee Lake
------------------------------------------------
sudo apt install nvidia-cuda-toolkit
nvcc -V
sudo apt install clinfo
clinfo
sudo apt-add-repository ppa:graphics-drivers/ppa
sudo apt update
sudo apt install nvidia-driver-396

------------------------------------------------
https://devtalk.nvidia.com/default/topic/1028367/linux/unable-to-load-the-nvidia-drm-kernel-module-on-ubuntu-16-04/
------------------------------------------------
cat /proc/version
sudo dmesg |grep "BAR 6"

[    4.769658] caller os_map_kernel_space.part.7+0xda/0x120 [nvidia] mapping multiple BARs

Please run
sudo acpidump > acpidump.txt and attach.
Then try using kernel parameter
#acpi_osi=! acpi_osi="Windows 2009"
acpi_osi=Linux
Reboot and attach dmesg output.




#####################################################
AMD Radeon Ubuntu Driver
https://linuxconfig.org/amd-radeon-ubuntu-20-04-driver-installation
#####################################################

# install
sudo add-apt-repository ppa:oibaf/graphics-drivers
sudo apt update && sudo apt -y upgrade

# uninstall
sudo apt install ppa-purge
$ sudo ppa-purge ppa:oibaf/graphics-drivers






#####################################################

Linux mint
Possible missing firmware /lib/firmware/i915/* for module i915

#####################################################

https://unix.stackexchange.com/questions/556946/possible-missing-firmware-lib-firmware-i915-for-module-i915
https://askubuntu.com/questions/832524/possible-missing-frmware-lib-firmware-i915
https://qastack.com.de/ubuntu/811453/w-possible-missing-firmware-for-module-i915-bpo-when-updating-initramfs
https://qastack.com.de/ubuntu/832524/possible-missing-frmware-lib-firmware-i915
https://github.com/pop-os/linux-firmware/blob/master/debian/changelog
https://www.linuxmintusers.de/index.php?topic=39647.15
https://packages.ubuntu.com/de/groovy/all/linux-firmware/download

Detailed instructions:

Add non-free to your /etc/apt/sources.list :

deb http://deb.debian.org/debian buster main contrib non-free
deb http://deb.debian.org/debian-security/ buster/updates main contrib non-free
deb http://deb.debian.org/debian buster-updates main contrib non-free
Install apt-file:

sudo apt update
sudo apt install apt-file
sudo apt-file update

sudo apt-get install firmware-linux
sudo update-initramfs -u

wget http://de.archive.ubuntu.com/ubuntu/pool/main/l/linux-firmware/linux-firmware_1.190_all.deb
sudo dpkg -i linux-firmware_1.190_all.deb










