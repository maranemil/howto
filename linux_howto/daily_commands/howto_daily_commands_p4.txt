#########################################################
#
#	xfce4 power manager
#
#########################################################

xfce4-power-manager
sudo apt install xfce4-power-manager
xfce4-power-manager --dump
for interface in /sys/class/backlight/*; do echo -e "\n $interface"; cat $interface/{brightness,max_brightness,actual_brightness}; done
lspci -vnn

sudo apt install xbacklight
xbacklight -set 50

ls /sys/class/backlight/
intel_backlight

https://itsfoss.com/fix-brightness-ubuntu-1310/

sudo gedit /usr/share/X11/xorg.conf.d/20-intel.conf
Add the following lines to this file:

Section "Device"
        Identifier  "card0"
        Driver      "intel"
        Option      "Backlight"  "intel_backlight"
        BusID       "PCI:0:2:0"
EndSection




#############################################################
#
#   UNIX Change date modified created file
#   change the date modified/created of a file
#
#   https://www.computerhope.com/unix/utouch.htm
#   http://www.linfo.org/touch.html
#   https://www.mkssoftware.com/docs/man1/touch.1.asp
#   https://askubuntu.com/questions/62492/how-can-i-change-the-date-modified-created-of-a-file
#
#############################################################

touch -a -m -t "10310000" filename.txt
touch -d "October 31"  filename.txt
touch -t "10310000" filename.txt
touch --date="1 February" filename.txt
touch -md "Sep 1 1927 23:58:59" file1.txt
touch -at 2000.59 file1.txt
touch -ad "July 12 1895" file.txt
touch -mt 198307010000 file.txt

touch -d '14 May' file.txt
touch -d '1 May 2005 10:22' file.txt
touch -d '14:24' file.txt

for i in *.txt; do touch -md "Dec 1 2018 23:58:59"  "$i"; done

touch -d "2 hours ago" filename
touch -d "$(date -R -r filename) - 2 hours" filename
find DIRECTORY -exec touch -d "2 hours ago" {} +
for i in *; do touch -r "$i" -d '+8 hour' "$i"; done

touch -a -m -t 201512180130.09 fileName.ext

/*
-a = accessed
-m = modified
-t = timestamp - use [[CC]YY]MMDDhhmm[.ss] time format
*/


#############################################################
#
#   systemctl
#
#############################################################


https://wiki.ubuntuusers.de/systemd/systemctl/
https://www.certdepot.net/rhel7-boot-reboot-shut-system-normally/
https://www.thegeekdiary.com/centos-rhel-7-shutting-down-suspending-or-rebooting-commands-systemctl/
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/sect-managing_services_with_systemd-power
https://www.digitalocean.com/community/tutorials/how-to-use-systemctl-to-manage-systemd-services-and-units

https://en.wikipedia.org/wiki/Sysctl
https://wiki.archlinux.org/index.php/sysctl
https://wiki.securepoint.de/System_cli_v11
http://www.linux-praxis.de/lpic2/lpi201/manpages/sysctl.html
https://wiki.archlinux.org/index.php/allow_users_to_shutdown
https://help.ubuntu.com/lts/installation-guide/i386/ch08s01.html
https://www.freedesktop.org/software/systemd/man/systemctl.html


# systemctl daemon-reload
# systemctl reboot
# systemctl poweroff
# shutdown -fr now

# reboot the system
# -------------------------------------
# reboot
# systemctl reboot
# shutdown -r now
# init 6
# telinit 6

# shutdown the system
# -------------------------------------
# halt
# systemctl halt
# shutdown -h now
# init 0
# telinit 0

# start stop a currently running service
# -------------------------------------
sudo systemctl start application
sudo systemctl stop application.service
sudo systemctl restart application.service
sudo systemctl reload application.service


#######################################################
#
#	Switching from zsh to bash, and back again?
#
#######################################################

exec bash # Switch to bash
exec zsh # Switch to zsh


##############################################################
#
#   cat command
#   http://lpicentral.blogspot.com/2018/12/cat-command-in-linux-with-examples.html
#
##############################################################

cat filename 			# show file content
cat file1 file2 		# contents of Files
cat -n filename 		# view contents of a file preceding with line numbers
cat > newfile 			# Create a file
cat file > new file 	# Copy the contents of one file to another file.
cat -s geeks.txt 		# suppress repeated empty lines in output
cat file1 >> file2 		# append the contents of one file
tac filename 			# display content in reverse
cat -E "filename"		# highlight the end of line.


################################################
#
#   Xfce Volume Control Fix
#
################################################


Xfce Volume adjusting sound applet
https://ubuntuforums.org/showthread.php?t=2210233

sudo apt-get install volumeicon-alsa
killall xfce4-volumed
volumeicon&
xterm -e 'alsamixer'
xfce4-terminal -e 'alsamixer'

################################################
#
#   Xfce Debian
#
################################################

https://askubuntu.com/questions/500571/how-to-move-resize-xfce4-terminal-using-the-command-line
https://github.com/xfce-mirror/xfce4-settings
https://github.com/xfce-mirror/xfwm4

xfce4-terminal --geometry=50x70+0+30
xfce4-terminal --geometry 140x20+50+50

xfwm4-tiling
xfce4-power-manager
xfsettingsd
xfce4-volumed
xfce4-panel
xcompmgr

/usr/share/applications/Zukitwo/xfwm4/themerc
/home/user/.themes/BlueMenta/xfwm4/themerc

placement_ratio=20
xfconf-query -c xfwm4 -p /general/tile_on_move -s true
xfconf-query -c xfwm4 -p /general/wrap_windows -s false

sudo apt-get install xfwm4
sudo apt-get install compiz compizconfig-settings-manager
compiz --replace ccp &


################################################
#
#   Debian - apt (not apt-get) autocompletion
#
################################################

https://www.howtoforge.com/how-to-add-bash-completion-in-debian

apt-get install bash-completion

~/.bashrc

if [ -f /etc/bash_completion ]; then
. /etc/bash_completion
fi

. ~/.bashrc
nano ~/.bash_profile

############################################################################
#
#   How to run FFMPEG with NVIDIA
#
############################################################################



----------------------------------------------------------------

https://trac.ffmpeg.org/wiki/HWAccelIntro
https://developer.nvidia.com/video-encode-decode-gpu-support-matrix
https://developer.nvidia.com/nvidia-video-codec-sdk
https://trac.ffmpeg.org/wiki/HWAccelIntro

ffmpeg --enable-nvenc

ffmpeg -hwaccels

Hardware acceleration methods:
cuda
vaapi
opencl
cuvid

time ffmpeg -i in4.mp4 -y xoutput.mp4                     # 1m45.693s
time ffmpeg -hwaccel vaapi -i in4.mp4 -y xoutput.mp4      # 2m0.340s
time ffmpeg -hwaccel opencl -i in4.mp4 -y xoutput.mp4     # 1m59.934s

----------------------------------------------------------------

time ffmpeg -hwaccel cuda -i outputBF.mp4 -pixel_format yuv444p -preset default -y xoutput.mp4 # 2m1.198s
time ffmpeg -hwaccel cuda -i outputBF.mp4 -pix_fmt yuv420p -c:v libx264 -y xoutput.mp4 # 1m52.538s
time ffmpeg -hwaccel cuda -i outputBF.mp4 -pix_fmt yuv420p -an -c:v libx264 -crf 14 -y xoutput.mp4 #  2m23.117s

----------------------------------------------------------------

# options
ffmpeg -hwaccel dxva2 -threads 1 -i INPUT -f null - -benchmark
ffmpeg -i input -c:v h264_nvenc -profile high444p -pixel_format yuv444p -preset default output.mp4
ffmpeg -c:v h264_cuvid -i input output
ffmpeg -hwaccel cuda -i input output
ffmpeg -hwaccel cuda -hwaccel_output_format cuda -i input -c:v h264_nvenc -preset slow output
ffmpeg -hwaccel_device 0 -hwaccel cuda -i input -vf scale_npp=-1:720 -c:v h264_nvenc -preset slow output.mkv

----------------------------------------------------------------

fmpeg -hwaccels

Hardware acceleration methods:
vdpau
vaapi
drm

ffmpeg -hwaccel vdpau -i ocm.mp4 -crf 14 -y ocm2.mp4

using cpu capabilities: MMX2 SSE2Fast SSSE3 SSE4.2 AVX

847,54s user 10,62s system 679% cpu 2:06,38 total - vdpau
897,87s user 4,90s system 676% cpu 2:13,54 total - classic


############################################################################
#
#   How to install NVIDIA.run?
#   https://askubuntu.com/questions/149206/how-to-install-nvidia-run?fbclid=IwAR2SntvmIWt4LYchJMeNFkZpxv4Crl0RJiXst4rQElfuhVEM9jgUtSmSFOw
#
############################################################################

Log out and Hit Ctrl+Alt+F1
sudo service lightdm stop or sudo lightdm stop
sudo init 3
chmod +x ./your-nvidia-file.run
sudo ./your-nvidia-file.run --no-x-check
sudo service lightdm start or sudo start lightdm

or

sudo add-apt-repository ppa:ubuntu-x-swat/x-updates
sudo add-apt-repository ppa:graphics-drivers
apt-get remove nvidia*
sudo apt-get update
sudo apt-get install nvidia-390
sudo apt-get dist-upgrade

sudo systemctl daemon-reload
sudo systemctl enable nvidia-persistenced
sudo systemctl start nvidia-persistenced


http://ubuntuhandbook.org/index.php/2017/10/install-media-codecs-ubuntu-17-10/
How to install the MPEG-4 AAC decoder and the H.264 ...
apt-get install ubuntu-restricted-extras.

Encoding high quality h265/HEVC 10-bit video via GPU:
http://www.linux-magazin.de/ausgaben/2017/11/ffmpeg-mit-gpus/
http://ntown.at/de/knowledgebase/cuda-gpu-accelerated-h264-h265-hevc-video-encoding-with-ffmpeg/


ffmpeg -hwaccel cuvid -i jQU_wiBW6M0.mp4  -crf 24 -threads 4 -preset ultrafast  -y outmovie3.mp4   # 2m24.058s
ffmpeg  -i jQU_wiBW6M0.mp4 -hide_banner   -crf 24 -threads 4 -preset ultrafast -y outmovie2.mp4    # 2m8.413s

Hardware acceleration methods:
ffmpeg -hwaccels
vdpau
vaapi
cuvid

https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html
https://www.microway.com/hpc-tech-tips/nvidia-smi_control-your-gpus/
https://docs.microsoft.com/en-us/azure/virtual-machines/linux/n-series-driver-setup

lspci | grep -i nvidia

Install CUDA for Ubuntu

sudo apt-get update
sudo apt-get upgrade -y
sudo apt-get dist-upgrade -y
#sudo apt install cuda
#sudo apt install cuda-drivers
sudo apt install nvidia-cuda*
sudo reboot

# verify cuda
nvcc --version

nvidia-smi
nvidia-smi -q | grep Temp
nvidia-smi -L
nvidia-smi --query-gpu=index,name,uuid,serial --format=csv
nvidia-smi dmon
nvidia-smi pmon
nvidia-smi -q -d SUPPORTED_CLOCKS
nvidia-smi -q -d CLOCK
nvidia-smi -q -d PERFORMANCE
nvidia-smi topo --matrix
nvidia-smi nvlink --status
nvidia-smi nvlink --capabilities
nvidia-smi -i 0 -q
nvidia-smi -i 0 -q -d MEMORY,UTILIZATION,POWER,CLOCK,COMPUTE

######################################
#
#   Set Alarm clock in Ubuntu :D
#
######################################

sudo apt install alarm-clock-applet
alarm-clock-applet

######################################
#
#   Gnome Shell - Lock Screen not working
#
######################################

sudo apt install gnome-screensaver
# gnome-screensaver-command -a
gnome-screensaver-command -l

#########################################################################
#
#	How to Install Deepin Desktop Environment on Ubuntu 18.04
#	The Deepin Desktop Environment
#	https://www.omgubuntu.co.uk/2018/06/how-to-install-deepin-desktop-environment-on-ubuntu-18-04
#
#########################################################################

sudo add-apt-repository ppa:leaeasy/dde
sudo apt install dde dde-file-manager
sudo apt install deepin-gtk-theme

#########################################################################
#
#   install default software in fresh ubuntu
#
#########################################################################

sudo apt update
sudo apt upgrade

sudo apt install -y dkms kernel-devel kernel-devel-$(uname -r).
sudo apt install virtualbox-guest-dkms virtualbox-guest-additions-iso
sudo apt install virtualbox-guest-utils -y

sudo apt install htop -y
sudo apt install gnome-commander -y
sudo apt install gnome-terminal -y

sudo apt install apache2  -y
sudo apt install php -y
sudo apt install mysql-client mysql-server -y

sudo apt install bluefish -y
sudo apt install kate -y
sudo apt install git -y
sudo apt install eclipse-pydev -y

#########################################################################
#
#   OpenVPN Client unter Ubuntu (Desktop) einrichten
#   https://www.techgrube.de/tutorials/openvpn-client-unter-ubuntu-desktop-einrichten
#
#########################################################################

sudo apt-get update
sudo apt-get install openvpn
sudo apt-get install network-manager-openvpn-gnome

sudo nano /etc/openvpn/MEINVPN.ovpn
sudo openvpn /etc/openvpn/MEINVPN.ovpn

Grafischer OpenVPN Client
Netzwerksymbol -> VPN Verbindungen -> VPN Konfigurieren


######################################
#
#   How to find the frequency and type of my current RAM?
#   https://askubuntu.com/questions/391173/how-to-find-the-frequency-and-type-of-my-current-ram
#   https://www.binarytides.com/linux-lshw-command/
#
######################################

sudo lshw -short -C memory
sudo lshw -C memory
sudo lshw -short
sudo lshw -short -class memory
sudo lshw -class processor
sudo lshw -short -class disk
sudo lshw -class network
sudo lshw -businfo


######################################
#
#   Fix Broken Ubuntu OS
#   https://www.ostechnix.com/how-to-fix-broken-ubuntu-os-without-reinstalling-it/?
#
######################################

sudo rm /var/lib/apt/lists/lock
sudo rm /var/lib/dpkg/lock
sudo rm /var/lib/dpkg/lock-frontend
sudo dpkg --configure -a
sudo apt clean
sudo apt update --fix-missing
sudo apt install -f
sudo dpkg --configure -a
sudo apt upgrade
sudo apt dist-upgrade
sudo reboot



############################################################################
#
#	Convert PNG into JPG with REPLACE extension
#	https://superuser.com/questions/71028/batch-converting-png-to-jpg-in-linux
#
############################################################################

find -name '*.jpg' -print0 | xargs -0 -r mogrify -format png 	# mogrify

for i in *.png ; do convert "$i" "${i%.*}.jpg" ; done			# bash for loop
ls -1 *.png | xargs -n 1 bash -c 'convert "$0" "${0%.*}.jpg"'	# avoid loops in bash
ls -1 *.png | parallel convert '{}' '{.}.jpg'    				# GNU Parallel to run multiple jobs at once
ls -1 *.png | parallel -j 3 convert '{}' '{.}.jpg'				# CPU usage using 3 jobs on my dual-core system
ls -1 *.png | parallel --eta convert '{}' '{.}.jpg'				# ETA, jobs completed, average time per job
parallel convert '{}' '{.}.jpg' ::: *.png						# alternative syntax if you are using GNU Parallel.
parallel convert '{}' '{.}.jpg' -- *.png						# alternative syntax if you are using GNU Parallel.

for img in *.png; do filename=${img%.*} convert "$filename.png" "$filename.jpg"; done


for file in *.png; do echo "${file/.png/.jpg/}"; done
for file in *.png; do convert $file  -density 300x300  ${file/.png/.jpg}; done
for file in  111 222 333;do convert -density 300x300  $file.jpg  $file.png; done && ls *.png

############################################################################
#
#   flock
#
############################################################################

https://linux.die.net/man/1/flock
https://www.unix.com/shell-programming-and-scripting/268619-use-flock-command-whole-script.html
https://superuser.com/questions/1270757/gnu-linux-flock-command-how-to-atomically-take-several-locks

Options
-s, --shared
Obtain a shared lock, sometimes called a read lock.
-x, -e, --exclusive
Obtain an exclusive lock, sometimes called a write lock. This is the default.
-u, --unlock
Drop a lock. This is usually not required, since a lock is automatically dropped when the file is closed. However, it may be required in special cases, for example if the enclosed command group may have forked a background process which should not be holding the lock.
-n, --nb, --nonblock
Fail (with an exit code of 1) rather than wait if the lock cannot be immediately acquired.
-w, --wait, --timeout seconds
Fail (with an exit code of 1) if the lock cannot be acquired within seconds seconds. Decimal fractional values are allowed.
-o, --close
Close the file descriptor on which the lock is held before executing command. This is useful if command spawns a child process which should not be hold ing the lock.
-c, --command command
Pass a single command to the shell with -c.
-h, --help
Print a help message.


while ! flock -n -x file <command> ; do sleep $(($RANDOM%5)) ; done

while true
do  flock -x a flock -nE 101 -s b flock -nE 102 c <command>
    case $? in
    101) flock -s b;;
    102) flock -s c;;
    *)   break;;
done
flock -s b flock -nE 102 flock -nE 100 -x a c <command>


http://php.net/manual/en/function.flock.php

$fp = fopen("/tmp/lock.txt", "r+");

if (flock($fp, LOCK_EX)) {  // acquire an exclusive lock
    ftruncate($fp, 0);      // truncate file
    fwrite($fp, "Write something here\n");
    fflush($fp);            // flush output before releasing the lock
    flock($fp, LOCK_UN);    // release the lock
} else {
    echo "Couldn't get the lock!";
}

fclose($fp);

https://linux.die.net/man/2/flock
https://linux.die.net/man/1/flock
http://manpages.ubuntu.com/manpages/trusty/en/man1/flock.1.html
http://manpages.ubuntu.com/manpages/bionic/de/man1/flock.1.html



###############################################
#
#   Config zsh
#
###############################################

nano .zshrc

# Path to your oh-my-zsh installation.
  export ZSH="/home/<user>/.oh-my-zsh"

# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
#ZSH_THEME="robbyrussell"
ZSH_THEME="kolo"

robbyrussell
kolo
jbergantine
wezm
awesomepanda
simple
jreese
philips
sunrise


####################################################################
#
#   cat examples
#
####################################################################

https://www.howtoforge.com/linux-cat-command/

#display line numbers
cat -n [filename]

#create file
cat > [name-of-new-file]

#copy the contents of one file to another file
cat file1.txt > file3.txt

# suppress repeated empty lines
cat -s [filename]

# display tab characters
cat -T [filename]

#display non printing characters
cat -v [filename]



http://www.linfo.org/cat.html

cat file1 > file2
cat file1 file2 file3 > file4

cat file.88_{0..100}.pdb >>bigfile.pdb
cat file.88_{0..100}.pdb >>bigfile.pdb 2>/dev/null
cat $(for((i=0;i<101;i++)); do echo -n "file.88_${i}.pdb "; done)
cat $(for((i=0;i<101;i++)); do test -f "file.88_${i}.pdb" && echo -n "file.88_${i}.pdb "; done)


##################################################
#
# 	find process
#	https://www.cyberciti.biz/faq/linux-find-process-name/
# 	https://www.booleanworld.com/kill-process-linux/
#
##################################################

ps aux | grep -i firefox.
ps aux | grep -i perl
ps aux | grep -i perl_file.pl

killall firefox
killall -9 firefox
kill 1234
kill -9 1234

ps aux | grep netbeans
pre      18775  1.2  0.0  12524  1972 pts/3    S    20:17   0:00
kill 18775.
killall netbeans
pkill netbeans

ps aux | sort -rk 3,3 | head -n 5
USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
emil      2268  7.8  5.2 3456296 424684 tty2   Sl+  08:41  45:01 /usr/bin/gnome-shell
# ps aux = list all processes
# sort -rk 3,3 = sort by third field, in reverse order
# head -n 5 = show first 5 lines

######################################################
#
#   return the the lastest files for each file name
#
######################################################

ls | sort -t_ -k2,2rn | awk -F_ '!A[$1]++'
ls xyz*_* abc*_* | sort -t_ -k2,2rn | awk -F_ '!A[$1]++'


######################################################
#
#   Show only the filenames under a directory
#
######################################################

find /tmp/ -type f \! -name blent.tar | awk -F/ '{print $NF}'
find /tmp/ -type f | awk -F/ '$NF!~/blent.tar/ {print $NF}'
find /tmp/ -type f | awk -F/ '$NF!="blent.tar" {print $NF}'


######################################################
#
#	How to run grep with multiple AND patterns
#
######################################################

https://unix.stackexchange.com/questions/55359/how-to-run-grep-with-multiple-and-patterns
https://linuxhint.com/30_grep_examples/
https://stackoverflow.com/questions/16658333/grep-p-no-longer-works-how-can-i-rewrite-my-searches
https://git-scm.com/docs/git-grep

----------------------------
# find one match
----------------------------
grep -P 'regexp1' dirname*/file.txt
perl -nle' print if m{regexp1}' dirname*/file.txt
awk  -F":" '/regexp1/' dirname*/file.txt

----------------------------
# find multiple matches
----------------------------
grep -e 'regexp1' -e 'regexp2' dirname*/file.txt
grep -e 'regexp1' -e 'regexp2' -m2 dirname*/file.txt
grep -e 'regexp1' -e 'regexp2' -e 'regexp3'  -m3 dirname*/file.txt
awk -F:  '/regexp1|regexp2/'  dirname*/file.txt | head -n 2
grep -E "(regexp1|regexp2|regexp3)" -m3   dirname*/file.txt



######################################################
#
#   Shift+Esc - Chrome Memory Manager
#   https://askubuntu.com/questions/817966/google-chrome-will-take-up-my-memory-to-the-point-where-it-causes-my-computer-to/817995
#
######################################################

The short answer: In Chrome, press Shift+Esc to see what tabs are using up too much RAM, and refresh or reload those tabs from time to time to reclaim memory.

The long answer: I think this is more of a Chrome problem than a Ubuntu problem.

I recently ran into this problem using Windows 7 with a Chrome tab opened on rt.com with the comments section at the bottom of a story opened.
 The comments section is driven by spot.im and will consume over a gigabyte of RAM over an hour of doing nothing but sitting there.
 Windows 7 would issue a low RAM error and then I'd have to reboot. The same problem exists within Ubuntu + Chrome but not nearly as bad
  as Windows + Chrome.
Then I discovered Shift+Esc within Chrome to bring up memory display stats, where I could watch how much RAM each tab was consuming.
 This works on Windows and Ubuntu.
When available memory (RAM + SWAP) runs low, a program called "OOM Killer" (Out of Memory) starts up and "intelligently" kills running
applications and stops new applications from running. OOM Killer was improved in Linux Kernel 4.6, but I can't say exactly how.
I did a test the other night using Chrome to burn up 95% of RAM and 65% of swap using OOM killer under Kernel 4.7.1 and the system remained stable.
I couldn't do new things like Alt+Print Screen but could still reboot no problem. Chrome did error out on reboot and couldn't
 restore the 20 odd tabs from the previous session, but that isn't a surprise.



######################################################
#
#   PS AUX - managing processes
#
######################################################

https://wiki.ubuntuusers.de/ps/
https://www.commandlinefu.com/commands/view/3/display-the-top-ten-running-processes-sorted-by-memory-usage
http://jagadesh4java.blogspot.com/2012/08/process-based-commands.html
https://www.sysadmin.md/ps-cheatsheet.html
http://jagadesh4java.blogspot.com/2012/08/process-based-commands.html

ps aux | sort -nk +4 | tail -n 2
ps aux | sort -rk 4,4 | head -n 5

ps aux | sort -rk 4,4 | head -n 5 | awk '{print $2}'  |  xargs sudo kill -9
ps aux | grep -i chromium-browser | sort -rk 4,4 | head -n 2 | tail -2 awk '{print $2}' |  xargs sudo kill -9

watch   '/usr/bin/top -b | head -4 | tail -2'
top -b | head -4 | tail -1 | awk '{print $6}' # 4G from 8G


ps aux --sort -rss | head -2
ps aux --sort +rss | tail -2
ps aux --sort -%mem | head --lines=3
ps -eo size,command --sort -size | head
ps axo %mem,pid,euser,cmd | sort -nr | head -n 3
ps aux --sort pmem | grep -i chromium-browser | awk '{print $2, $6, $11}' # show (pid / mem / command)
ps aux --sort -pmem | grep -i chromium-browser | awk '{print $2, $6, $11}' # show (pid / mem / command)
ps -aux | grep command # List process based on Commands
ps aux --sort -pmem # Outputs the highest %MEM at bottom

ps aux --sort -pmem | grep -i chromium-browser | head -4 | tail -2 | awk '{print $2, $6}' # show top mem second line
ps aux --sort -pmem | grep -i chromium-browser | head -4 | tail -2 | awk '{print $2}' |  xargs sudo kill -9


ps aux --sort -pmem | grep -i chromium-browser | head -4 | sed -n 2p | awk '{print $2, $6}'  # show top mem second line
ps aux --sort -pmem | grep -i chromium-browser | head -4 | awk 'FNR==2' | awk '{print $2, $6}'
ps aux --sort -pmem | grep -i chromium-browser | head -4 | awk 'NR==2' | awk '{print $2, $6}'


top -b -o +%MEM | head -9
watch --differences -n 2 'ps aux | sort -r -nk +4 | head'
ps aux | sort -nrk 3 | head
ps -e -orss=,args= | sort -b -k4,4n | pr -TW$COLUMNS
ps -e -orss=,pid=,args= | sort -b -k1n | pr -TW$COLUMNS
ps -e -orss=,args= | sort -b -k1,1n | pr -TW$COLUMNS
ps -e -orss=,args= | sort -b -k1,1n | pr -TW$COLUMNS
ps -eorss,args | sort -nr | pr -TW$COLUMNS | head
ps -fC chromium-browser
ps -ejH
ps axjf
ps ef -o command,vsize,rss,%mem,size --sort -size | head
ps -eo pid,args,psr


ps -f -u username # Lists all current processes for the user named username in full listing format
ps -o thcount -p 7893 # Return Number of kernal Threads Owned by a process
ps aux | sort -nk +4 | tail # Display the top running process according by memory usage
ps hax -o user | sort | uniq -c # Process List By User
ps aux --sort=%mem,%cpu # Show all process by their memory & CPU Usage
ps -o %mem= -C chromium-browser # Show How much memory is using
ps -o pmem= -C chromium-browser # Show How much memory is using
ps -o %cpu -C chromium-browser # Show How much cpu is using
ps -Hacl -F S -A f # View Process by Hierarchy
ps -p $$ # Current Running Shell
ps -ef --sort=-%cpu # List Process By Highest CPU Usage
ps -o lstart # Display Date of the Process Started
ps -e -orss=,args= | sort -b -k1,1n | pr -TW$COLUMNS # Top Memory Usage
kill -9 `ps -xaw -o state -o ppid | grep Z | grep -v PID | awk '{print $2}'` # Kill Zombie process
ps -AFl # Show all processes including commandline arguments
ps -AlFH # Show all processes with threads in tree mode
ps -e -o pid,args --forest # Show processes in a hierarchy
ps -U root -u root u # Show list of processes owned by a specific user
ps uax | grep chromium-browser # Show information for a particular process


# Mem usage for PID $pid
for pid in $(ps -ef | awk '{print $2}'); do cat /proc/$pid/smaps | grep -m 1 -e ^Size: | awk '{print $2}'; done
for pid in $(ps -ef | awk '{print $2}'); do cat /proc/$pid/smaps | grep -m 1 -e ^Rss: | awk '{print $2}'; done
for pid in $(ps -ef | awk '{print $2}'); do cat /proc/$pid/smaps | grep -m 1 -e ^Pss: | awk '{print $2}'; done


# Get top 5 processes by CPU usage
ps -e -o pcpu,cpu,nice,state,cputime,args --sort pcpu | sed '/^ 0.0 /d'| tac |head -5
ps auxf | sort -nr -k 3 | head -5


# Get top 5 processes by memory usage
ps aux | awk '{mem[$11]+=int($6/1024)}; {cpuper[$11]+=$3};{memper[$11]+=$4}; END {for (i in mem) {print cpuper[i]"% ",memper[i]"% ",mem[i]" MB ",i}}' | sort -k3nr | head -n 5


# Get top 5 processes by memory usage
ps -e -orss=,args= | sort -b -k1,1n | pr -TW$COLUMNS| tac | head -5
ps auxf | sort -nr -k 4 | head -5


# Get security info
ps -eo euser,ruser,suser,fuser,f,comm,label


#######################################################
#
# Show photo filenames where no flash was used. Uses Imagemagick
#
#######################################################

identify -format "%f F:%[EXIF:Flash]\n" *.jpg | egrep " F:(0|16|24|32)$"

#######################################################################
#
#   Long line wrapping in Nano
#   https://unix.stackexchange.com/questions/122795/long-line-wrapping-in-nano
#
#######################################################################

ESC , Shift+$

##################################################################
#
#	Raspberry Pi camera module streaming video to another computer
#
##################################################################

# alternative1
raspivid -o - -t 0 -hf -w 800 -h 400 -fps 24 |cvlc -vvv stream:///dev/stdin --sout '#standard{access=http,mux=ts,dst=:8160}' :demux=h264

# alternative2
ssh -C -X root@serverip -L 9091:localhost:9091
vlc v4l2:// :v4l2-dev=/dev/video0 :v4l2-adev=/dev/dsp :v4l2-standard=0 :sout="#transcode{vcodec=mp4v,vb=800,scale=1,acodec=mpga,ab=128, channels=2}:duplicate{dst=std{access=http,mux=ts,dst=localhost:9091}}"
vlc http://localhost:9091

##################################################################
#
#   FIX youtube-dl failed to extract signature
#   https://askubuntu.com/questions/598200/youtube-dl-failed-to-extract-signature?sort=unanswered
#
##################################################################

sudo apt install youtube-dl -y
sudo apt remove --purge youtube-dl
sudo apt install youtube-dl -y

sudo apt install python-pip
sudo pip install youtube-dl
sudo pip install --upgrade youtube-dl

#sudo snap install youtube-dl-casept # python-pip is not required

###################################################################
#
# Setting folders unixtime
#
###################################################################

for dir in foldername/*; do echo "$dir"; done
for dir in foldername/*; do touch -d "2 hours ago" $dir; done