#######################################################
git pull master main
#######################################################

https://www.git-tower.com/learn/git/faq/git-pull-origin-master
https://stackoverflow.com/questions/2883840/differences-between-git-pull-origin-master-git-pull-origin-master
https://git-scm.com/docs/git-pull
https://www.atlassian.com/git/tutorials/syncing/git-pull


git pull
git pull origin master

# By default, this integration will happen through a "merge", but you can also choose a "rebase":
# git pull origin master --rebase

# If you don't want to integrate new changes directly, then you can instead use git fetch:
# this will only download new changes, but leave your HEAD branch and working copy files untouched.
# git fetch origin

# git pull = git fetch + git merge origin/branch



#######################################################
git diff
#######################################################

git diff branch..master
git diff branch master



#######################################################
get current branch
#######################################################

git branch
git branch --show-current
git rev-parse --abbrev-ref HEAD
git symbolic-ref --short HEAD


#######################################################
restore file
#######################################################

git restore file
git checkout file


#######################################################
desktop ubuntu budgie  1440x900 screen vbox
#######################################################

apt install ubuntu-budgie-desktop ubuntu-budgie-themes
apt install xfce4


#######################################################
docker xdebug wordpress
#######################################################

https://www.wpdiaries.com/wordpress-with-xdebug-for-docker/


#######################################################
[keycloak]
#######################################################

https://www.keycloak.org/getting-started
https://www.keycloak.org/documentation
https://www.keycloak.org/getting-started/getting-started-docker
https://www.keycloak.org/docs/6.0/server_installation/
https://www.keycloak.org/docs/7.0/server_admin/
https://hub.docker.com/r/jboss/keycloak/
https://hub.docker.com/r/jboss/keycloak/


sudo su
sudo -i

tests conn for 127.0.0.1
https://pythonspeed.com/articles/docker-connection-refused/

curl http://localhost:8080 -v

python3 -m http.server --bind 127.0.0.1
python3 -m http.server 8888

docker run -p 8000:8000 -it --entrypoint=bash python:3.7-slim
# python3 --version
# Python 3.7.12

docker run --rm -it busybox
docker run --rm example
docker run --rm -p 5000:5000 example
docker run -p 8000:8000 -it python:3.7-slim python3 -m http.server --bind 0.0.0.0



# get keycloak image
#
# quay.io/keycloak/keycloak:12.0.2
# quay.io/keycloak/keycloak:15.0.2
# jboss/keycloak
#

docker run jboss/keycloak
docker run -p 8080:8080 jboss/keycloak
docker run -e KEYCLOAK_USER=<USERNAME> -e KEYCLOAK_PASSWORD=<PASSWORD> jboss/keycloak
docker exec <CONTAINER> /opt/jboss/keycloak/bin/add-user-keycloak.sh -u <USERNAME> -p <PASSWORD>
docker restart <CONTAINER>


docker run -it -p 8080:8080 -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin quay.io/keycloak/
docker run -it -p 8080:8080 -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin jboss/keycloak
docker run -it -p 8443:8443 -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin --name keycloak jboss/keycloak


docker run keycloak
docker exec -it keycloak bash




K8S with Keycloak: 127.0.0.1:8443 connection refused  (0)

https://stackoverflow.com/questions/49859066/keycloak-docker-https-required###
https://stackoverflow.com/questions/66376617/keycloak-container-kcadmin-error-connect-to-localhost8080-localhost-127-0-0-1
https://github.com/docker/for-mac/issues/5310
https://github.com/chvndb/keycloak-spring-vaadin-demo/issues/3
https://keycloak.discourse.group/t/keycloack-standalone-works-fine-on-terminal-but-on-ip-8080-i-get-this-site-can-t-be-reached/7100/12
https://keycloak.discourse.group/t/keycloack-standalone-works-fine-on-terminal-but-on-ip-8080-i-get-this-site-can-t-be-reached/7100/15
https://github.com/docker/for-mac/issues/5310
https://blog.jaimyn.dev/how-to-build-multi-architecture-docker-images-on-an-m1-mac/#tldr
https://quarkus.io/guides/security-openid-connect
https://developers.redhat.com/blog/2017/10/31/docker-authentication-keycloak




docker run --name key -d -p 8080:8080 -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin jboss/keycloak
docker exec -it key bash

docker exec <container_id> /opt/jboss/keycloak/bin/kcadm.sh update realms/master -s sslRequired=NONE --server http://localhost:8080/auth --realm master --user <admin_username> --password <admin_password>

./kcadm.sh config credentials --server http://localhost:8080/auth --realm master --user admin
./kcadm.sh update realms/master -s sslRequired=NONE



------------------------------------------------------

# https://www.janua.fr/howto-docker-with-keycloak/

docker run -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin -e DB_VENDOR=H2 -p 8080:8080 --name sso jboss/keycloak-examples

https://localhost:8080/auth
docker stop sso
docker start sso
docker logs sso
docker exec -it sso bash
docker inspect sso
docker exec -it sso bash

------------------------------------------------------


# https://developers.redhat.com/blog/2017/10/31/docker-authentication-keycloak#configure_the_keycloak_client_and_a_docker_registry
https://developers.redhat.com/blog/2017/10/31/docker-authentication-keycloak#test_authentication

docker run -p 8080:8080 -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=password jboss/keycloak -Dkeycloak.profile.feature.docker=enabled -b 0.0.0.0
docker pull localhost:5000/busybox
docker login -u admin localhost:5000
docker pull localhost:5000/busybox

------------------------------------------------------

[MacBook]
docker buildx ls
docker buildx create --use
docker buildx â€”-platform linux/amd64,linux/arm64 -t <remote image repository> --push .

docker run --rm -e DB_ADDR=localhost --platform linux/amd64 -p 8080:8080 -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin quay.io/keycloak/keycloak:13.0.1

docker run --rm -e DB_ADDR=localhost -p 8080:8080 -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=admin quay.io/keycloak/keycloak:13.0.1

docker build -t jboss/keycloak:13.0.1 .

------------------------------------------------------

[bash install]

#/bin/zsh

VERSION=14.0.0 # set version here

cd /tmp
git clone git@github.com:keycloak/keycloak-containers.git
cd keycloak-containers/server
git checkout $VERSION
docker build -t "jboss/keycloak:${VERSION}" .
docker build -t "quay.io/keycloak/keycloak:${VERSION}" .



#######################################################
obsolete html5 attributes
#######################################################

https://dev.w3.org/html5/pf-summary/obsolete.html


#######################################################
yii framework projects
#######################################################

https://github.com/LimeSurvey/LimeSurvey
https://www.yiiframework.com/doc/blog/1.1/en/start.overview
https://code.google.com/archive/p/yii-user/downloads



#######################################################
docker image rm <image_id>
#######################################################

https://stackoverflow.com/questions/51188657/image-is-being-used-by-stopped-container/51189547
https://stackoverflow.com/questions/63074477/unable-to-delete-docker-images
https://www.thegeekdiary.com/docker-troubleshooting-conflict-unable-to-delete-image-is-being-used-by-running-container/
https://docs.docker.com/engine/reference/commandline/container_ls/

Error response from daemon: conflict: unable to delete <image_id> (must be forced) - image is being used by stopped container

#use --force , -f Force removal of the image
docker image rmi <image_id> -f
docker image rm <image-name> --force

# stopped containers that are causing the lock
docker stop $(docker ps -aq)
docker rm $(docker ps -q -a)
docker rm $(docker ps -aq)

#Remove all images
docker rmi $(docker images -q)

docker image rm <image_id>

# You must remove container first.
#check container
docker ps -a

#remove container
docker rm containerID


# delete all stopped containers
docker container prune

# list containers
docker container ls
docker container ls --all

-----

Get running containers
docker ps

Get all running and stopped container
docker ps -a

Stop single container
docker stop <container_id>

Stop all containers
docker stop $(docker ps -aq)

Remove single container
docker rm <container_id>

Remove all containers
docker rm $(docker ps -aq)

Remove single image
docker rmi <image_id>

Remove all images
docker rmi $(docker images -q)

Remove everything from Docker
docker system prune
docker image prune -f

WARNING! This will remove:
	- all stopped containers
	- all volumes not used by at least one container
	- all networks not used by at least one container
	- all dangling images


# list and delete all dangling images (untagged images)
docker images -f "dangling=true" -q
docker rmi $(docker images -f "dangling=true" -q)
docker rmi $(docker images --filter "dangling=true" -q --no-trunc)

docker image ls
docker image ls --all
docker image prune -fa

https://docs.docker.com/engine/reference/commandline/images/
https://docs.docker.com/engine/reference/commandline/images/
https://forums.docker.com/t/how-to-remove-none-images-after-building/7050/14
https://newbedev.com/c-docker-remove-image-with-none-tag-code-example
https://www.freecodecamp.org/news/docker-remove-image-how-to-delete-docker-images-explained-with-examples/
https://docker-py.readthedocs.io/en/stable/images.html
https://apidocs.joyent.com/docker/commands/images

docker images --all  --digests -filter "dangling=true" --no-trunc --quiet
docker images java
docker images java:8
docker images --no-trunc
docker images --digests
docker images --filter "dangling=true"
docker rmi $(docker images -f "dangling=true" -q)














