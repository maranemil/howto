

#######################################################################################################
#
#   http://milan.kupcevic.net/ghostscript-ps-pdf/
#   https://askubuntu.com/questions/113544/how-can-i-reduce-the-file-size-of-a-scanned-pdf-file
#
#######################################################################################################

identify -verbose testpdf.pdf
identify -verbose testpdf.pdf | grep "Print size"

-dPDFSETTINGS=/screen   (screen-view-only quality, 72 dpi images)
-dPDFSETTINGS=/ebook    (low quality, 150 dpi images)
-dPDFSETTINGS=/printer  (high quality, 300 dpi images)
-dPDFSETTINGS=/prepress (high quality, color preserving, 300 dpi imgs)
-dPDFSETTINGS=/default  (almost identical to /screen)


convert -density 200x200 -quality 60 -compress jpeg input.pdf output.pdf # BAD QUALITY!!!!
convert -compress Zip -density 150x150 input.pdf output.pdf # BAD QUALITY!!!!

gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen -dNOPAUSE -dQUIET -dBATCH -sOutputFile=output.pdf input.pdf # BAD QUALITY!!!!
gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook -dNOPAUSE -dQUIET -dBATCH -sOutputFile=output.pdf $INPUTFILE   # best option for quality 80MB from 2GB !!!!!!
gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/printer -dNOPAUSE -dQUIET -dBATCH -sOutputFile=output.pdf $INPUTFILE   # best option for quality 400MB from 2GB !!!!!
gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/prepress -dNOPAUSE -dQUIET -dBATCH -sOutputFile=output.pdf $INPUTFILE   # best option for quality 400MB from 2GB !!!!!
gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dDownsampleColorImages=true  -dNOPAUSE  -dBATCH -sOutputFile=output.pdf input.pdf  # -dColorImageResolution=150 # BAD QUALITY!!!!

--------------------

Where:
-dPDFSETTINGS=/screen lower quality, smaller size. (72 dpi)
-dPDFSETTINGS=/ebook for better quality, but slightly larger pdfs. (150 dpi)
-dPDFSETTINGS=/prepress output similar to Acrobat Distiller "Prepress Optimized" setting (300 dpi)
-dPDFSETTINGS=/printer selects output similar to the Acrobat Distiller "Print Optimized" setting (300 dpi)
-dPDFSETTINGS=/default selects output intended to be useful across a wide variety of uses, possibly at the expense of a larger output file

--------------------

#!/bin/sh
gs  -q -dNOPAUSE -dBATCH -dSAFER \
    -sDEVICE=pdfwrite \
    -dCompatibilityLevel=1.3 \
    -dPDFSETTINGS=/screen \
    -dEmbedAllFonts=true \
    -dSubsetFonts=true \
    -dColorImageDownsampleType=/Bicubic \
    -dColorImageResolution=72 \
    -dGrayImageDownsampleType=/Bicubic \
    -dGrayImageResolution=72 \
    -dMonoImageDownsampleType=/Bicubic \
    -dMonoImageResolution=72 \
    -sOutputFile=out.pdf \
     $1

--------------------

sudo update-alternatives --config java


# convert with buffer
gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook -dNOPAUSE -dQUIET -dBATCH -dNumRenderingThreads=4 -dBandBufferSpace=500000000 -dBufferSpace=1000000000 -dMaxPatternBitmap=1000000 -sBandListStorage=memory -dSAFER  -sOutputFile=output.pdf  example.pdf

# convert with buffer
gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/printer  -dBATCH  -dNumRenderingThreads=8  -dBandBufferSpace=500000000 -dBufferSpace=1000000000 -sBandListStorage=memory -dQUIET -dNOPAUSE -sOutputFile=output.pdf -c "60000000 setvmthreshold" -f  example.pdf

# Get the Total Number of Pages
gs -q -dNODISPLAY -c "(example.pdf) (r) file runpdfbegin pdfpagecount = quit"

# Extract PDF Page Text
gs -dNOPAUSE -sDEVICE=txtwrite -dFirstPage=1 -dLastPage=10 -sOutputFile=output.txt -q example.pdf -c quit






###########################################################
#
# 	How can I fix/repair a corrupted PDF file?
#
###########################################################

gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/printer -dNOPAUSE -dQUIET -dUseCIEColor -dBATCH -sOutputFile=fixed.pdf damaged.pdf
gs -o fixed.pdf -sDEVICE=pdfwrite -dCompatibilityLevel=1.4  -dPDFSETTINGS=/prepress  -dColorConversionStrategy=/LeaveColorUnchanged damaged.pdf

Set UseCIEColor for UseDeviceIndependentColor to work properly.
   **** Error: Cannot find a 'startxref' anywhere in the file.
   **** Warning:  An error occurred while reading an XREF table.
   **** The file has been damaged.  This may have been caused
   **** by a problem while converting or transfering the file.
   **** Ghostscript will attempt to recover the data.

**** Error: Cannot find a 'startxref' anywhere in the file.

# convert damaged.pdf fixed.pdf
# pdftk damaged.pdf output fixed.pdf
# pdftocairo -pdf damaged.pdf fixed.pdf

# sudo apt-get install mupdf-tools
# mutool clean damaged.pdf fixed.pdf

--

# convert -resize 241x344 -background white -gravity center -extent 241x344 -quality 75 damaged.pdf fixed.pdf
/*
gs
-dNOOUTERSAVE
-dNOSUBSTDEVICECOLORS
-dColorConversionStrategy=/LeaveColorUnchanged
-dPDFSETTINGS=/prepress
*/

FIX:
gs -o repaired.pdf -sDEVICE=pdfwrite -dCompatibilityLevel=1.4  -dPDFSETTINGS=/prepress  -dColorConversionStrategy=/LeaveColorUnchanged corrupted.pdf



Malformed xref in PDF file at
/lib/PDF/API3/Compat/API2/Basic/PDF/File.pm line 1198


**** Error: Cannot find a 'startxref' anywhere in the file.
**** Warning:  An error occurred while reading an XREF table.
**** The file has been damaged.  This may have been caused
**** by a problem while converting or transfering the file.

FIX: pdftk damaged.pdf output fixed.pdf

https://manuals.setasign.com/fpdi-manual/v1/the-fpdi-class/#index-3-1
https://rt.cpan.org/Public/Bug/Display.html?id=48683
https://rt.cpan.org/Public/Bug/Display.html?id=45743
https://stackoverflow.com/questions/6800886/does-pdfapi2-support-reading-pdf-1-5-with-compressed-xref
https://docs.appligent.com/wp-content/uploads/2018/07/recognizing_malformed_pdf_f.pdf
http://khkonsulting.com/2013/01/the-trouble-with-the-xref-table/

-dFastWebView - Adobe 'linearised' PDF specification

Since PDF 1.5, the spec changed to allow xref information to be in
streams instead of tables.  This isn't supported by PDF::API2 (though
I'll be very happy if someone beats me to fixing that and sends a patch!).

The file format through PDF 1.5 is well-supported, with the exception of the "linearized" or "optimized" output format, which this module can read but not write.

#convert damaged.pdf fixed.pdf

#gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -o out.pdf in.pdf
#gs -o repaired.pdf  -sDEVICE=pdfwrite  -dPDFSETTINGS=/prepress  corrupted.pdf

http://www.lagotzki.de/pdftk/
https://www.pdflabs.com/docs/pdftk-cli-examples/
https://linux.die.net/man/1/pdftk
https://phillw.net/iso/bento-ubuntu-remix/miscellaneous/Informatique/Caisse-a-outils-PDF/pdftk%20-%20the%20pdf%20toolkit
https://www.networkworld.com/article/3430781/how-to-manipulate-pdfs-on-linux.html
http://www.bernaerts-nicolas.fr/linux/74-ubuntu/327-ubuntu-repair-corrupted-broken-pdf

java -cp path....to/Multivalent.jar tool.pdf.Compress file.pdf
java -jar pdfbox-app-x.y.z.jar PDFDebugger [inputfile]
ps2pdf14 CorruptPDFs.pdf "testout.pdf"
ps2pdf damaged.pdf fixed.pdf

pdftk pg1.pdf pg5.pdf cat output OneDoc.pdf
pdftk OneDoc.pdf cat 1-3 5 output 4pgs.pdf
pdftk OneDoc.pdf cat 1 3-end output 4pgs.pdf

gs -q -dNOPAUSE -dBATCH -dSAFER -sDEVICE=pdfwrite -sOutputFile="${TMP_REPAIRED}" "${TMP_ORIGINAL}"
gs -q -dNOPAUSE -dBATCH -dSAFER -sDEVICE=pdfwrite -sOutputFile=fixed2.pdf


https://wilransz.com/pdftk-on-ubuntu-18-04/
https://linuxhint.com/install_pdftk_ubuntu/
https://command-not-found.com/pdftk


[-ER-] Malformed xref in PDF file  at /usr/share/perl5/PDF/API2/Basic/PDF/File.pm line 1051.
sudo snap install pdftk


sudo apt update
sudo add-apt-repository ppa:malteworld/ppa
sudo apt update
sudo apt install pdftk


pdftk input.pdf output new.pdf
pdftk input.pdf cat output new.pdf

sudo ln -s /snap/pdftk/current/usr/bin/pdftk /usr/bin/pdftk
sudo ln -fs /snap/pdftk/current/usr/bin/pdftk /usr/bin/pdftk
pdftk input.pdf cat output new.pdf


#!/bin/sh
exec java -jar /usr/share/java/pdftk.jar "$@"


