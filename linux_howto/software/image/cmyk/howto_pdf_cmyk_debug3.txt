#####################################################################################
ChatGPT CMYK https://chat.openai.com/chat
#####################################################################################

ChatGPT change CMYK colors cmd
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
gs -sDEVICE=pdfwrite -dColorConversionStrategy=/CMYK -sOutputICCProfile=/path/to/your/icc_profile.icc \
  -dNOPAUSE -dBATCH -dSAFER -sOutputFile=output_file.pdf input_file.pdf

ChatGPT ICC Profiles Scribus
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Scribus is a desktop publishing software that also includes color management features. While it is not a specialized color management software like Adobe Photoshop or X-Rite i1Profiler, it does offer some ICC profile creation capabilities.
To create an ICC profile in Scribus, you can follow these steps:
Open Scribus and create a new document.
Go to "Edit" > "Color Management" > "ICC Profiles" to open the color management settings.
Click on the "Add" button to create a new ICC profile.
Choose the type of profile you want to create, such as a monitor profile or a printer profile.
Follow the instructions to create the profile. This typically involves printing out a color chart, scanning it with a colorimeter, and generating a profile based on the color measurements.
Save the ICC profile to a location that Ghostscript can access, such as the same directory as your PDF file.
Once you have created the ICC profile, you can use it with Scribus to ensure that your colors are accurately represented in your document. You can assign the ICC profile to your document or images and enable color management in the export settings to ensure that the colors are displayed accurately in the exported PDF.
Again, keep in mind that color management can be a complex and technical process, and it's important to have a basic understanding of color theory and calibration before attempting to create or use ICC profiles. It's also recommended to use a hardware colorimeter for accurate color measurement, especially if color accuracy is critical for your work.

ChatGPT ICC Profiles Krita Inkscape
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Inkscape and Krita are not specialized color management software, but they do offer some
color management capabilities. However, they cannot create ICC profiles on their own.

To create an ICC profile, you will need a color management software that is specifically
designed for that purpose, such as Adobe Photoshop, X-Rite i1Profiler, or ColorMunki.
These programs offer advanced color measurement tools and calibration options that are
necessary for creating accurate ICC profiles that reflect your specific printing environment.

However, once you have created an ICC profile using a color management software,
you can use it with Inkscape or Krita to ensure that your colors are accurately represented on
 your screen. Inkscape and Krita both support color management, and you can assign the ICC profile
 to your document or image to ensure that the colors are displayed accurately.

Keep in mind that color management can be a complex and technical process,
and it's important to have a basic understanding of color theory and calibration before attempting
to create or use ICC profiles. It's also recommended to use a hardware colorimeter for
accurate color measurement, especially if color accuracy is critical for your work.


#####################################################################################
Converting RGB PDF in CMYK with plain black using ghostscripts sOutputICCProfile
#####################################################################################

https://stackoverflow.com/questions/23725560/convert-rbg-to-cmyk-with-use-of-icc-profile-in-php
https://stackoverflow.com/questions/56486986/black-color-showing-on-cmy-channels-when-converted-to-cmyk-using-ghostscript
https://stackoverflow.com/questions/71036645/converting-rgb-pdf-in-cmyk-with-plain-black-using-ghostscripts-soutputiccprofile
https://stackoverflow.com/questions/71248376/ghostscript-converts-my-pdf-to-cmyk-but-not-really
https://stackoverflow.com/questions/21751887/convert-pdf-to-cmyk-but-ignore-black
https://stackoverflow.com/questions/71753640/how-to-force-ghostscript-to-convert-pdf-to-monochrome-bitmap-using-cmyk-colors-i
https://stackoverflow.com/questions/6241282/converting-pdf-to-cmyk-with-identify-recognizing-cmyk?rq=2
https://stackoverflow.com/questions/6241282/converting-pdf-to-cmyk-with-identify-recognizing-cmyk
https://stackoverflow.com/questions/24935837/how-to-create-cmyk-color-seperation-combinations-using-ghostscript
https://stackoverflow.com/questions/58064971/how-can-i-convert-an-rgb-pdf-to-cmyk-with-flat-black
https://stackoverflow.com/questions/58064013/how-can-i-convert-a-pdf-to-cmyk-with-different-kinds-of-black
https://stackoverflow.com/questions/6248563/converting-any-pdf-to-black-k-only-cmyk?rq=2
https://stackoverflow.com/questions/35596346/ghostscript-convert-pdf-into-cmyk-preserving-pure-black-for-text
https://stackoverflow.com/questions/57007607/ghostscript-convert-a-pdf-with-a-picture-from-rgb-to-gray
https://stackoverflow.com/questions/35026630/pdf-thumbnail-always-generated-as-grayscale-using-imagick
https://stackoverflow.com/questions/50876769/ghostscript-to-convert-graphics-to-rich-black-when-converting-to-cmyk
https://stackoverflow.com/questions/50662968/convert-a-folder-of-pdfs-into-a-csv-of-cmyk-values
https://stackoverflow.com/questions/50612243/convert-pdf-to-tiff-with-cmyk-and-transparency
https://stackoverflow.com/questions/48936435/convert-pdf-from-rgb-to-cmyk-with-ghostscript
https://stackoverflow.com/questions/48166403/ghostscript-convert-pdf-to-jpg-cmyk-profile-resolution-error
https://stackoverflow.com/questions/8475695/how-to-convert-pdf-from-cmyk-to-rgb-for-displaying-on-ipad
https://stackoverflow.com/questions/3418268/script-or-some-other-means-to-convert-rgb-to-cmyk-in-pdf
https://stackoverflow.com/questions/46819584/ghostscript-cmyk-black-value-in-pdf
https://stackoverflow.com/questions/46810826/ghostscript-cmyk-export-yields-wrong-black
https://stackoverflow.com/questions/38310916/pdf-batch-conversion-from-srgb-to-cmyk
https://stackoverflow.com/questions/36328722/converting-pdf-without-any-images-to-cmyk
https://stackoverflow.com/questions/27454350/ghostscript-unrecoverable-error-undefinedfilename-in-setpagedevice
https://stackoverflow.com/questions/30870218/ghostscript-wrong-cmyk-color-conversion-100-yellow-convert-to-98-yellow
https://stackoverflow.com/questions/30371167/how-to-reimport-cmyk-pdf-into-adobe-illustrator-photshop-etc-after-negative-de
https://stackoverflow.com/questions/30352913/how-to-insert-cmyk-image-into-pdf-using-postscript
https://stackoverflow.com/questions/29861328/how-to-programmatically-convert-a-pdf-to-grayscale-using-only-black-ink
https://stackoverflow.com/questions/27896542/ghostscript-get-cmyk-values-for-rendering-from-pdf
https://stackoverflow.com/questions/26121026/what-settings-should-i-use-to-keep-the-colour-correct-when-converting-a-pdf-to-x
https://stackoverflow.com/questions/10834991/ghostscript-convert-pdf-into-cmyk-eps
https://stackoverflow.com/questions/20399713/ghostscript-outputs-blank-pdf
https://stackoverflow.com/questions/50612243/convert-pdf-to-tiff-with-cmyk-and-transparency



--------------------------------------------------------------------------------------------------
#!/bin/bash

# diff --color input.txt output.txt
cd export || exit
rm *.txt
rm log.log

#convert rgb.jpg rgb.pdf

gs -o gray.pdf -sDEVICE=pdfwrite  -dPDFSETTINGS=/prepress -r72 \
 -dProcessColorModel=/DeviceGray -sProcessColorModel=DeviceGray \
 -sColorConversionStrategy=Gray  -sColorConversionStrategyForImages=Gray \
  -f rgb.pdf

#convert -density 1200 -channel CMYK -threshold 75% -strip gray.pdf bw.pdf
convert -threshold 50% -strip -channel cmyk -flatten -alpha Activate gray.pdf bw.pdf

gs -o cmyk.pdf -sDEVICE=pdfwrite -r72 \
 -dProcessColorModel=/DeviceCMYK -sProcessColorModel=DeviceCMYK \
 -sColorConversionStrategy=CMYK -sColorConversionStrategyForImages=CMYK \
 -f bw.pdf

# shellcheck disable=SC2215

for i in *.pdf; do identify -verbose "$i" > "$i".txt; done
#echo '--------------------------------' >> log.txt
for s in *.pdf; do identify -verbose "$s" | grep -i 'color'  >> log.log && echo "$s" >> log.log; done



--------------------------------------------------------------------------------------------------
https://www.youtube.com/watch?v=vSn7VHw9hUg
https://sk1project.net/
--------------------------------------------------------------------------------------------------

COLOR CODE Â» CMYK color code
https://www.mediaevent.de/css/color-cmyk.html
https://www.toutes-les-couleurs.com/en/CMYK-color-code.php
https://johndecember.com/html/spec/colorcmyk.html
https://mixam.com/support/cmykchart

CMYK Calculator
https://de.w3docs.com/tools/color-cmyk
https://cmyktool.com/cmyk-color-picker/
https://www.w3schools.com/colors/colors_cmyk.asp
--------------------------------------------------------------------------------------------------

https://ghostscript.com/docs/9.54.0/Install.htm
https://installati.one/debian/10/ghostscript/
https://www.linuxcapable.com/how-to-install-imagemagick-on-debian-linux/
https://www.linuxcapable.com/how-to-install-php-imagemagick-on-debian-linux/
https://www.tecmint.com/install-imagemagick-on-debian-ubuntu/
https://howto.biapy.com/en/debian-gnu-linux/servers/php/install-the-php-extension-imagick-on-debian
https://github.com/koalaman/shellcheck/wiki/SC2164

sudo apt-get update
sudo apt-get -y install ghostscript -y
# ghostscript -v
# GPL Ghostscript 9.50 (2019-10-15)

sudo apt update && sudo apt upgrade
sudo apt install libpng-dev libjpeg-dev libtiff-dev -y
sudo apt-get install build-essential -y
sudo apt install imagemagick -y
sudo apt install php-imagick

#  convert -version
# Version: ImageMagick 6.9.10-23 Q16 x86_64 20190101 https://imagemagick.org
ls /etc/ImageMagick-6/policy.xml

sudo apt install inkscape krita scribus gimp -y

--------------------------------------------------------------------------------------------------

https://www.stickerlicker.co.uk/ekmps/shops/sticarit/images/big-700x500mm-size-portrait-format-with-multi-colour-jdm-drift-style-icons-premium-quality-vinyl-car-sticker-bombing-sheet-3230-p.jpg
https://www.stickerlicker.co.uk/big-700x500mm-size-portrait-format-with-multi-colour-jdm-drift-style-icons-premium-quality-vinyl-car-sticker-bombing-sheet-3230-p.asp

--------------------------------------------------------------------------------------------------
**** Error: ICCbased space /N value does not match the ICC profile.
 Using the number of channels from the profile.
                 Output may be incorrect.

https://stackoverflow.com/questions/62801827/why-doesnt-ghostscript-like-the-icc-profile-of-my-pdf
https://github.com/ropensci/magick/issues/189
https://bugs.ghostscript.com/show_bug.cgi?id=697223
https://unix.stackexchange.com/questions/618616/imagemagick-generated-pdf-renders-as-blank-pages-in-chrome

FIX
Use the -strip switch when creating the PDF using convert.

convert test.png -strip test.pdf
convert test.png -colorspace RGB test.pdf
convert test.png -colorspace CMYK test.pdf
--------------------------------------------------------------------------------------------------

Background color: cmyk(255,255,255,0) /
Border color: cmyk(223,223,223,0)
Matte color: cmyk(189,189,189,0)
Transparent color: cmyk(0,0,0,0) /  #ffffff

convert nancy.jpeg -colorspace cmyk -profile /usr/share/color/icc/ISOcoated_v2_300_eci.icc Nancy_with_CMYK.tif
convert output.pdf -colorspace cmyk output2.pdf


--------------------------------------------------------------------------------------------------

gs -o gray.pdf -sDEVICE=pdfwrite  -dPDFSETTINGS=/prepress  -dProcessColorModel=/DeviceGray -sProcessColorModel=DeviceGray -sColorConversionStrategy=Gray -sColorConversionStrategyForImages=Gray  rgb.pdf

convert -density 1200 -channel CMYK  -threshold 25% -strip gray.pdf bw.pdf
convert -density 600 -channel CMYK  -threshold 50% -strip gray.pdf bw.pdf

gs -o cmyk.pdf -sDEVICE=pdfwrite -sProcessColorModel=DeviceCMYK -sColorConversionStrategy=CMYK -dProcessColorModel=/DeviceCMYK -sColorConversionStrategyForImages=CMYK bw.pdf

--------------------------------------------------------------------------------------------------
https://www.dfb.de/fileadmin/_dfbdam/16988-Elf-Plus-Manual-Deutsch.pdf
https://verleih.fhstp.ac.at/upload/59df46bccd290.pdf
https://lmp.de/media/pdf/d9/47/d7/184864_powerbarx-15_manual_de_enqJzS2Et2ntpHW.pdf
--------------------------------------------------------------------------------------------------
https://www.orimi.com/pdf-test.pdf
https://www.bundesamtsozialesicherung.de/fileadmin/media/test__pdfs/Test_PDF.pdf
https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf
--------------------------------------------------------------------------------------------------

ADOBE ICC PROFILS (RGB) ADOBE ICC PROFILS (CMYK)
https://www.adobe.com/support/downloads/iccprofiles/iccprofiles_win.html
--------------------------------------------------------------------------------------------------

https://www.php.net/manual/en/imagick.setimagecolorspace.php


header("Content-type: image/jpeg");
$IMagick = new IMagick('c:\\testing\\fruit.jpg');
$IMagick->setImageColorSpace(Imagick::COLORSPACE_GRAY);
echo $IMagick;

$image = new Imagick();
$image->readImage(rgb.jpg);
$image->setImageColorSpace(Imagick::COLORSPACE_CMYK);
$image->profileImage('icc', file_get_contents(/path/CoatedFOGRA27.icc'));
$image->negateImage(FALSE, imagick::COLOR_CYAN);
$image->negateImage(FALSE, imagick::COLOR_MAGENTA);
$image->negateImage(FALSE, imagick::COLOR_YELLOW);
$image->negateImage(FALSE, imagick::COLOR_BLACK);
$image->writeImage(cmyk.jpg);



--------------------------------------------------------------------------------------------------
gs -dPDFX -dBATCH -dQUIET -dNOPAUSE -dNOOUTERSAVE -sProcessColorModel=DeviceCMYK -sColorConversionStrategy=CMYK -sColorConversionStrategyForImages=CMYK -sOutputICCProfile='ISO Coated sb.icc' -sDEVICE=pdfwrite -sOutputFile=$new_pdf $defs_file $original_pdf

gs -sDEVICE=pdfwrite -sProcessColorModel=DeviceCMYK -sColorConversionStrategy=CMYK -sColorConversionStrategyForImages=CMYK -sOutputFile=output.pdf input.pdf


--------------------------------------------------------------------------------------------------

Colors:
Look some converted color to understand the "strange" conversion:

100% yellow in pdf was converted as 98% yellow the TIF:

PDF = C:0 M:0 Y:100 K:0
TIF = C:0 M:0 Y:98  K:0
100% Magenta in pdf was converted as 1C/100M/1Y the TIF:

PDF = C:0 M:100 Y:0 K:0
TIF = C:1 M:100 Y:1  K:0
black is good (and all gray tone like 10%,20%...):

PDF = C:0 M:0 Y:0 K:100
TIF = C:0 M:0 Y:0  K:100
but full 100 is not good !?:

PDF = C:100 M:100 Y:100 K:100
TIF = C:73 M:68 Y:66  K:89
and a C100/M20 wrong too (pdf total 120 tif total 121 ?):

PDF = C:100 M:20 Y:0 K:0
TIF = C:99 M:21 Y:1  K:0


gs -dNOPAUSE -dBATCH -dSAFER
-sDEVICE=tiff32nc
-sDeviceNProfile
-dKPreserve=2
-dRenderIntent=1
-dCOLORSCREEN=false
-dNOINTERPOLATE
-dUseCIEColor
-dNOTRANSPARENCY
-dGraphicsAlphaBits=4
-dTextAlphaBits=4
-dFirstPage=1
-dLastPage=1
-r600
-sOutputICCProfile=USwebCoatedSOWPv2.icc
-sOutputFile=CMYK.tif
CMYK.pdf

gs -dNOPAUSE -dBATCH -dSAFER
-sDEVICE=tiffsep
-dKPreserve=2
-sOutputFile=CMYK.tif
-r300
-dGraphicsAlphaBits=4
-dTextAlphaBits=4
-dFirstPage=1
-dLastPage=1
CMYK.pdf

gs -sDEVICE=tiff 32nc -dNOSUBSTDEVICECOLORS -sOutputFile=CMYK.tif CMYK.pdf
--------------------------------------------------------------------------------------------------

gs \
   -sDEVICE=pdfwrite \
   -dCompatibilityLevel=1.4 \
   -dPDFSETTINGS=/printer \
   -dNOPAUSE \
   -dQUIET \
   -dBATCH \
   -sOutputFile=output.pdf \
    input.pdf

gs                          \
   -sDEVICE=pdfwrite        \
   -dCompatibilityLevel=1.4 \
   -dPDFSETTINGS=/printer   \
   -q                       \
   -o output.pdf            \
    input.pdf
--------------------------------------------------------------------------------------------------
gs -sDEVICE=pdfwrite -sOutputFile=CMYK.pdf -sColorConversionStrategy=CMYK test.pdf
--------------------------------------------------------------------------------------------------
gs \
    -o test-cmyk.pdf \
    -sDEVICE=pdfwrite \
    -sProcessColorModel=DeviceCMYK \
    -sColorConversionStrategy=CMYK \
    -sColorConversionStrategyForImages=CMYK \
    test.pdf
--------------------------------------------------------------------------------------------------
gs  \
-o cmyk.pdf  \
 -sDEVICE=pdfwrite  \
 -sProcessColorModel=DeviceCMYK  \
 -sColorConversionStrategy=CMYK  \
 -sColorConversionStrategyForImages=CMYK  \
 0115000000C.PDF

--------------------------------------------------------------------------------------------------

gs -dBATCH -dNOPAUSE -dNOCACHE \
  -sDEVICE=pdfwrite \
  -sProcessColorModel=DeviceCMYK \
  -sColorConversionStrategy=CMYK \
  -sOutputICCProfile=PSOcoated_v3.icc \
  -sDefaultRGBProfile=sRGB2014.icc \
  -dOverrideICC=true \
  -dRenderIntent=1 \
  -sOutputFile=black.cmyk.pdf\
  black.pdf


gs -q -dBATCH -dSAFER -dNOPAUSE \
-sDEVICE=tiff32nc \
-sDefaultRGBProfile=sRGB2014.icc \
-dOverrideICC \
-sOutputICCProfile=PSOcoated_v3.icc \
-sProcessColorModel=DeviceCMYK \
-sColorConversionStrategy=CMYK \
-sOutputFile=rgb.pdf \
 cmyk.tiff

--------------------------------------------------------------------------------------------------

gs \
    -o output-cmyk.pdf \
    -sDEVICE=pdfwrite \
    -dUseCIEColor \
    -sProcessColorModel=DeviceCMYK \
    -sColorConversionStrategy=CMYK \
    -sColorConversionStrategyForImages=CMYK \
     input-rgb.pdf

gs -o output.pdf -sDEVICE=pdfwrite -r2400 -dOverrideICC=true -sOutputICCProfile=/usr/share/color/icc/Fogra27L.icm -sColorConversionStrategy=CMYK -dProcessColorModel=/DeviceCMYK -dRenderIntent=3 -dDeviceGrayToK=true input.pdf

--------------------------------------------------------------------------------------------------
gs -sOutputFile=output.pdf -sDEVICE=pdfwrite -sColorConversionStrategy=Gray -dProcessColorModel=/DeviceGray -dCompatibilityLevel=1.4 input.pdf < /dev/null
gs -sDEVICE=pdfwrite -dBATCH -dNOPAUSE -dCompatibilityLevel=1.4 -dColorConversionStrategy=/sRGB -dProcessColorModel=/DeviceRGB -dUseCIEColor=true -sOutputFile=output.pdf input.ps
gs -sDEVICE=pdfwrite -dBATCH -dNOPAUSE -dCompatibilityLevel=1.4 -dColorConversionStrategy=/CMYK -dProcessColorModel=/DeviceCMYK -dUseCIEColor=true -sOutputFile=output.pdf input.ps
gs -sDEVICE=pdfwrite -dBATCH -dNOPAUSE -dCompatibilityLevel=1.4 -dNOTRANSPARENCY -dColorConversionStrategy=/sRGB -dProcessColorModel=/DeviceRGB -dColorConversionStrategyForImages=/DeviceRGB -dTextAlphaBits=4 -dGraphicsAlphaBits=4 -dUseCIEColor=true -sOutputFile=output.pdf input.pdf
--------------------------------------------------------------------------------------------------

gs -sDEVICE=jpegcmyk -dTextAlphaBits=4 -r600 -dSAFER -dBATCH -dNOPAUSE -o my_output_file.jpg my_input_file.pdf

--------------------------------------------------------------------------------------------------

gs -dSAFER \
-dBATCH \
-dNOPAUSE \
-dNOCACHE \
-dPDFX \
-sDEVICE=pdfwrite
-sColorConversionStrategy=CMYK
-sOutputFile=cmyk.pdf rgb.pdf

FROM ubuntu
RUN apt-get install -y ghostscript`

--------------------------------------------------------------------------------------------------

# Create transparent mask (we don't care about colorspace, just grab the alpha channel values)
convert -depth 8 -colorspace sRGB trans-test.pdf -alpha Extract mask.png
# Apply mask _after_ enabling alpha channel
convert \( \
        -depth 8 \
        -colorspace CMYK \
        trans-test.pdf \
        -alpha Activate \
    \) \
    mask.png -compose CopyAlpha -composite output.tif

--------------------------------------------------------------------------------------------------

should give you each page CMYK coverage in a file.
./gs -sDEVICE=inkcov -sOutputFile=out.txt input.pdf

# batch scripting
for i in *.pdf; do gs -dQUIET -sDEVICE=inkcov -o - "%i" >> coverage.txt

--------------------------------------------------------------------------------------------------

C: 0%, M: 0%, Y: 0%, K: 100%
or

C: 75%, M: 68%, Y: 67%, K: 90% (rich black)
Any idea how I can realise this?

This is the Ghostscript command used:

gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=output-cmyk.pdf -sColorConversionStrategy=CMYK -dAutoFilterColorImages=false -dAutoFilterGrayImages=false -dAutoFilterMonoImages=false -dColorImageFilter=/FlateEncode -dGrayImageFilter=/FlateEncode -dMonoImageFilter=/FlateEncode -dDownsampleGrayImages=false -dDownsampleColorImages=false -dDownsampleMonoImages=false input-rgb.pdf


gs -dBATCH -dNoOutputFonts -dNOPAUSE -dTextBlackPt=1 -dBlackPtComp=1 -sTextICCProfile -dNOCACHE -sDEVICE=pdfwrite -sProcessColorModel=DeviceCMYK -sColorConversionStrategy=CMYK -sOutputICCProfile=ps_cmyk.icc -sDefaultRGBProfile=srgb.icc -dOverrideICC=true -dRenderIntent=1 -sOutputFile=cmyk11.pdf test-rgb-cmyk.pdf

gs -o 2-output-cmyk-from-eciRGB.pdf -sDEVICE=pdfwrite  -sColorConversionStrategy=CMYK  -sSourceObjectICC=control-eciRGB_v2.txt  1-input-rgb.pdf

control.txt
Image_RGB   sRGB_to_eciCMYK_v2.icc  0   1   0
Graphic_RGB sRGB_to_eciCMYK_v2.icc  0   1   0
Text_RGB    sRGB_to_eciCMYK_v2.icc  0   1   0

gs -o 2-output-cmyk-from-eciRGB.pdf -sDEVICE=pdfwrite -dUseFastColor -dBlackText=true -sColorConversionStrategy=CMYK  -sSourceObjectICC=control.txt  1-input-rgb.pdf
gs  -o converted-to-cmky.pdf -sDEVICE=pdfwrite -sProcessColorModel=DeviceCMYK -sColorConversionStrategy=CMYK -sColorConversionStrategyForImages=CMYK ./original-srgb.pdf


gs -dSAFER -dBATCH -dNOPAUSE -dNOCACHE -sDEVICE=pdfwrite -sColorConversionStrategy=CMYK -sColorConversionStrategyForImages=CMYK \
-dProcessColorModel=/DeviceCMYK -dEncodeColorImages=false -dEncodeGrayImages=false -dEncodeMonoImages=false -sOutputFile=CMYK.PDF RGB.PDF

gs -dNOPAUSE -dBATCH -dSAFER -sDEVICE=pdfwrite  -sOutputFile=test-gs.pdf -dUseCIEColor -sProcessColorModel=DeviceRGB -dProcessColorModel=/DeviceCMYK -sColorConversionStrategy=/CMYK test.pdf
convert test.pdf -depth 8 -colorspace cmyk -alpha Off test-c.pdf

# Color PDF to CMYK:
gs -dSAFER -dBATCH -dNOPAUSE -dNOCACHE -sDEVICE=pdfwrite \
-sColorConversionStrategy=CMYK -dProcessColorModel=/DeviceCMYK \
-sOutputFile=output.pdf input.pdf

gs \
   -o test-cmyk.pdf \
   -sDEVICE=pdfwrite \
   -sProcessColorModel=DeviceCMYK \
   -sColorConversionStrategy=CMYK \
   -sColorConversionStrategyForImages=CMYK \
   -dEncodeColorImages=false \
    test.pdf

#!/bin/bash

gs \
-dPDFX \
-dBATCH \
-dNOPAUSE \
-dNOOUTERSAVE \
-sDEVICE=pdfwrite \
-sColorConversionStrategy=CMYK \
-dProcessColorModel=/DeviceCMYK \
-dPDFSETTINGS=/prepress \
-sOutputFile="${1%%.pdf}_X-3.pdf" \
PDFX_def.ps \
"$1"

# do a conversion of original PDF
$ gs -dPDFA -dBATCH -dNOPAUSE -dNOOUTERSAVE -dUseCIEColor -sProcessColorModel=DeviceCMYK -sDEVICE=pdfwrite -sOutputFile=out_pdfa.pdf test.pdf

# do a separation on the converted pdf
$ gs -sDEVICE=tiffsep -dNOPAUSE -dBATCH -dSAFER -r150x150 \
  -dFirstPage=1 -dLastPage=1 -sOutputFile=p%08d.tif out_pdfa.pdf


#!/bin/bash
# possibly ps2ps2 for keeping fonts?
pdf2ps -sOutputFile=- "$1" | gs \
-dPDFX \
-dBATCH \
-dNOPAUSE \
-dNOOUTERSAVE \
-dPDFSETTINGS=/prepress \
-dCompatibilityLevel=1.4 \
-sDEVICE=pdfwrite \
-sColorConversionStrategy=CMYK \
-sProcessColorModel=DeviceCMYK \
-dHaveTransparency=false \
-sOutputFile="${1%%.pdf}_X-3.pdf" \
PDFX_def.ps \
-


gs -q -sDEVICE=pdfwrite -sColorConversionStrategy=CMYK -o <output.pdf> <intput.pdf>

--------------------------------------------------------------------------------------------------


test.tex:

\documentclass{standalone}
\usepackage{tikz}
\begin{document}
\begin{tikzpicture}
\draw[fill=none,draw=black,line width=2pt] (0cm,0cm) rectangle (4cm,5cm);
\draw[fill=red] (1cm,1cm) circle (1cm) ;
\draw[fill=blue] (2cm,2.5cm) circle (1cm) ;
\draw[fill=green] (3cm,4cm) circle (1cm) ;
\end{tikzpicture}
\end{document}

#  build the PDF
sudo apt install texlive-latex-base -y
pdflatex test.tex

gs -sDEVICE=tiffsep -dNOPAUSE -dBATCH -dSAFER -r150x150 -sOutputFile=test%04d.tif test.pdf

convert \
test0001\(Cyan\).tif \
test0001\(Magenta\).tif \
test0001\(Yellow\).tif \
test0001\(Black\).tif \
-set colorspace CMYK -negate -combine combined.tif

convert -density 150 -flatten test.pdf test.png
convert -size 240x299 xc:white white.png

convert \
test0001\(Cyan\).tif \
test0001\(Magenta\).tif \
white.png \
white.png \
-set colorspace CMYK -negate -combine combinedCM.tif

convert combinedCM.tif combinedCM.png

--------------------------------------------------------------------------------------------------

gs \
   -o test-cmyk.pdf \
   -sDEVICE=pdfwrite \
   -sProcessColorModel=DeviceCMYK \
   -sColorConversionStrategy=CMYK \
   -sColorConversionStrategyForImages=CMYK \
    test.pdf

--------------------------------------------------------------------------------------------------

Ghostscript's pdfwrite device does not distinguish between object type, you can (with effort)
use a customised ICC profile to create a pure K output from a given input space and colour value
but there's no way to say "I want to use this profile for this bit of the file,
but this other profile for this other bit of the file".

--------------------------------------------------------------------------------------------------

collink -v -G AppleRGB.icc JapanColor2002Newspaper.icc apple_to_jNP_photo.icc
collink -v -f AppleRGB.icc JapanColor2002Newspaper.icc apple_to_jNP_neutrals.icc

control.txt:
Image_RGB   apple_to_jNP_photo.icc       0   1   0
Graphic_RGB apple_to_jNP_neutrals.icc    0   1   0
Text_RGB    apple_to_jNP_neutrals.icc    0   1   0

gs -q -sDEVICE=pdfwrite -o out.pdf -sColorConversionStrategy=CMYK -sSourceObjectICC=control.txt in.pdf

gs \
  -q -dQUIET -dSAFER -dBATCH \
  -dNOPAUSE -dNOPROMPT -dMaxBitmap=500000000 \
  -dAlignToPixels=0 -dGridFitTT=1 -sDEVICE=pngalpha \
  -dFirstPage=1 -dLastPage=3 \
  -dTextAlphaBits=4 -dGraphicsAlphaBits=4 -r72 \
  -sOutputFile=gs-%d.png tree-blackandwhite.pdf
