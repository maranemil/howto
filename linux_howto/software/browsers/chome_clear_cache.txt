
https://help.ubuntu.com/community/SwapFaq
https://kapeli.com/cheat_sheets/Chromium_Command_Line_Switches.docset/Contents/Resources/Documents/index
https://www.ghacks.net/2013/10/06/list-useful-google-chrome-command-line-switches/
https://docs.cypress.io/guides/guides/command-line
https://www.ghacks.net/2013/10/06/list-useful-google-chrome-command-line-switches/
https://github.com/GoogleChrome/chrome-launcher/blob/main/docs/chrome-flags-for-tools.md

rm -rf /home/myuser/.cache/google-chrome/*
rm -rf /home/myuser/.config/google-chrome/Default/*

--disk-cache-size=0

sudo swapoff -a; sudo swapon -a
sudo sh -c "sync; echo 3 > /proc/sys/vm/drop_caches"
sudo sysctl vm.swappiness=10
cat /proc/swaps
cat /proc/sys/vm/swappiness
sudo sync && echo 3 | sudo tee /proc/sys/vm/drop_caches

which chromium
/usr/bin/chromium

which google-chrome
/usr/bin/google-chrome

rm -rf ~/.cache/chromium
rm -rf ~/.cache/google-chrome/

pgrep -f -a 'chrome'
pgrep -f -a 'chromium-browser' | grep 'type=renderer' | grep -v "extension" | egrep -o '^[0-9]{0,}' | while read pid; do kill $pid; done
pgrep -f -a 'google-chrome' | grep 'type=renderer' | grep -v "extension" | egrep -o '^[0-9]{0,}' | while read pid; do kill $pid; done

Ctrl + Shift + w will exit all tabs

pkill --oldest chrome

ps aux | grep chrome | awk ' { print $2 } ' | xargs kill -9
pgrep chrome | xargs kill -9
ps aux | awk '/chrome/ { print $2 } ' | xargs kill -9

killall chrome
kill -9 `pidof chrome`
/usr/bin/pkill --oldest --signal TERM -f chrome
kill $(pgrep chrome)

killall --quiet --signal 15 -- chrome
killall -q -15 chrome
pkill -a -i "Google Chrome"

chrome://settings/onStartup
Memory Saver
chrome://extensions
chrome://settings
Performance
chrome://settings/performance
chrome://flags
chrome://restart


ps -fea |grep -i chrome


export LANGUAGE=en-US && google-chrome --lang=en-US,en --disable-translate --ash-force-desktop --disable-3d-apis --disable-background-mode --disable-preconnect --dns-prefetch-disable --no-experiments --purge-memory-button --no-referrers --no-pings --start-maximized --disable-default-apps -disable-features=Translate --aggressive-cache-discard --disable-notifications --new-window --disable-dev-shm-usage --block-new-web-contents



Chromium Command	Description
--ash-force-desktop	Forces uses of the desktop version of Chrome
--disable-3d-apis	Disables 3D APIs, including WebGL and Pepper 3D
--disable-accelerated-video	Disables GPU accelerated video
--disable-background-mode	Background apps won't continue to run when Chrome exits.
--disable-gpu	Disables hardware acceleration using the GPU
--disable-plugins	Prevents all plugins from running
--disable-plugins-discovery	Disables the discovery of missing plugins
--disable-preconnect	Disables speculative TCP/IP preconnections
--disable-translate	Disables the Google Translate feature
--dns-prefetch-disable	Disable DNS prefetching
--enable-kiosk-mode	Kiosk Mode for Chrome OS
--incognito	Launches Chrome directly in Incognito private browsing mode
--media-cache-size	Disk space used by media cache in bytes
--multi-profiles	Enable multiple profiles in Chrome
--new-profile-management	Enable the new profile management in Chrome
--no-experiments	Run Chrome without experiments set in chrome://flags
--no-pings	No hyperlink auditing pings
--no-referrers	Use Chrome without sending referrers
--purge-memory-button	Add purge memory button to Chrome
--reset-variation-state	Change the field trials that the browser is currently signed up for
--restore-last-session	Restore the last session on run
--ssl-version-min	Specify the minimum SSL version accepted
--start-maximized	Starts the Chrome window maximized.
--window-position	Specify the initial window position using --window-position=x,y
--window-size	Specify the initial window size using --window-size=x,y


Chromium Command

Description

–ash-force-desktop		    It’s used to force the use to desktop version.
–start-maximized		    Starts the Chrome window maximized.
–window-size			    Specify the initial window size using –window-size=x,y.
–window-position		    Specify the initial window position using –window-position=x,y.
–ssl-version-min		    Specify the minimum SSL version accepted.
–restore-last-session	    Restore the last session on run.
–purge-memory-button	    Add purge memory button to Chrome.
–no-referrers			    Use Chrome without sending referrers.
–no-pings			        No hyperlink auditing pings.
–no-experiments			    Run Chrome without experiments set in chrome://flags.
–new-profile-management		Enable the new profile management in Chrome.
–multi-profiles			    Enable multiple profiles in Chrome.
–media-cache-size		    Disk space used by media cache in bytes.
–incognito			        Launches Chrome directly in Incognito private browsing mode.
–enable-kiosk-mode		    Kiosk Mode for Chrome OS.
–disable-translate		    Disables the Google Translate feature.
–disable-preconnect		    Disables speculative TCP/IP preconnections.
–disable-plugins-discovery	Disables the discovery of missing plugins.
–disable-plugins		    Prevents all plugins from running.
–disable-gpu			    Disables hardware acceleration using the GPU.
–disable-background-mode	Background apps will be seized to continue when chrome runs.
–disable-accelerated-video	Disables GPU accelerated video.
–disable-3d-apis		    It disables the 3D API which also includes the Pepper 3D and WebGL.


##########################################################

start on startup
stop on shutdown

script
  while /bin/true; do
    if $(pidof skype); then
      test $( cat /proc/`pidof skype`/status | grep "VmSize:" | sed -re s,VmSize:\\s+,, | cut -d" " -f1 ) -gt 500000 && killall skype
    fi
    sleep 30
  done
end script
   
   
   
 Make an Upstart script in /etc/init/skype-killer.conf. Replace skype with Skype's binary name if its not skype, and replace 500000 (as in 500000 kB = 500 M) with the limit in kB's you wish to enforce for Skype virtual memory size and 30 with the number of seconds between checks.

This job will start on startup and keep running checking for skype memory usage. After you have copied this to /etc/init with sudo, do sudo start skype-killer to get it going, or reboot system. If you wish to revise memory usage, edit the skype-killer.conf and do sudo stop skype-killer; sudo start skype-killer.
   
   /////////////////
   
   
   #!/bin/sh

if [ $# -ne 2 ];
then
    echo "Invalid number of arguments"
    exit 0
fi

while true;
do
    SIZE=$(pmap $1|grep total|grep -o "[0-9]*")
    SIZE=${SIZE%%K*}
    SIZEMB=$((SIZE/1024))
    echo "Process id =$1 Size = $SIZEMB MB"
    if [ $SIZEMB -gt $2 ]; then
        printf "SIZE has exceeded.\nKilling the process......"
        kill -9 "$1"
        echo "Killed the process"
        exit 0
    else
        echo "SIZE has not yet exceeding"
    fi

    sleep 10
done
   
   ////////////////////////////
   
   
import time
import psutil

percent_threshold = 0.95

def check_memory():
    vm = psutil.virtual_memory()
    percent = vm.active / vm.total
    # Do we need to kill a process?
    if percent > percent_threshold:
        print(f"RAM usage is {percent}%")
        # Search for process using the most resident memory
        max_mem = 0
        max_ps = None
        for ps in psutil.process_iter():
            mem = ps.memory_info().rss
            if mem > max_mem:
                max_ps = ps
                max_mem = mem
        # Kill process
        cmd = " ".join(max_ps.cmdline())
        print(f"Killing {cmd}")
        print(f"using {max_mem / 2**20} MiB resident memory")
        max_ps.terminate()
        print("")

while True:
    check_memory()
    time.sleep(1.0)
   
   ''''''''
      
while sleep 30; do vmstat && echo 3 > /proc/sys/vm/drop_caches && vmstat; done

systemd-run --scope -p MemoryMax=300G {program or script}
systemd-run --scope -p MemoryMax=1G chromium-browser

test $( cat /proc/`pidof firefox`/status | grep "VmSize:" | sed -re s,VmSize:\\s+,, | cut -d" " -f1) 
while sleep 30;  do echo 1   ; done

ps -ef | grep firefox | awk -F: '{ print $1 }'
pidof 'firefox'
pgrep '^firefox$'
pidof -s firefox




