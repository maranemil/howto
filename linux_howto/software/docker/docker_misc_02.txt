

########################################
save and load docker image
########################################

https://docs.docker.com/engine/reference/commandline/save/
https://docs.docker.com/engine/reference/commandline/image_save/
https://stackoverflow.com/questions/23935141/how-to-copy-docker-images-from-one-host-to-another-without-using-a-repository
https://dockerlabs.collabnix.com/beginners/saving-images-as-tar/
https://adamtheautomator.com/docker-save-image/
https://pspdfkit.com/blog/2019/docker-import-export-vs-load-save/
https://www.baeldung.com/ops/docker-save-export
https://docs.oracle.com/cd/E37670_01/E75728/html/ch04s18.html
https://www.yawintutor.com/ora-28002-the-password-will-expire-within-7-days/

docker --help | grep -E "(export|import|load|save)"
  export      Export a container\'s filesystem as a tar archive
  import      Import the contents from a tarball to create a filesystem image
  load        Load an image from a tar archive or STDIN
  save        Save one or more images to a tar archive (streamed to STDOUT by default)



docker save image/name -o image_name.tar

docker import - mynginx < nginx.tar
docker save -o mynginx1.tar nginx
docker rmi mynginx
docker load < mynginx1.tar

docker save -o <path for generated tar file> <image name>
docker load -i <path to image tar file>

docker export container-id > arithmetic.tar


########################################
docker check image size before pull
########################################
https://stackoverflow.com/questions/33352901/get-the-size-of-a-docker-image-before-a-pull

https://hub.docker.com/_/ubuntu/tags
https://gist.github.com/MichaelSimons/fb588539dcefd9b5fdf45ba04c302db6


docker pull mcr.microsoft.com/dotnet/core/samples:dotnetapp-buster-slim
docker history mcr.microsoft.com/dotnet/core/samples:dotnetapp-buster-slim

docker inspect -f "{{ .Size }}" mcr.microsoft.com/dotnet/core/samples:dotnetapp-buster-slim | numfmt --to=si
docker image ls mcr.microsoft.com/dotnet/core/samples:dotnetapp-buster-slim

dockersize mcr.microsoft.com/dotnet/core/samples:dotnetapp-buster-slim
dockersize ghcr.io/ddelange/pycuda/runtime:3.9-master
dockersize python

https://hub.docker.com/v2/repositories/library/ubuntu/tags
https://hub.docker.com/v2/repositories/library/alpine/tags

curl -s https://hub.docker.com/v2/repositories/library/alpine/tags | \
    jq '.results[] | select(.name=="latest") | .full_size'

https://hub.docker.com/v2/repositories/mritschel/oracle12cr1_base
https://hub.docker.com/v2/repositories/mritschel/oracle12cr1_base/tags



########################################################
Dockerfile: error: 'docker-php-ext-install' does not exist and extension does not exist
########################################################
https://stackoverflow.com/questions/69148441/dockerfile-error-docker-php-ext-install-does-not-exist-and-extension-does-no
https://stackoverflow.com/questions/47671108/docker-php-ext-install-mcrypt-missing-folder
https://github.com/docker-library/php/blob/master/docker-php-ext-install
https://cloudaffaire.com/faq/docker-how-to-install-php-7-4-extension-ext-http/



FROM php:8.0-apache
RUN docker-php-ext-install bcmath && docker-php-ext-enable bcmath && \
        docker-php-ext-install calendar && docker-php-ext-enable calendar && \
        docker-php-ext-install gd && docker-php-ext-enable gd && \
        docker-php-ext-install mcrypt && docker-php-ext-enable mcrypt && \
        docker-php-ext-install pdo_mysql && docker-php-ext-enable pdo_mysql && \
        docker-php-ext-install mysqli && docker-php-ext-enable mysqli && \
        docker-php-ext-install soap && docker-php-ext-enable soap && \
        docker-php-ext-install sockets && docker-php-ext-enable sockets && \
        docker-php-ext-install exif && docker-php-ext-enable exif && \
        docker-php-ext-install wddx && docker-php-ext-enable wddx && \
        docker-php-ext-install wmlrpc && docker-php-ext-enable wmlrpc && \
        docker-php-ext-install zip && docker-php-ext-enable zip
RUN apt-get update && apt-get upgrade -y

docker-compose.yml:

version: '3.8'
services:
  php-apache-environment:
    container_name: php-apache
    build:
      context: ./php
      dockerfile: Dockerfile
    depends_on:
      - db
    volumes:
      - ./php/src:/var/www/html/
    ports:
      - 80:80
  db:
    container_name: db
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: MYSQL_DATABASE
      MYSQL_USER: MYSQL_USER
      MYSQL_PASSWORD: MYSQL_PASSWORD
    ports:
      - "9906:3306"

---------------------

FROM php:7.2-apache
FROM php:7.2-stretch

RUN apt-get update && apt-get install -y libmcrypt-dev \
    && pecl install mcrypt-1.0.4 \
    && docker-php-ext-configure mcrypt \
    && docker-php-ext-enable mcrypt

COPY ./etc/000-default.conf /etc/apache2/sites-available/

EXPOSE 80

---------------------
https://github.com/mlocati/docker-php-extension-installer
https://github.com/docker-library/php/blob/master/docker-php-ext-configure
https://stackoverflow.com/questions/59867951/docker-how-to-install-php-7-4-extension-ext-http

FROM php:${PHP_VERSION}-apache

ENV COMPOSER_ALLOW_SUPERUSER=1

EXPOSE 80
WORKDIR /${PROJECT_DIRECTORY}

# git, unzip & zip are for composer
RUN apt-get update -qq && \
    apt-get install -qy \
    git \
    gnupg \
    libfreetype6-dev \
    libjpeg62-turbo-dev \
    libmcrypt-dev \
    libicu-dev \
    libxml2-dev \
    wget \
    nano \
    unzip \
    zip && \
    curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer && \
    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# PHP Extensions
RUN docker-php-ext-install -j$(nproc) opcache pdo_mysql intl xml soap
ADD php/php.ini /usr/local/etc/php/conf.d/${PROJECT_DIRECTORY}.ini

# Apache
RUN a2enmod rewrite remoteip
ADD vhosts/vhost.conf /etc/apache2/sites-available/000-default.conf
