
#################################################################
Cannot connect to the Docker daemon
#################################################################

sudo groupadd docker
sudo usermod -aG docker $(whoami)
sudo service docker start

#################################################################
Docker logs and debug
#################################################################

https://medium.com/@betz.mark/ten-tips-for-debugging-docker-containers-cde4da841a1d

# logs
docker run -d --name=logtest alpine /bin/sh -c “while true; do sleep 2; df -h; done”
docker logs logtest

# see what is written to stdout in real time
docker run -d --name=logtest alpine /bin/sh -c “while true; do sleep 2; df -h; done”
docker attach logtest

# Execute arbitrary commands with exec
docker run -d --name=exectest alpine watch “echo ‘This is a test.’ >> /var/log/test.log”
docker exec exectest cat /var/log/test.log

# use exec to get an interactive shell in the container.
docker run -d --name=exectest alpine watch “echo ‘This is a test.’ >> /var/log/test.log”
docker exec -it exectest /bin/sh

# Add options with the CMD.
docker run -d -p 80:8000 /myrepo/mydjangoapp 0.0.0.0:8000

ENTRYPOINT [“python”, “manage.py”, “runserver”]
CMD ["0.0.0.0:8000"]

# Pause and unpause a container.
docker run -d --name=pausetest alpine /bin/sh -c “while true; do sleep 2; date; done”
docker attach pausetest
docker pause pausetest
docker unpause pausetest

# Get process stats with the top command.
docker run -d — name=toptest alpine:3.1 watch “echo ‘Testing top’”
docker top toptest

# View container details with the inspect command
docker inspect toptest

# View image layers with the history command.
docker history toptest





#################################################################
WARNING: environment variable "WORDPRESS_CONFIG_EXTRA" is set, but "wp-config.php" already exists
#################################################################

2021-11-17T16:07:15.343556908Z   The contents of this variable will _not_ be inserted into the existing "wp-config.php" file.
2021-11-17T16:07:15.343560076Z   (see https://github.com/docker-library/wordpress/issues/333 for more details)


https://github.com/docker-library/wordpress/issues/333
https://github.com/dainst/wordpress-components/blob/master/docker-entrypoint.sh
https://devtidbits.com/2019/11/02/customise-wordpress-on-docker/
https://wordpress.stackexchange.com/questions/384642/how-to-update-wp-config-file-in-docker
https://stackoverflow.com/questions/45560659/wordpress-wp-config-php-doesnt-update-in-dockers
https://devtidbits.com/2019/11/02/customise-wordpress-on-docker/
https://stackoverflow.com/questions/53197806/how-to-get-proper-docker-compose-multiline-environment-variables-formatting
https://www.mrjamiebowman.com/software-development/wordpress/docker-compose-wordpress_config_extra/
https://newbedev.com/wordpress-wp-config-php-doesn-t-update-in-dockers##
https://www.cloudytuts.com/tutorials/docker/how-to-solve-wordpress-redirects-to-localhost-8080/
https://coderevolve.com/wordpress-in-docker/

#################################################################
wordpress  docker entrypoint
#################################################################

https://github.com/dainst/wordpress-components/blob/master/docker-entrypoint.sh
https://github.com/docker-library/wordpress/blob/master/docker-entrypoint.sh
https://gitlab.umich.edu/benfa/its-bioint-test/blob/master/docker-entrypoint.sh
https://developpaper.com/question/docker-environmental-variable-problem/
https://gitalpine.de/docker/wordpress/-/blob/v5.3-1/apache/docker-entrypoint.sh
https://gitlab.uni-bayreuth.de/bt406309/FS-Homepage/-/blob/1317e027754f3908d25859b3b9830d4d2501b058/Dockerfiles/Homepage/docker-entrypoint.sh
https://git.mau.ro/mauro/docker-image-wordpress/src/branch/master/docker-entrypoint.sh?lang=pt-BR
https://git.mau.ro/mauro/docker-image-wordpress/src/branch/master/docker-entrypoint.sh?lang=uk-UA
https://bunkham.com/bashing-wordpress-docker-container-shape/
https://notabug.org/candlewaster/docker-codepress/src/master/docker-entrypoint.sh
https://www.xmatters.com/blog/how-we-included-wordpress-in-our-google-cloud-migration/


https://hub.docker.com/r/parana/jessie-wordpress/
https://cadu.dev/creating-a-docker-image-with-database-preloaded/
https://blog.stigok.com/2019/09/13/postgres-docker-configuration-and-initialisation.html
https://apache-superset.readthedocs.io/en/latest/installation.html
https://superset.apache.org/docs/installation/installing-superset-using-docker-compose
https://www.cloudbees.com/blog/understanding-dockers-cmd-and-entrypoint-instructions
https://docs.docker.com/develop/develop-images/dockerfile_best-practices/
https://docs.docker.com/engine/reference/builder/
https://www.ctl.io/developers/blog/post/dockerfile-entrypoint-vs-cmd/
https://vsupalov.com/docker-arg-env-variable-guide/
https://newbedev.com/how-do-i-use-docker-environment-variable-in-entrypoint-array



#################################################################
# RBAC: access denied
#################################################################

https://en.wikipedia.org/wiki/Role-based_access_control
https://support.mozilla.org/en-US/questions/1165357

https://search.brave.com/

127.0.0.1	jameshost.dev

freshchat / intercom

curl -X GET localhost:8888
curl -X GET jameshost.dev:8888

set in host and docker
172.19.0.1 jameshost.dev

#################################################################
set user group docker
#################################################################

https://blog.giovannidemizio.eu/2021/05/24/how-to-set-user-and-group-in-docker-compose/
https://dev.to/acro5piano/specifying-user-and-group-in-docker-i2e
https://medium.com/redbubble/running-a-docker-container-as-a-non-root-user-7d2e00f8ee15
https://stackoverflow.com/questions/44683119/dockerfile-replicate-the-host-user-uid-and-gid-to-the-image
https://medium.com/@mccode/understanding-how-uid-and-gid-work-in-docker-containers-c37a01d01cf
https://kb.iu.edu/d/adwf

# docker-compose.yml
version: '3'
services:
    app:
        image: alpine
        user: "${UID}:${GID}"

# Dockerfile
USER 1000:1000

# docker-compose.yml
web:
  image: ruby:2.4
  user: "${UID}:${GID}"

.bashrc:

export UID=${UID}
export GID=${GID}

version: '3.7'
services:
  dashboard: &dashboard
    image: netsage/dashboard:1.7.0
    user: "${UID}:${GID}"


Find a user's UID or GID in Unix
id -u username
id -g username
id -G username
id username



#################################################################
Incorrect definition of table mysql.column_stats: expected column 'hist_type' at position 9 to have type enum('SINGLE_PREC_HB','DOUBLE_PREC_HB','JSON_HB'),
#################################################################

https://github.com/photoprism/photoprism/issues/2382
https://techoverflow.net/2022/06/07/how-to-fix-docker-mariadb-correct-definition-of-table-mysql-column_stats-expected-column-hist_type-at-position-9/
https://bytefreaks.net/applications/docker/incorrect-definition-of-table-mysql-column_stats-expected-column
https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.MariaDB.html
https://jira.mariadb.org/browse/MDEV-27517
https://hub.docker.com/_/mariadb
https://mariadb.com/kb/en/mariadb-docker-environment-variables/
https://stackoverflow.com/questions/71989105/unable-to-run-mariadb-in-a-docker-container

mysql_upgrade --user=root --password=

---

environment:
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_INITDB_SKIP_TZINFO: "1"

environment:
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_INITDB_SKIP_TZINFO: "1"

---

source .env && docker-compose exec mariadb mysql_upgrade -uroot -p${MARIADB_ROOT_PASSWORD}

---

# Gain shell access to the database container
docker exec -it mariadb_alpha /bin/bash;
# In the shell of the container, we executed the following to automatically fix a variety of problems/errors
mysql_upgrade --user=root --password;

---

podman run --rm -v m57:/var/lib/mysql:Z -e MYSQL_ALLOW_EMPTY_PASSWORD=1 --name m57 mysql:5.7





#################################################################
Manage sensitive data with Docker secrets
#################################################################

https://docs.docker.com/engine/swarm/secrets/
https://docs.docker.com/engine/swarm/configs/
https://docs.docker.com/engine/swarm/services/
https://docs.docker.com/storage/volumes/
https://docs.docker.com/engine/reference/commandline/service_create/
https://dccn-docker-swarm.readthedocs.io/en/latest/tutorial/basic.html
https://github.com/Donders-Institute/docker-swarm-setup/blob/master/doc/tutorial/centos-httpd/orchestration/docker-compose.lb.yml
https://github.com/nextcloud/docker/issues/1413
https://stackoverflow.com/questions/42248198/how-to-mount-a-single-file-in-a-volume
https://blog.cubieserver.de/2019/deploying-docker-swarm-stacks-with-puppet/
https://thenewstack.io/tutorial-create-a-docker-swarm-with-persistent-storage-using-glusterfs/
http://embaby.com/blog/tag/glusterfs/
https://blog.ouvrard.it/2016/11/07/deep-dive-swarm-1/
https://tutorialmore.com/questions-1317688.htm
https://hub.docker.com/_/wordpress/?tab=reviews
https://hub.docker.com/r/bitnami/wordpress/
https://docs.docker.com/samples/wordpress/
https://docs.docker.com/storage/volumes/
https://docs.docker.com/storage/volumes/#use-a-read-only-volume


docker service create \
     --name wordpress \
     --replicas 1 \
     --network mysql_private \
     --publish published=30000,target=80 \
     --mount type=volume,source=wpdata,destination=/var/www/html \
     --secret source=mysql_password,target=wp_db_password,mode=0400 \
     -e WORDPRESS_DB_USER="wordpress" \
     -e WORDPRESS_DB_PASSWORD_FILE="/run/secrets/wp_db_password" \
     -e WORDPRESS_DB_HOST="mysql:3306" \
     -e WORDPRESS_DB_NAME="wordpress" \
     wordpress:latest


docker service create
    --name my-iis
    --publish published=8000,target=8000
    --config src=homepage,target="\inetpub\wwwroot\index.html"
    microsoft/iis:nanoserver

docker service create --name my-apache --publish 8081:80 --replicas 3 apache-php


docker stop myphp
docker run --rm -d -p 8080:80 \
-v htmldoc:/var/www/html \
--name myphp php:centos

docker stop myphp
$ docker run --rm -d -p 8080:80 \
-v ~/tmp/basic/htmldoc:/var/www/html \
--name myphp php:centos


docker exec nextcloud su - www-data -s /bin/bash -c 'PHP_MEMORY_LIMIT=512M php -f /var/www/html/cron.php'
docker exec nextcloud su --whitelist-environment=PHP_MEMORY_LIMIT - www-data -s /bin/bash -c 'PHP_MEMORY_LIMIT=512M php -f /var/www/html/cron.php'

docker run -it --mount type=bind,source=/tmp/a.txt,target=/root/a.txt alpine sh

docker run --rm -v /foo -v awesome:/bar busybox top


...

docker service create --name wordpress01 \
--replicas 1 \
--network wordpress01 \
--network traefik-net \
--label traefik.port=80 \
--label traefik.frontend.rule=Host:example.com \
-e WORDPRESS_DB_HOST=wordpress-db01 \
-e WORDPRESS_DB_PASSWORD=pAssw0rd \
-e WORDPRESS_DB_USER=root \
--mount type=bind,source=/mnt/swarm/wp1/www,target=/var/www/html \
wordpress:latest


docker service create --name wordpress-db01 \
--replicas 1 \
--network wordpress01 \
-e MYSQL_ROOT_PASSWORD=pAssw0rd \
-e MYSQL_DATABASE=wordpress \
--mount type=bind,source=/mnt/swarm/wp1/db,target=/var/lib/mysql \
mysql:latest


docker service scale wp01=5



#################################################################
docker-memory-limit
#################################################################

https://www.baeldung.com/ops/docker-memory-limit
https://faun.pub/understanding-docker-container-memory-limit-behavior-41add155236c
https://www.cloudytuts.com/tutorials/docker/how-to-check-memory-and-cpu-utilization-of-docker-container/
https://github.com/docker/compose/issues/7766

docker run -m 512m nginx
docker run -m 512m --memory-reservation=256m nginx
docker run --cpus=2 nginx
docker run --cpus=2 --cpu-shares=2000 nginx

3.1. Versions 3 and Newer With docker swarm

services:
  service:
    image: nginx
    deploy:
        resources:
            limits:
              cpus: 0.50
              memory: 512M
            reservations:
              cpus: 0.25
              memory: 128M

3.2. Version 2 With docker-compose

service:
  image: nginx
  mem_limit: 512m
  mem_reservation: 128M
  cpus: 0.5
  ports:
    - "80:80"


docker stats

docker run --rm --memory 50mb busybox free -m
docker run --memory 50m --rm -it progrium/stress --vm 1 --vm-bytes 62914560 --timeout 1s
docker run --memory 50m --memory-swap 50m --rm -it progrium/stress --vm 1 --vm-bytes 62914560 --timeout 1s




### WordPress PHP intl extension in Docker container
```

https://stackoverflow.com/questions/48674297/php-intl-extension-in-docker-container


RUN apt-get -y update \
&& apt-get install -y libicu-dev \ ### <-- Added space here
&& docker-php-ext-configure intl \
&& docker-php-ext-install intl



ARG PHP_VERSION=5.6
FROM php:${PHP_VERSION}-fpm-jessie
apt-get install -y zlib1g-dev libicu-dev g++ \
&& docker-php-ext-configure intl \
&& docker-php-ext-install intl
```

-----------------------------------------------------
Limit a container’s access to memory

https://docs.docker.com/config/containers/resource_constraints/
https://forums.docker.com/t/docker-swarm-limit-ressources/113959

-----------------------------------------------------

https://docs.docker.com/engine/install/linux-postinstall/
https://stackoverflow.com/questions/21871479/docker-cant-connect-to-docker-daemon
https://stackoverflow.com/questions/44678725/cannot-connect-to-the-docker-daemon-at-unix-var-run-docker-sock-is-the-docker
https://askubuntu.com/questions/477551/how-can-i-use-docker-without-sudo

sudo apt install docker docker.io docker-compose -y
sudo groupadd docker
sudo usermod -aG docker $USER
sudo service docker restart
sudo usermod -aG docker $(whoami)
sudo service docker start
sudo service docker stop
sudo service docker start
systemctl start docker
gpasswd -a $USER docker
sudo dockerd
sudo service docker start
reboot

-----------------------------------------------------

com.intellij.execution.process.ProcessNotCreatedException: Cannot run program "docker-compose" (

FIX
sudo apt install docker-compose -y

-----------------------------------------------------

https://docs.docker.com/engine/reference/commandline/compose_down/
https://stackoverflow.com/questions/46428420/docker-compose-up-down-stop-start-difference

docker-compose down --volumes --rmi <all|local>
docker-compose down -v --remove-orphans --rmi local
-----------------------------------------------------

docker ide

https://github.com/jchristman/docker-ide
https://www.codemag.com/article/1811021/Docker-for-Developers
https://code.visualstudio.com/docs/remote/containers
https://docs.docker.com/language/nodejs/develop/
https://medium.com/@ls12styler/docker-as-an-integrated-development-environment-95bc9b01d2c1
https://stackoverflow.com/questions/28063547/work-with-docker-and-ide
https://stackoverflow.com/questions/46724661/using-an-ide-while-developing-on-a-docker-container

-----------------------------------------------------

Dockerfile apache

https://github.com/docker-library/php/issues/931

Dockerfile

FROM php:7.4.1-apache

RUN apt-get update && apt-get install -y --no-install-recommends \
  autoconf \
  build-essential \
  apt-utils \
  zlib1g-dev \
  libzip-dev \
  unzip \
  zip \
  libmagick++-dev \
  libmagickwand-dev \
  libpq-dev \
  libfreetype6-dev \
  libjpeg62-turbo-dev \
  libpng-dev \
  libwebp-dev \
  libxpm-dev

RUN docker-php-ext-configure gd \
  --with-jpeg=/usr/include/ \
  --with-freetype=/usr/include/

RUN docker-php-ext-configure zip --with-libzip

RUN docker-php-ext-install gd intl pdo_mysql pdo_pgsql mysqli zip

RUN pecl install imagick-3.4.3

RUN pecl install xdebug && docker-php-ext-enable xdebug

RUN docker-php-ext-enable imagick

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Clear package lists
RUN apt-get clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*

# Permissions
RUN chown -R root:www-data /var/www/html
RUN chmod u+rwx,g+rx,o+rx /var/www/html
RUN find /var/www/html -type d -exec chmod u+rwx,g+rx,o+rx {} +
RUN find /var/www/html -type f -exec chmod u+rw,g+rw,o+r {} +

WORKDIR /var/www/html

RUN a2enmod rewrite
RUN a2enmod ssl

EXPOSE 80
EXPOSE 443

-----------------------------------------------------

Dockerfile apache

https://stackoverflow.com/questions/58355740/error-creating-service-web-with-unrecognized-option-with-freetype-dir-usr-in

FROM php:7.2-apache

RUN apt-get update && \
    apt-get install -y \
    python \
    libfreetype6-dev \
    libwebp-dev \
    libjpeg62-turbo-dev \
    libpng-dev \
    nano \
    git-core \
    curl \
    build-essential \
    openssl \
    libssl-dev \
    libgmp-dev \
    libldap2-dev \
    netcat \
    sqlite3 \
    libsqlite3-dev \
     && git clone https://github.com/nodejs/node.git \
     && cd node \
     && ./configure \
     && make \
     && make install

RUN  docker-php-ext-configure gd --with-freetype-dir=/usr/include/ \
 --with-webp-dir=/usr/include/  --with-jpeg-dir=/usr/include/

RUN  docker-php-ext-install gd pdo pdo_mysql pdo_sqlite zip gmp bcmath pcntl ldap sysvmsg exif \
&& a2enmod rewrite

COPY virtualhost.conf /etc/apache2/sites-enabled/000-default.conf

-----------------------------------------------------

https://forums.docker.com/t/official-php-image-how-to-add-more-extensions/118666/7

FROM php:8.1.0-fpm
RUN apt-get update
RUN apt-get install -y --no-install-recommends \
libfreetype6-dev \
libjpeg62-turbo-dev \
libpng-dev \
&& docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ \
--with-png=/usr/include/ --enable-gd-native-ttf \
&& docker-php-ext-install -j$(nproc) gd



FROM php:8.1.0-fpm
RUN apt-get update && apt-get install -y --no-install-recommends \
libfreetype6-dev \
libjpeg62-turbo-dev \
libpng-dev \
&& docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ \
--with-png=/usr/include/ --enable-gd-native-ttf \
&& docker-php-ext-install -j$(nproc) gd

-----------------------------------------------------

https://medium.com/@lmakarov/the-backlash-of-chmod-chown-mv-in-your-dockerfile-f12fe08c0b55
https://www.linuxfixes.com/2022/03/solved-docker-chmod-no-such-file-or.html
https://asciinema.org/a/206650
https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#add-or-copy
https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#run
https://stackoverflow.com/questions/56045077/dockerfile-run-chmod-not-taking-effect
https://www.oreilly.com/library/view/unix-shells-by/013066538X/013066538X_app01lev1sec9.html
https://www.linode.com/docs/guides/modify-file-permissions-with-chmod/
https://pisica.de/webtools/chmod-rechner.php
https://chmod-calculator.com/

Dockerfile

FROM httpd:alpine
COPY 100MB.zip /var/www/html
RUN chown -R www-data:www-data /var/www/html


FROM php:7.4-cli
copy . index.php
RUN chmod -R 774 /var/www/html/index.php
RUN chown -R root /var/www/html


FROM joomla:3.9-php7.2-apache
RUN apt-get update \
&& apt-get install -y apt-utils vim curl
COPY --chown=www-data:www-data ./joomla_html /var/www/html
RUN chmod -R 765 /var/www/html/
COPY ./docker/php.ini /usr/local/etc/php/conf.d/php-extras.ini
EXPOSE 80

https://asciinema.org/a/206650

FROM ubuntu
RUN mkdir /test
RUN echo "date" > /test/scripz.sh
RUN useradd -d /home/demo -ms  /bin/bash demo
USER demo
WORKDIR /home/demo
USER root
RUN /bin/bash -c 'chmod +x /test/scripz.sh'
CMD /bin/bash /test/scripz.sh






###############################################
httpd.conf
###############################################

https://web.mit.edu/rhel-doc/4/RH-DOCS/rhel-rg-de-4/s1-apache-config.html
https://httpd.apache.org/docs/2.4/configuring.html
https://httpd.apache.org/docs/current/de/configuring.html
https://linuxhint.com/apache-httpd-configuration/
https://man.openbsd.org/httpd.conf
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/5/html/deployment_guide/s1-apache-config
https://stackoverflow.com/questions/63131535/local-web-server-html-page-not-beig-processed-by-php

https://gist.github.com/karsinkk/ba2853d770c54f5d066d
https://hub.docker.com/_/httpd
https://gist.github.com/renatodarrigo/cc3365ed8f2203c2c4d1cd52b020ef64
https://hub.docker.com/r/eeacms/sdi-apache/dockerfile

sudo apt-get update
sudo apt-get install apache2



docker-compose.yml
==================
web:
  build: .
  ports:
    - "80:80"
  volumes:
    - ./public-html:/usr/local/apache2/htdocs



Without Dockerfile

docker run -dit --name my-apache-app -p 8080:80 -v "$PWD":/usr/local/apache2/htdocs/ httpd:2.4
docker run --rm httpd:2.4 cat /usr/local/apache2/conf/httpd.conf > my-httpd.conf

Dockerfile

FROM httpd:2.4
# COPY ./my-httpd.conf /usr/local/apache2/conf/httpd.conf
# ADD ./httpd.conf /usr/local/apache2/conf/httpd.conf
ADD httpd.conf /usr/local/apache2/conf/
ADD .htpasswd /etc/pass/
ADD test-wall-web /usr/local/apache2/htdocs/
ADD GoldenGateTool/main /usr/local/apache2/htdocs/Protected
RUN apt-get update -y && apt-get upgrade -y
RUN apt-get install libapache2-mod-php7.3 -y



FROM httpd:2.4.51-alpine
MAINTAINER michimau <mauro.michielon@eea.europa.eu>
#RUN apk add \
#               #vim \
#               libapache2-mod-evasive
#               #inotify-tools \
#               #vim
ADD httpd.conf /usr/local/apache2/conf/
RUN echo "Include conf/extra/ssl.conf" >> /usr/local/apache2/conf/httpd.conf
#RUN rm /etc/ldap/ldap.conf
COPY script_apache_restart.sh /
COPY httpd-foreground /usr/local/bin/httpd-foreground
#RUN chmod a+x /usr/local/bin/httpd-foreground


---

ServerName www.example.com:80


Default httpd.conf file

DefaultRuntimeDir ${APACHE_RUN_DIR}
PidFile ${APACHE_PID_FILE}
Timeout 300
KeepAlive On
MaxKeepAliveRequests 100
KeepAliveTimeout 5
User ${APACHE_RUN_USER}
Group ${APACHE_RUN_GROUP}
HostnameLookups Off
ErrorLog ${APACHE_LOG_DIR}/error.log
LogLevel warn
IncludeOptional mods-enabled/*.load
IncludeOptional mods-enabled/*.conf
Include ports.conf
<Directory />
        Options FollowSymLinks
        AllowOverride None
        Require all denied
</Directory>

<Directory /usr/share>
        AllowOverride None
        Require all granted
</Directory>

<Directory /var/www/>
        Options Indexes FollowSymLinks
        AllowOverride None
        Require all granted
</Directory>
AccessFileName .htaccess
<FilesMatch "^\.ht">
        Require all denied
</FilesMatch>

LogFormat "%v:%p %h %l %u %t "%r" %>s %O "%{Referer}i" "%{User-Agent}i"" vhost_combined
LogFormat "%h %l %u %t "%r" %>s %O "%{Referer}i" "%{User-Agent}i"" combined
LogFormat "%h %l %u %t "%r" %>s %O" common
LogFormat "%{Referer}i -> %U" referer
LogFormat "%{User-agent}i" agent

IncludeOptional conf-enabled/*.conf
IncludeOptional sites-enabled/*.conf

....................

<Location /server-status>
    SetHandler server-status
    Order deny,allow
    Deny from all
    Allow from <.example.com>
</Location>


########################################################
docker python
########################################################

https://hub.docker.com/_/python
https://stackoverflow.com/questions/62554991/how-do-i-install-python-on-alpine-linux

# Install python/pip
ENV PYTHONUNBUFFERED=1
RUN apk add --update --no-cache python3 && ln -sf python3 /usr/bin/python
# apk add --no-cache python3 py3-pip
RUN python3 -m ensurepip
RUN pip3 install --no-cache --upgrade pip setuptools

https://pythonspeed.com/articles/base-image-python-docker-images/
https://pythonspeed.com/articles/switch-python-3.10/
https://pythonspeed.com/articles/alpine-docker-python/

python
Debian 11	Aug 2021	Aug 2025	debian:11	3.9
Ubuntu 20.04	Apr 2020	Apr 2025	ubuntu:20.04	3.9, 3.8
Ubuntu 22.04	Apr 2022	Apr 2027	ubuntu:22.04	3.10



