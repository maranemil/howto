

######################################
how to change commit message on github
######################################

https://graphite.dev/guides/how-to-change-commit-message-on-github
https://www.educative.io/answers/how-to-change-a-git-commit-message-after-a-push
https://stackoverflow.com/questions/8981194/changing-git-commit-message-after-push-given-that-no-one-pulled-from-remote
https://stackoverflow.com/questions/12470029/how-to-commit-no-change-and-new-message
https://www.conventionalcommits.org/en/v1.0.0-beta.2/#summary
https://stackoverflow.com/questions/179123/how-to-modify-existing-unpushed-commit-messages
https://docs.github.com/en/pull-requests/committing-changes-to-your-project/creating-and-editing-commits/changing-a-commit-message
https://stackoverflow.com/questions/253055/how-do-i-push-amended-commit-to-the-remote-git-repository


git commit --amend -m "fix: message #patch"
git push --force  /// git push -f
git log

-----------------

Empty commit with a message
git commit --allow-empty -m "Empty test commit"

Empty commit with an empty message but you will be asked to type the message
git commit --allow-empty --allow-empty-message

Empty commit with an empty message
git commit --allow-empty --allow-empty-message -m ""

-----------------

///// Changing the message of the most recently pushed commit /////

Follow the steps above to amend the commit message.
Use the push --force-with-lease command to force push over the old commit.
git push --force-with-lease origin EXAMPLE-BRANCH

-----------------

Changing the message of older or multiple commit messages

If you need to amend the message for multiple commits or an older commit, you can use interactive rebase, then force push to change the commit history.
On the command line, navigate to the repository that contains the commit you want to amend.
Use the git rebase -i HEAD~n command to display a list of the last n commits in your default text editor.

# Displays a list of the last 3 commits on the current branch
$ git rebase -i HEAD~3

The list will look similar to the following:

pick e499d89 Delete CNAME
pick 0c39034 Better README
pick f7fde4a Change the commit message but push the same commit.

Replace pick with reword before each commit message you want to change.

pick e499d89 Delete CNAME
reword 0c39034 Better README
reword f7fde4a Change the commit message but push the same commit.
Save and close the commit list file.

In each resulting commit file, type the new commit message, save the file, and close it.

When you're ready to push your changes to GitHub, use the push --force command to force push over the old commit.

git push --force origin EXAMPLE-BRANCH